; Listing generated by Microsoft (R) Optimizing Compiler Version 19.37.32822.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_C@_02PBFOLPKM@?$FN?5@			; `string'
PUBLIC	??_C@_09BEOCNAAM@?5at?5line?5@			; `string'
PUBLIC	??_C@_0BB@DHAIOKED@?$FLjson?4exception?4@	; `string'
PUBLIC	??_C@_09LIPKCAOI@?0?5column?5@			; `string'
PUBLIC	??_C@_02MOLJINC@?3?3@				; `string'
PUBLIC	??_C@_02LJALELK@?$CJ?$DL@			; `string'
PUBLIC	??_C@_02FKHNAOPL@__@				; `string'
PUBLIC	??_C@_07DIBCDNGL@struct?5@			; `string'
PUBLIC	??_C@_06EBOPLIP@Parent@				; `string'
PUBLIC	??_C@_0O@BNONFCHB@Reader?4Align?$CI@		; `string'
PUBLIC	??_C@_0O@PIMACOKL@Writer?4Align?$CI@		; `string'
PUBLIC	??_C@_0BA@IGEPLIGJ@?3?3Read?$CIReader?$CJ?$DL@	; `string'
PUBLIC	??_C@_0BB@BIMOPEDO@?3?3Write?$CIWriter?$CJ?$DL@	; `string'
PUBLIC	??_C@_02MAHDAOBJ@hk@				; `string'
PUBLIC	??_C@_0L@HNABOCMF@?5?3?5public?5@		; `string'
PUBLIC	??_C@_0BD@DMEJBBKG@?5m_primitiveBase?$DL?6@	; `string'
PUBLIC	??_C@_01GPOEFGEJ@?7@				; `string'
PUBLIC	??_C@_03NMMCOAOG@?5?$HL?6@			; `string'
PUBLIC	??_C@_0FO@DHIHCNDI@?5?3?5public?5PhiveBinaryVectorRead@ ; `string'
PUBLIC	??_C@_04BDAIJBLK@Kind@				; `string'
PUBLIC	??_C@_05HPPFDPIF@Array@				; `string'
PUBLIC	??_C@_0DO@BCDIPMIC@Reader?4ReadStruct?$CI?$CGm_primitiveB@ ; `string'
PUBLIC	??_C@_0GG@MKJOKMIO@Writer?4WriteRawUnsafeFixed?$CIrein@ ; `string'
PUBLIC	??_C@_07CNMHPEMB@SubType@			; `string'
PUBLIC	??_C@_08PBGGBBJB@?1sizeof?$CI@			; `string'
PUBLIC	??_C@_08ICBABEDP@hkFpMath@			; `string'
PUBLIC	??_C@_04BOLKHABD@?$CJ?$FN?$DL?6@		; `string'
PUBLIC	??_C@_0GH@NGNNMFPM@Writer?4WriteRawUnsafeFixed?$CIrein@ ; `string'
PUBLIC	??_C@_07MLEFNJG@Pointer@			; `string'
PUBLIC	??_C@_0BB@LPHDECH@?5m_subTypeArray?$FL@		; `string'
PUBLIC	??_C@_0DP@NCCOFNFG@Reader?4ReadStruct?$CI?$CGm_subTypeArr@ ; `string'
PUBLIC	??_C@_0N@OMPJNBEE@DeclaredName@			; `string'
PUBLIC	??_C@_02HNJCDPAF@m_@				; `string'
PUBLIC	??_C@_0BH@DJOMFKAE@template?5?$DMtypename?5T?$DO?6@ ; `string'
PUBLIC	??_C@_0N@JGIAHIGF@Declarations@			; `string'
PUBLIC	??_C@_02EGAGMKJ@T?$CK@				; `string'
PUBLIC	??_C@_04JNFDGKJJ@T?$FLN?$FN@			; `string'
PUBLIC	??_C@_07EODJIPPN@Address@			; `string'
PUBLIC	??_C@_0O@IFFNGCBO@ParentAddress@		; `string'
PUBLIC	??_C@_07CBKKOCFO@hkArray@			; `string'
PUBLIC	??_C@_0L@OOBJEGIO@hkRelArray@			; `string'
PUBLIC	??_C@_03LHKGCLJD@?$FLN?$FN@			; `string'
PUBLIC	??_C@_0BO@OHFHCIHK@template?5?$DMtypename?5T?0?5int?5N?$DO?6@ ; `string'
PUBLIC	??_C@_02NCGPMEBG@?$DL?6@			; `string'
PUBLIC	??_C@_03NPKONFAB@?$CC?$CJ?$DL@			; `string'
PUBLIC	??_C@_08MDBEEMA@hkRefPtr@			; `string'
PUBLIC	??_C@_0N@ICHKEMIB@std?3?3vector?$DM@		; `string'
PUBLIC	??_C@_03DLMPDLAN@?$DO?$CI?$CG@			; `string'
PUBLIC	??_C@_0BE@KNOCKEAD@Reader?4ReadHkArray?$DM@	; `string'
PUBLIC	??_C@_04IABHFFNB@?$CJ?0?5?$CC@			; `string'
PUBLIC	??_C@_09HODNEBMG@?0?5sizeof?$CI@		; `string'
PUBLIC	??_C@_03IKPFCAA@?$CJ?$CJ?$DL@			; `string'
PUBLIC	??_C@_0BE@EFHGHDJM@Reader?4ReadStruct?$CI?$CG@	; `string'
PUBLIC	??_C@_0BL@BJIDNMMB@Writer?4QueryHkArrayWrite?$CI?$CC@ ; `string'
PUBLIC	??_C@_0BF@JAIHFHGL@Writer?4WriteHkArray?$DM@	; `string'
PUBLIC	??_C@_0P@HGJCPFDI@?4Read?$CIReader?$CJ?$DL@	; `string'
PUBLIC	??_C@_0BN@BJAEFHNB@Writer?4QueryHkPointerWrite?$CI?$CC@ ; `string'
PUBLIC	??_C@_0L@LOBCJAO@?$CJ?0?5sizeof?$CI@		; `string'
PUBLIC	??_C@_0DL@HGKCEIMA@Writer?4WriteRawUnsafeFixed?$CIrein@ ; `string'
PUBLIC	??_C@_0BA@EFCEIBB@?4Write?$CIWriter?$CJ?$DL@	; `string'
PUBLIC	??_C@_0O@OEKMFJEA@?0?5sizeof?$CIT?$CJ?$CJ?$DL@	; `string'
PUBLIC	??_C@_0BA@LCOIIKIK@?4m_ptr?0?5sizeof?$CI@	; `string'
PUBLIC	??_C@_0BH@NBJPKPMN@Writer?4WriteHkPointer?$DM@	; `string'
PUBLIC	??_C@_0BL@HJOJCKPE@Writer?4WriteHkPointer?$DMT?$DO?$CI?$CG@ ; `string'
PUBLIC	??_C@_0P@PIEMPCOE@?$FL0?$FN?0?5sizeof?$CIm_@	; `string'
PUBLIC	??_C@_0BK@LCJBPMLM@Reader?4ReadHkPointer?$DMT?$DO?$CI?$CG@ ; `string'
PUBLIC	??_C@_0P@PGCHBHEK@?0?5sizeof?$CIT?$CJ?0?5?$CC@	; `string'
PUBLIC	??_C@_0DN@MONBHBKG@Writer?4WriteRawUnsafeFixed?$CIrein@ ; `string'
PUBLIC	??_C@_0EB@FDDMNIBD@?6?7virtual?5void?5Read?$CIPhiveBinary@ ; `string'
PUBLIC	??_C@_0BG@GJNELJAO@Reader?4ReadStruct?$CI?$CGm_@ ; `string'
PUBLIC	??_C@_0BA@IMAGFDPC@?$FL0?$FN?$CJ?0?5sizeof?$CIm_@ ; `string'
PUBLIC	??_C@_0EC@NPGFLEMP@?6?7virtual?5void?5Write?$CIPhiveBinar@ ; `string'
PUBLIC	??_C@_03FGINLMGM@?7?7?6@			; `string'
PUBLIC	??_C@_02NOKNKGCL@?7?7@				; `string'
PUBLIC	??_C@_03FHFHMOA@?7?$HN?6@			; `string'
PUBLIC	??_C@_0BB@GBBPBDAB@cannot?5get?5value@		; `string'
PUBLIC	??_C@_03JFDPLKFJ@?$HN?$DL?6@			; `string'
PUBLIC	??_C@_02PHMGELLB@?6?6@				; `string'
PUBLIC	??_C@_0M@BJIBBOFC@parse?5error@			; `string'
PUBLIC	??_C@_0M@DKBLOJA@parse_error@			; `string'
PUBLIC	??_C@_0BB@NIGHFCLN@invalid_iterator@		; `string'
PUBLIC	??_C@_05MFEJDJP@value@				; `string'
PUBLIC	??_C@_0P@ENHBMBLC@while?5parsing?5@		; `string'
PUBLIC	??_C@_02KFKPNHPM@?9?5@				; `string'
PUBLIC	??_C@_0DD@MKOBOCJE@cannot?5use?5operator?$FL?$FN?5with?5a?5st@ ; `string'
PUBLIC	??_C@_0O@DLFJJHJG@syntax?5error?5@		; `string'
PUBLIC	??_C@_0M@DKPGADPC@?$DL?5expected?5@		; `string'
PUBLIC	??_C@_08HEDMEGDA@?$DMU?$CL?$CF?44X?$DO@		; `string'
PUBLIC	??_C@_0P@CPMJEHAD@?$DL?5last?5read?3?5?8@	; `string'
PUBLIC	??_C@_0M@GHJKFFPF@unexpected?5@			; `string'
PUBLIC	??_C@_07GOBOHMJA@boolean@			; `string'
PUBLIC	??_C@_06FNFBAEBE@binary@			; `string'
PUBLIC	??_C@_06IEOJBDIK@object@			; `string'
PUBLIC	??_C@_05HIFJDKLD@array@				; `string'
PUBLIC	??_C@_0CN@IONLHPJF@invalid?5BOM?$DL?5must?5be?50xEF?50xBB?5@ ; `string'
PUBLIC	??_C@_0BA@NMKHNIFD@invalid?5literal@		; `string'
PUBLIC	??_C@_09BHELGMBL@discarded@			; `string'
PUBLIC	??_C@_06EBGNBFIA@number@			; `string'
PUBLIC	??_C@_0O@GPPJPPBD@false?5literal@		; `string'
PUBLIC	??_C@_0N@LCPDBNFG@null?5literal@		; `string'
PUBLIC	??_C@_0BA@JFDABGPH@?$DMuninitialized?$DO@	; `string'
PUBLIC	??_C@_0N@GBJNOFKB@true?5literal@		; `string'
PUBLIC	??_C@_03FJHCMEFA@?8?$FL?8@			; `string'
PUBLIC	??_C@_03GBDPICLA@?8?$HL?8@			; `string'
PUBLIC	??_C@_0P@JJFCJNC@string?5literal@		; `string'
PUBLIC	??_C@_0P@CMLFDPOO@number?5literal@		; `string'
PUBLIC	??_C@_03BAGHGFEH@?8?3?8@			; `string'
PUBLIC	??_C@_03IMMLKIF@?8?0?8@				; `string'
PUBLIC	??_C@_03FNPPLIOC@?8?$FN?8@			; `string'
PUBLIC	??_C@_03GFLCPOAC@?8?$HN?8@			; `string'
PUBLIC	??_C@_0BH@EOPOIFBB@?8?$FL?8?0?5?8?$HL?8?0?5or?5a?5literal@ ; `string'
PUBLIC	??_C@_0O@IDJJBCJJ@unknown?5token@		; `string'
PUBLIC	??_C@_0O@JLFFEAGH@?$DMparse?5error?$DO@		; `string'
PUBLIC	??_C@_0N@KMCIHGPC@end?5of?5input@		; `string'
PUBLIC	??_C@_0DL@FABMJCCP@invalid?5number?$DL?5expected?5?8?$CL?8?0?5?8@ ; `string'
PUBLIC	??_C@_0DD@LINOMLFL@invalid?5number?$DL?5expected?5digit?5@ ; `string'
PUBLIC	??_C@_0CJ@CDLKIENK@invalid?5number?$DL?5expected?5digit?5@ ; `string'
PUBLIC	??_C@_0CJ@CBPMDKID@invalid?5number?$DL?5expected?5digit?5@ ; `string'
PUBLIC	??_C@_0CG@MLGKFPBE@invalid?5string?3?5missing?5closing@ ; `string'
PUBLIC	??_C@_0DG@LMKKCLLH@invalid?5string?3?5?8?2u?8?5must?5be?5fo@ ; `string'
PUBLIC	??_C@_0CG@NNDMIEDH@invalid?5comment?$DL?5missing?5closin@ ; `string'
PUBLIC	??_C@_0DA@PAGCIHNF@invalid?5comment?$DL?5expecting?5?8?1?8?5@ ; `string'
PUBLIC	??_C@_0DE@FDKDLPFL@invalid?5string?3?5forbidden?5chara@ ; `string'
PUBLIC	??_C@_0EJ@NABLKLLF@invalid?5string?3?5control?5charact@ ; `string'
PUBLIC	??_C@_0EM@NBBIGKDA@invalid?5string?3?5surrogate?5U?$CLD80@ ; `string'
PUBLIC	??_C@_0EE@JEFCKMMK@invalid?5string?3?5surrogate?5U?$CLDC0@ ; `string'
PUBLIC	??_C@_0EJ@BPGBHIAL@invalid?5string?3?5control?5charact@ ; `string'
PUBLIC	??_C@_0EJ@FKCGPJCG@invalid?5string?3?5control?5charact@ ; `string'
PUBLIC	??_C@_0EJ@CGIOMNAN@invalid?5string?3?5control?5charact@ ; `string'
PUBLIC	??_C@_0EJ@OKNGOHIK@invalid?5string?3?5control?5charact@ ; `string'
PUBLIC	??_C@_0EJ@FMJJFDDO@invalid?5string?3?5control?5charact@ ; `string'
PUBLIC	??_C@_0EO@HAMNCDCJ@invalid?5string?3?5control?5charact@ ; `string'
PUBLIC	??_C@_0EJ@GPLGMBKM@invalid?5string?3?5control?5charact@ ; `string'
PUBLIC	??_C@_0EJ@JAMEJLH@invalid?5string?3?5control?5charact@ ; `string'
PUBLIC	??_C@_0EI@DPPPKLPC@invalid?5string?3?5control?5charact@ ; `string'
PUBLIC	??_C@_0EO@IFHEDFEP@invalid?5string?3?5control?5charact@ ; `string'
PUBLIC	??_C@_0EO@GMAPOODH@invalid?5string?3?5control?5charact@ ; `string'
PUBLIC	??_C@_0EO@BDKKLBCN@invalid?5string?3?5control?5charact@ ; `string'
PUBLIC	??_C@_0EI@FBMHLBEA@invalid?5string?3?5control?5charact@ ; `string'
PUBLIC	??_C@_0EJ@MNJGJMON@invalid?5string?3?5control?5charact@ ; `string'
PUBLIC	??_C@_0EO@PJJBEEPG@invalid?5string?3?5control?5charact@ ; `string'
PUBLIC	??_C@_0EI@LAJMIDAP@invalid?5string?3?5control?5charact@ ; `string'
PUBLIC	??_C@_0EJ@LBJBPEEN@invalid?5string?3?5control?5charact@ ; `string'
PUBLIC	??_C@_0EJ@PDDJNMLF@invalid?5string?3?5control?5charact@ ; `string'
PUBLIC	??_C@_0EJ@MKMIGOL@invalid?5string?3?5control?5charact@ ; `string'
PUBLIC	??_C@_0EJ@OPAPENBO@invalid?5string?3?5control?5charact@ ; `string'
PUBLIC	??_C@_0EJ@MJEDHOMH@invalid?5string?3?5control?5charact@ ; `string'
PUBLIC	??_C@_0EJ@CMNKNMME@invalid?5string?3?5control?5charact@ ; `string'
PUBLIC	??_C@_0EJ@KGLCIOHO@invalid?5string?3?5control?5charact@ ; `string'
PUBLIC	??_C@_0EJ@DANDDHBM@invalid?5string?3?5control?5charact@ ; `string'
PUBLIC	??_C@_0EJ@DKHNKOP@invalid?5string?3?5control?5charact@ ; `string'
PUBLIC	??_C@_0EI@LHNMAEPO@invalid?5string?3?5control?5charact@ ; `string'
PUBLIC	??_C@_0EI@PODKIIEG@invalid?5string?3?5control?5charact@ ; `string'
PUBLIC	??_C@_0EJ@GHGHBGJE@invalid?5string?3?5control?5charact@ ; `string'
PUBLIC	??_C@_0EI@BDNODKJO@invalid?5string?3?5control?5charact@ ; `string'
PUBLIC	??_C@_0CG@DBODJMKB@invalid?5string?3?5ill?9formed?5UTF?9@ ; `string'
PUBLIC	??_C@_0EI@EECAIDOI@invalid?5string?3?5control?5charact@ ; `string'
PUBLIC	??_C@_0EI@NGMGHBHA@invalid?5string?3?5control?5charact@ ; `string'
PUBLIC	??_C@_0DA@OIGMJCHJ@961c151d2e87f2686a955a9be24d316@ ; `string'
PUBLIC	??_C@_0DB@MMKEGCHK@cannot?5compare?5iterators?5of?5dif@ ; `string'
PUBLIC	??_C@_0BG@EOMJEIFA@vector?$DMbool?$DO?5too?5long@ ; `string'
PUBLIC	??_C@_0BB@NAEMOGCE@object?5separator@		; `string'
PUBLIC	??_C@_0BK@GBHGKIGD@number?5overflow?5parsing?5?8@ ; `string'
PUBLIC	??_C@_0L@GEOKNAJI@object?5key@			; `string'
PUBLIC	??_C@_0M@DLKELGHM@other_error@			; `string'
PUBLIC	??_C@_0BH@FCBMNGHJ@excessive?5array?5size?3?5@	; `string'
PUBLIC	??_C@_0GG@OICGGDEO@attempting?5to?5parse?5an?5empty?5in@ ; `string'
PUBLIC	??_C@_0L@CJHFOHFM@type_error@			; `string'
PUBLIC	??_C@_0N@EPJFPCBB@out_of_range@			; `string'
PUBLIC	??_C@_0CE@BGJPELCC@iterator?5does?5not?5fit?5current?5v@ ; `string'
PUBLIC	??_C@_0BI@JLEGJFPM@excessive?5object?5size?3?5@	; `string'
PUBLIC	??_C@_0BN@GPCBHMHC@type?5must?5be?5string?0?5but?5is?5@ ; `string'
PUBLIC	??_C@_0BN@EAGLCAOD@type?5must?5be?5number?0?5but?5is?5@ ; `string'
PUBLIC	??_C@_0BG@OAOABPIO@iterator?5out?5of?5range@	; `string'
PUBLIC	??_C@_0BJ@NPKCAHHP@cannot?5use?5erase?$CI?$CJ?5with?5@ ; `string'
PUBLIC	??_7other_error@detail@json_abi_v3_11_3@nlohmann@@6B@ ; nlohmann::json_abi_v3_11_3::detail::other_error::`vftable'
PUBLIC	??_R0?AVexception@detail@json_abi_v3_11_3@nlohmann@@@8 ; nlohmann::json_abi_v3_11_3::detail::exception `RTTI Type Descriptor'
PUBLIC	??_R4parse_error@detail@json_abi_v3_11_3@nlohmann@@6B@ ; nlohmann::json_abi_v3_11_3::detail::parse_error::`RTTI Complete Object Locator'
PUBLIC	_CTA3?AVparse_error@detail@json_abi_v3_11_3@nlohmann@@
PUBLIC	??_7out_of_range@detail@json_abi_v3_11_3@nlohmann@@6B@ ; nlohmann::json_abi_v3_11_3::detail::out_of_range::`vftable'
PUBLIC	??_7invalid_iterator@detail@json_abi_v3_11_3@nlohmann@@6B@ ; nlohmann::json_abi_v3_11_3::detail::invalid_iterator::`vftable'
PUBLIC	_CT??_R0?AVtype_error@detail@json_abi_v3_11_3@nlohmann@@@8??0type_error@detail@json_abi_v3_11_3@nlohmann@@QEAA@AEBV0123@@Z56
PUBLIC	??_7exception@detail@json_abi_v3_11_3@nlohmann@@6B@ ; nlohmann::json_abi_v3_11_3::detail::exception::`vftable'
PUBLIC	??_R3exception@detail@json_abi_v3_11_3@nlohmann@@8 ; nlohmann::json_abi_v3_11_3::detail::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R3other_error@detail@json_abi_v3_11_3@nlohmann@@8 ; nlohmann::json_abi_v3_11_3::detail::other_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	_TI3?AVother_error@detail@json_abi_v3_11_3@nlohmann@@
PUBLIC	?value@?$static_const@Uto_json_fn@detail@json_abi_v3_11_3@nlohmann@@@detail@json_abi_v3_11_3@nlohmann@@2Uto_json_fn@234@B ; nlohmann::json_abi_v3_11_3::detail::static_const<nlohmann::json_abi_v3_11_3::detail::to_json_fn>::value
PUBLIC	?value@?$static_const@Ufrom_json_fn@detail@json_abi_v3_11_3@nlohmann@@@detail@json_abi_v3_11_3@nlohmann@@2Ufrom_json_fn@234@B ; nlohmann::json_abi_v3_11_3::detail::static_const<nlohmann::json_abi_v3_11_3::detail::from_json_fn>::value
PUBLIC	_CT??_R0?AVother_error@detail@json_abi_v3_11_3@nlohmann@@@8??0other_error@detail@json_abi_v3_11_3@nlohmann@@QEAA@AEBV0123@@Z56
PUBLIC	??_R3invalid_iterator@detail@json_abi_v3_11_3@nlohmann@@8 ; nlohmann::json_abi_v3_11_3::detail::invalid_iterator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R4exception@detail@json_abi_v3_11_3@nlohmann@@6B@ ; nlohmann::json_abi_v3_11_3::detail::exception::`RTTI Complete Object Locator'
PUBLIC	??_R2parse_error@detail@json_abi_v3_11_3@nlohmann@@8 ; nlohmann::json_abi_v3_11_3::detail::parse_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@invalid_iterator@detail@json_abi_v3_11_3@nlohmann@@8 ; nlohmann::json_abi_v3_11_3::detail::invalid_iterator::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4type_error@detail@json_abi_v3_11_3@nlohmann@@6B@ ; nlohmann::json_abi_v3_11_3::detail::type_error::`RTTI Complete Object Locator'
PUBLIC	_CT??_R0?AVexception@detail@json_abi_v3_11_3@nlohmann@@@8??0exception@detail@json_abi_v3_11_3@nlohmann@@QEAA@AEBV0123@@Z56
PUBLIC	??_R2out_of_range@detail@json_abi_v3_11_3@nlohmann@@8 ; nlohmann::json_abi_v3_11_3::detail::out_of_range::`RTTI Base Class Array'
PUBLIC	??_R0?AVtype_error@detail@json_abi_v3_11_3@nlohmann@@@8 ; nlohmann::json_abi_v3_11_3::detail::type_error `RTTI Type Descriptor'
PUBLIC	??_R3type_error@detail@json_abi_v3_11_3@nlohmann@@8 ; nlohmann::json_abi_v3_11_3::detail::type_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AVparse_error@detail@json_abi_v3_11_3@nlohmann@@@8 ; nlohmann::json_abi_v3_11_3::detail::parse_error `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVinvalid_iterator@detail@json_abi_v3_11_3@nlohmann@@@8??0invalid_iterator@detail@json_abi_v3_11_3@nlohmann@@QEAA@AEBV0123@@Z56
PUBLIC	??_R2invalid_iterator@detail@json_abi_v3_11_3@nlohmann@@8 ; nlohmann::json_abi_v3_11_3::detail::invalid_iterator::`RTTI Base Class Array'
PUBLIC	_CTA3?AVtype_error@detail@json_abi_v3_11_3@nlohmann@@
PUBLIC	??_R1A@?0A@EA@parse_error@detail@json_abi_v3_11_3@nlohmann@@8 ; nlohmann::json_abi_v3_11_3::detail::parse_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	_CT??_R0?AVparse_error@detail@json_abi_v3_11_3@nlohmann@@@8??0parse_error@detail@json_abi_v3_11_3@nlohmann@@QEAA@AEBV0123@@Z64
PUBLIC	??_R4other_error@detail@json_abi_v3_11_3@nlohmann@@6B@ ; nlohmann::json_abi_v3_11_3::detail::other_error::`RTTI Complete Object Locator'
PUBLIC	??_R1A@?0A@EA@type_error@detail@json_abi_v3_11_3@nlohmann@@8 ; nlohmann::json_abi_v3_11_3::detail::type_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVinvalid_iterator@detail@json_abi_v3_11_3@nlohmann@@@8 ; nlohmann::json_abi_v3_11_3::detail::invalid_iterator `RTTI Type Descriptor'
PUBLIC	_CTA3?AVout_of_range@detail@json_abi_v3_11_3@nlohmann@@
PUBLIC	??_R2exception@detail@json_abi_v3_11_3@nlohmann@@8 ; nlohmann::json_abi_v3_11_3::detail::exception::`RTTI Base Class Array'
PUBLIC	??_R0?AVother_error@detail@json_abi_v3_11_3@nlohmann@@@8 ; nlohmann::json_abi_v3_11_3::detail::other_error `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@EA@other_error@detail@json_abi_v3_11_3@nlohmann@@8 ; nlohmann::json_abi_v3_11_3::detail::other_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	_CTA3?AVinvalid_iterator@detail@json_abi_v3_11_3@nlohmann@@
PUBLIC	??_R1A@?0A@EA@out_of_range@detail@json_abi_v3_11_3@nlohmann@@8 ; nlohmann::json_abi_v3_11_3::detail::out_of_range::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4out_of_range@detail@json_abi_v3_11_3@nlohmann@@6B@ ; nlohmann::json_abi_v3_11_3::detail::out_of_range::`RTTI Complete Object Locator'
PUBLIC	??_R2type_error@detail@json_abi_v3_11_3@nlohmann@@8 ; nlohmann::json_abi_v3_11_3::detail::type_error::`RTTI Base Class Array'
PUBLIC	??_R4invalid_iterator@detail@json_abi_v3_11_3@nlohmann@@6B@ ; nlohmann::json_abi_v3_11_3::detail::invalid_iterator::`RTTI Complete Object Locator'
PUBLIC	_CT??_R0?AVout_of_range@detail@json_abi_v3_11_3@nlohmann@@@8??0out_of_range@detail@json_abi_v3_11_3@nlohmann@@QEAA@AEBV0123@@Z56
PUBLIC	_TI3?AVout_of_range@detail@json_abi_v3_11_3@nlohmann@@
PUBLIC	??_7type_error@detail@json_abi_v3_11_3@nlohmann@@6B@ ; nlohmann::json_abi_v3_11_3::detail::type_error::`vftable'
PUBLIC	_CTA3?AVother_error@detail@json_abi_v3_11_3@nlohmann@@
PUBLIC	??_R2other_error@detail@json_abi_v3_11_3@nlohmann@@8 ; nlohmann::json_abi_v3_11_3::detail::other_error::`RTTI Base Class Array'
PUBLIC	_TI3?AVparse_error@detail@json_abi_v3_11_3@nlohmann@@
PUBLIC	??_7parse_error@detail@json_abi_v3_11_3@nlohmann@@6B@ ; nlohmann::json_abi_v3_11_3::detail::parse_error::`vftable'
PUBLIC	_TI3?AVtype_error@detail@json_abi_v3_11_3@nlohmann@@
PUBLIC	??_R3parse_error@detail@json_abi_v3_11_3@nlohmann@@8 ; nlohmann::json_abi_v3_11_3::detail::parse_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R1A@?0A@EA@exception@detail@json_abi_v3_11_3@nlohmann@@8 ; nlohmann::json_abi_v3_11_3::detail::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVout_of_range@detail@json_abi_v3_11_3@nlohmann@@@8 ; nlohmann::json_abi_v3_11_3::detail::out_of_range `RTTI Type Descriptor'
PUBLIC	??_R3out_of_range@detail@json_abi_v3_11_3@nlohmann@@8 ; nlohmann::json_abi_v3_11_3::detail::out_of_range::`RTTI Class Hierarchy Descriptor'
PUBLIC	_TI3?AVinvalid_iterator@detail@json_abi_v3_11_3@nlohmann@@
EXTRN	__imp_?rdstate@ios_base@std@@QEBAHXZ:PROC
EXTRN	__imp_?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z:PROC
EXTRN	__imp_localeconv:PROC
EXTRN	__imp_strtoll:PROC
EXTRN	__imp_?_Xbad_function_call@std@@YAXXZ:PROC
;	COMDAT _TI3?AVinvalid_iterator@detail@json_abi_v3_11_3@nlohmann@@
xdata$x	SEGMENT
_TI3?AVinvalid_iterator@detail@json_abi_v3_11_3@nlohmann@@ DD 00H
	DD	imagerel ??1invalid_iterator@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVinvalid_iterator@detail@json_abi_v3_11_3@nlohmann@@
xdata$x	ENDS
;	COMDAT ??_R3out_of_range@detail@json_abi_v3_11_3@nlohmann@@8
rdata$r	SEGMENT
??_R3out_of_range@detail@json_abi_v3_11_3@nlohmann@@8 DD 00H ; nlohmann::json_abi_v3_11_3::detail::out_of_range::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2out_of_range@detail@json_abi_v3_11_3@nlohmann@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVout_of_range@detail@json_abi_v3_11_3@nlohmann@@@8
data$r	SEGMENT
??_R0?AVout_of_range@detail@json_abi_v3_11_3@nlohmann@@@8 DQ FLAT:??_7type_info@@6B@ ; nlohmann::json_abi_v3_11_3::detail::out_of_range `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVout_of_range@detail@json_abi_v3_11_3@nlohmann@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@detail@json_abi_v3_11_3@nlohmann@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@detail@json_abi_v3_11_3@nlohmann@@8 DD imagerel ??_R0?AVexception@detail@json_abi_v3_11_3@nlohmann@@@8 ; nlohmann::json_abi_v3_11_3::detail::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@detail@json_abi_v3_11_3@nlohmann@@8
rdata$r	ENDS
;	COMDAT ??_R3parse_error@detail@json_abi_v3_11_3@nlohmann@@8
rdata$r	SEGMENT
??_R3parse_error@detail@json_abi_v3_11_3@nlohmann@@8 DD 00H ; nlohmann::json_abi_v3_11_3::detail::parse_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2parse_error@detail@json_abi_v3_11_3@nlohmann@@8
rdata$r	ENDS
;	COMDAT _TI3?AVtype_error@detail@json_abi_v3_11_3@nlohmann@@
xdata$x	SEGMENT
_TI3?AVtype_error@detail@json_abi_v3_11_3@nlohmann@@ DD 00H
	DD	imagerel ??1type_error@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVtype_error@detail@json_abi_v3_11_3@nlohmann@@
xdata$x	ENDS
;	COMDAT ??_7parse_error@detail@json_abi_v3_11_3@nlohmann@@6B@
CONST	SEGMENT
??_7parse_error@detail@json_abi_v3_11_3@nlohmann@@6B@ DQ FLAT:??_R4parse_error@detail@json_abi_v3_11_3@nlohmann@@6B@ ; nlohmann::json_abi_v3_11_3::detail::parse_error::`vftable'
	DQ	FLAT:??_Eparse_error@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@detail@json_abi_v3_11_3@nlohmann@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT _TI3?AVparse_error@detail@json_abi_v3_11_3@nlohmann@@
xdata$x	SEGMENT
_TI3?AVparse_error@detail@json_abi_v3_11_3@nlohmann@@ DD 00H
	DD	imagerel ??1parse_error@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVparse_error@detail@json_abi_v3_11_3@nlohmann@@
xdata$x	ENDS
;	COMDAT ??_R2other_error@detail@json_abi_v3_11_3@nlohmann@@8
rdata$r	SEGMENT
??_R2other_error@detail@json_abi_v3_11_3@nlohmann@@8 DD imagerel ??_R1A@?0A@EA@other_error@detail@json_abi_v3_11_3@nlohmann@@8 ; nlohmann::json_abi_v3_11_3::detail::other_error::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@detail@json_abi_v3_11_3@nlohmann@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT _CTA3?AVother_error@detail@json_abi_v3_11_3@nlohmann@@
xdata$x	SEGMENT
_CTA3?AVother_error@detail@json_abi_v3_11_3@nlohmann@@ DD 03H
	DD	imagerel _CT??_R0?AVother_error@detail@json_abi_v3_11_3@nlohmann@@@8??0other_error@detail@json_abi_v3_11_3@nlohmann@@QEAA@AEBV0123@@Z56
	DD	imagerel _CT??_R0?AVexception@detail@json_abi_v3_11_3@nlohmann@@@8??0exception@detail@json_abi_v3_11_3@nlohmann@@QEAA@AEBV0123@@Z56
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT ??_7type_error@detail@json_abi_v3_11_3@nlohmann@@6B@
CONST	SEGMENT
??_7type_error@detail@json_abi_v3_11_3@nlohmann@@6B@ DQ FLAT:??_R4type_error@detail@json_abi_v3_11_3@nlohmann@@6B@ ; nlohmann::json_abi_v3_11_3::detail::type_error::`vftable'
	DQ	FLAT:??_Etype_error@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@detail@json_abi_v3_11_3@nlohmann@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT _TI3?AVout_of_range@detail@json_abi_v3_11_3@nlohmann@@
xdata$x	SEGMENT
_TI3?AVout_of_range@detail@json_abi_v3_11_3@nlohmann@@ DD 00H
	DD	imagerel ??1out_of_range@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVout_of_range@detail@json_abi_v3_11_3@nlohmann@@
xdata$x	ENDS
;	COMDAT _CT??_R0?AVout_of_range@detail@json_abi_v3_11_3@nlohmann@@@8??0out_of_range@detail@json_abi_v3_11_3@nlohmann@@QEAA@AEBV0123@@Z56
xdata$x	SEGMENT
_CT??_R0?AVout_of_range@detail@json_abi_v3_11_3@nlohmann@@@8??0out_of_range@detail@json_abi_v3_11_3@nlohmann@@QEAA@AEBV0123@@Z56 DD 00H
	DD	imagerel ??_R0?AVout_of_range@detail@json_abi_v3_11_3@nlohmann@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	038H
	DD	imagerel ??0out_of_range@detail@json_abi_v3_11_3@nlohmann@@QEAA@AEBV0123@@Z
xdata$x	ENDS
;	COMDAT ??_R4invalid_iterator@detail@json_abi_v3_11_3@nlohmann@@6B@
rdata$r	SEGMENT
??_R4invalid_iterator@detail@json_abi_v3_11_3@nlohmann@@6B@ DD 01H ; nlohmann::json_abi_v3_11_3::detail::invalid_iterator::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVinvalid_iterator@detail@json_abi_v3_11_3@nlohmann@@@8
	DD	imagerel ??_R3invalid_iterator@detail@json_abi_v3_11_3@nlohmann@@8
	DD	imagerel ??_R4invalid_iterator@detail@json_abi_v3_11_3@nlohmann@@6B@
rdata$r	ENDS
;	COMDAT ??_R2type_error@detail@json_abi_v3_11_3@nlohmann@@8
rdata$r	SEGMENT
??_R2type_error@detail@json_abi_v3_11_3@nlohmann@@8 DD imagerel ??_R1A@?0A@EA@type_error@detail@json_abi_v3_11_3@nlohmann@@8 ; nlohmann::json_abi_v3_11_3::detail::type_error::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@detail@json_abi_v3_11_3@nlohmann@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R4out_of_range@detail@json_abi_v3_11_3@nlohmann@@6B@
rdata$r	SEGMENT
??_R4out_of_range@detail@json_abi_v3_11_3@nlohmann@@6B@ DD 01H ; nlohmann::json_abi_v3_11_3::detail::out_of_range::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVout_of_range@detail@json_abi_v3_11_3@nlohmann@@@8
	DD	imagerel ??_R3out_of_range@detail@json_abi_v3_11_3@nlohmann@@8
	DD	imagerel ??_R4out_of_range@detail@json_abi_v3_11_3@nlohmann@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@out_of_range@detail@json_abi_v3_11_3@nlohmann@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@out_of_range@detail@json_abi_v3_11_3@nlohmann@@8 DD imagerel ??_R0?AVout_of_range@detail@json_abi_v3_11_3@nlohmann@@@8 ; nlohmann::json_abi_v3_11_3::detail::out_of_range::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3out_of_range@detail@json_abi_v3_11_3@nlohmann@@8
rdata$r	ENDS
;	COMDAT _CTA3?AVinvalid_iterator@detail@json_abi_v3_11_3@nlohmann@@
xdata$x	SEGMENT
_CTA3?AVinvalid_iterator@detail@json_abi_v3_11_3@nlohmann@@ DD 03H
	DD	imagerel _CT??_R0?AVinvalid_iterator@detail@json_abi_v3_11_3@nlohmann@@@8??0invalid_iterator@detail@json_abi_v3_11_3@nlohmann@@QEAA@AEBV0123@@Z56
	DD	imagerel _CT??_R0?AVexception@detail@json_abi_v3_11_3@nlohmann@@@8??0exception@detail@json_abi_v3_11_3@nlohmann@@QEAA@AEBV0123@@Z56
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT ??_R1A@?0A@EA@other_error@detail@json_abi_v3_11_3@nlohmann@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@other_error@detail@json_abi_v3_11_3@nlohmann@@8 DD imagerel ??_R0?AVother_error@detail@json_abi_v3_11_3@nlohmann@@@8 ; nlohmann::json_abi_v3_11_3::detail::other_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3other_error@detail@json_abi_v3_11_3@nlohmann@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVother_error@detail@json_abi_v3_11_3@nlohmann@@@8
data$r	SEGMENT
??_R0?AVother_error@detail@json_abi_v3_11_3@nlohmann@@@8 DQ FLAT:??_7type_info@@6B@ ; nlohmann::json_abi_v3_11_3::detail::other_error `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVother_error@detail@json_abi_v3_11_3@nlohmann@@', 00H
data$r	ENDS
;	COMDAT ??_R2exception@detail@json_abi_v3_11_3@nlohmann@@8
rdata$r	SEGMENT
??_R2exception@detail@json_abi_v3_11_3@nlohmann@@8 DD imagerel ??_R1A@?0A@EA@exception@detail@json_abi_v3_11_3@nlohmann@@8 ; nlohmann::json_abi_v3_11_3::detail::exception::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT _CTA3?AVout_of_range@detail@json_abi_v3_11_3@nlohmann@@
xdata$x	SEGMENT
_CTA3?AVout_of_range@detail@json_abi_v3_11_3@nlohmann@@ DD 03H
	DD	imagerel _CT??_R0?AVout_of_range@detail@json_abi_v3_11_3@nlohmann@@@8??0out_of_range@detail@json_abi_v3_11_3@nlohmann@@QEAA@AEBV0123@@Z56
	DD	imagerel _CT??_R0?AVexception@detail@json_abi_v3_11_3@nlohmann@@@8??0exception@detail@json_abi_v3_11_3@nlohmann@@QEAA@AEBV0123@@Z56
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT ??_R0?AVinvalid_iterator@detail@json_abi_v3_11_3@nlohmann@@@8
data$r	SEGMENT
??_R0?AVinvalid_iterator@detail@json_abi_v3_11_3@nlohmann@@@8 DQ FLAT:??_7type_info@@6B@ ; nlohmann::json_abi_v3_11_3::detail::invalid_iterator `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVinvalid_iterator@detail@json_abi_v3_11_3@nlohmann@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@type_error@detail@json_abi_v3_11_3@nlohmann@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@type_error@detail@json_abi_v3_11_3@nlohmann@@8 DD imagerel ??_R0?AVtype_error@detail@json_abi_v3_11_3@nlohmann@@@8 ; nlohmann::json_abi_v3_11_3::detail::type_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3type_error@detail@json_abi_v3_11_3@nlohmann@@8
rdata$r	ENDS
;	COMDAT ??_R4other_error@detail@json_abi_v3_11_3@nlohmann@@6B@
rdata$r	SEGMENT
??_R4other_error@detail@json_abi_v3_11_3@nlohmann@@6B@ DD 01H ; nlohmann::json_abi_v3_11_3::detail::other_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVother_error@detail@json_abi_v3_11_3@nlohmann@@@8
	DD	imagerel ??_R3other_error@detail@json_abi_v3_11_3@nlohmann@@8
	DD	imagerel ??_R4other_error@detail@json_abi_v3_11_3@nlohmann@@6B@
rdata$r	ENDS
;	COMDAT _CT??_R0?AVparse_error@detail@json_abi_v3_11_3@nlohmann@@@8??0parse_error@detail@json_abi_v3_11_3@nlohmann@@QEAA@AEBV0123@@Z64
xdata$x	SEGMENT
_CT??_R0?AVparse_error@detail@json_abi_v3_11_3@nlohmann@@@8??0parse_error@detail@json_abi_v3_11_3@nlohmann@@QEAA@AEBV0123@@Z64 DD 00H
	DD	imagerel ??_R0?AVparse_error@detail@json_abi_v3_11_3@nlohmann@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	040H
	DD	imagerel ??0parse_error@detail@json_abi_v3_11_3@nlohmann@@QEAA@AEBV0123@@Z
xdata$x	ENDS
;	COMDAT ??_R1A@?0A@EA@parse_error@detail@json_abi_v3_11_3@nlohmann@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@parse_error@detail@json_abi_v3_11_3@nlohmann@@8 DD imagerel ??_R0?AVparse_error@detail@json_abi_v3_11_3@nlohmann@@@8 ; nlohmann::json_abi_v3_11_3::detail::parse_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3parse_error@detail@json_abi_v3_11_3@nlohmann@@8
rdata$r	ENDS
;	COMDAT _CTA3?AVtype_error@detail@json_abi_v3_11_3@nlohmann@@
xdata$x	SEGMENT
_CTA3?AVtype_error@detail@json_abi_v3_11_3@nlohmann@@ DD 03H
	DD	imagerel _CT??_R0?AVtype_error@detail@json_abi_v3_11_3@nlohmann@@@8??0type_error@detail@json_abi_v3_11_3@nlohmann@@QEAA@AEBV0123@@Z56
	DD	imagerel _CT??_R0?AVexception@detail@json_abi_v3_11_3@nlohmann@@@8??0exception@detail@json_abi_v3_11_3@nlohmann@@QEAA@AEBV0123@@Z56
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT ??_R2invalid_iterator@detail@json_abi_v3_11_3@nlohmann@@8
rdata$r	SEGMENT
??_R2invalid_iterator@detail@json_abi_v3_11_3@nlohmann@@8 DD imagerel ??_R1A@?0A@EA@invalid_iterator@detail@json_abi_v3_11_3@nlohmann@@8 ; nlohmann::json_abi_v3_11_3::detail::invalid_iterator::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@detail@json_abi_v3_11_3@nlohmann@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT _CT??_R0?AVinvalid_iterator@detail@json_abi_v3_11_3@nlohmann@@@8??0invalid_iterator@detail@json_abi_v3_11_3@nlohmann@@QEAA@AEBV0123@@Z56
xdata$x	SEGMENT
_CT??_R0?AVinvalid_iterator@detail@json_abi_v3_11_3@nlohmann@@@8??0invalid_iterator@detail@json_abi_v3_11_3@nlohmann@@QEAA@AEBV0123@@Z56 DD 00H
	DD	imagerel ??_R0?AVinvalid_iterator@detail@json_abi_v3_11_3@nlohmann@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	038H
	DD	imagerel ??0invalid_iterator@detail@json_abi_v3_11_3@nlohmann@@QEAA@AEBV0123@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVparse_error@detail@json_abi_v3_11_3@nlohmann@@@8
data$r	SEGMENT
??_R0?AVparse_error@detail@json_abi_v3_11_3@nlohmann@@@8 DQ FLAT:??_7type_info@@6B@ ; nlohmann::json_abi_v3_11_3::detail::parse_error `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVparse_error@detail@json_abi_v3_11_3@nlohmann@@', 00H
data$r	ENDS
;	COMDAT ??_R3type_error@detail@json_abi_v3_11_3@nlohmann@@8
rdata$r	SEGMENT
??_R3type_error@detail@json_abi_v3_11_3@nlohmann@@8 DD 00H ; nlohmann::json_abi_v3_11_3::detail::type_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2type_error@detail@json_abi_v3_11_3@nlohmann@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVtype_error@detail@json_abi_v3_11_3@nlohmann@@@8
data$r	SEGMENT
??_R0?AVtype_error@detail@json_abi_v3_11_3@nlohmann@@@8 DQ FLAT:??_7type_info@@6B@ ; nlohmann::json_abi_v3_11_3::detail::type_error `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVtype_error@detail@json_abi_v3_11_3@nlohmann@@', 00H
data$r	ENDS
;	COMDAT ??_R2out_of_range@detail@json_abi_v3_11_3@nlohmann@@8
rdata$r	SEGMENT
??_R2out_of_range@detail@json_abi_v3_11_3@nlohmann@@8 DD imagerel ??_R1A@?0A@EA@out_of_range@detail@json_abi_v3_11_3@nlohmann@@8 ; nlohmann::json_abi_v3_11_3::detail::out_of_range::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@detail@json_abi_v3_11_3@nlohmann@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT _CT??_R0?AVexception@detail@json_abi_v3_11_3@nlohmann@@@8??0exception@detail@json_abi_v3_11_3@nlohmann@@QEAA@AEBV0123@@Z56
xdata$x	SEGMENT
_CT??_R0?AVexception@detail@json_abi_v3_11_3@nlohmann@@@8??0exception@detail@json_abi_v3_11_3@nlohmann@@QEAA@AEBV0123@@Z56 DD 00H
	DD	imagerel ??_R0?AVexception@detail@json_abi_v3_11_3@nlohmann@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	038H
	DD	imagerel ??0exception@detail@json_abi_v3_11_3@nlohmann@@QEAA@AEBV0123@@Z
xdata$x	ENDS
;	COMDAT ??_R4type_error@detail@json_abi_v3_11_3@nlohmann@@6B@
rdata$r	SEGMENT
??_R4type_error@detail@json_abi_v3_11_3@nlohmann@@6B@ DD 01H ; nlohmann::json_abi_v3_11_3::detail::type_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVtype_error@detail@json_abi_v3_11_3@nlohmann@@@8
	DD	imagerel ??_R3type_error@detail@json_abi_v3_11_3@nlohmann@@8
	DD	imagerel ??_R4type_error@detail@json_abi_v3_11_3@nlohmann@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@invalid_iterator@detail@json_abi_v3_11_3@nlohmann@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@invalid_iterator@detail@json_abi_v3_11_3@nlohmann@@8 DD imagerel ??_R0?AVinvalid_iterator@detail@json_abi_v3_11_3@nlohmann@@@8 ; nlohmann::json_abi_v3_11_3::detail::invalid_iterator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3invalid_iterator@detail@json_abi_v3_11_3@nlohmann@@8
rdata$r	ENDS
;	COMDAT ??_R2parse_error@detail@json_abi_v3_11_3@nlohmann@@8
rdata$r	SEGMENT
??_R2parse_error@detail@json_abi_v3_11_3@nlohmann@@8 DD imagerel ??_R1A@?0A@EA@parse_error@detail@json_abi_v3_11_3@nlohmann@@8 ; nlohmann::json_abi_v3_11_3::detail::parse_error::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@detail@json_abi_v3_11_3@nlohmann@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R4exception@detail@json_abi_v3_11_3@nlohmann@@6B@
rdata$r	SEGMENT
??_R4exception@detail@json_abi_v3_11_3@nlohmann@@6B@ DD 01H ; nlohmann::json_abi_v3_11_3::detail::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@detail@json_abi_v3_11_3@nlohmann@@@8
	DD	imagerel ??_R3exception@detail@json_abi_v3_11_3@nlohmann@@8
	DD	imagerel ??_R4exception@detail@json_abi_v3_11_3@nlohmann@@6B@
rdata$r	ENDS
;	COMDAT ??_R3invalid_iterator@detail@json_abi_v3_11_3@nlohmann@@8
rdata$r	SEGMENT
??_R3invalid_iterator@detail@json_abi_v3_11_3@nlohmann@@8 DD 00H ; nlohmann::json_abi_v3_11_3::detail::invalid_iterator::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2invalid_iterator@detail@json_abi_v3_11_3@nlohmann@@8
rdata$r	ENDS
;	COMDAT _CT??_R0?AVother_error@detail@json_abi_v3_11_3@nlohmann@@@8??0other_error@detail@json_abi_v3_11_3@nlohmann@@QEAA@AEBV0123@@Z56
xdata$x	SEGMENT
_CT??_R0?AVother_error@detail@json_abi_v3_11_3@nlohmann@@@8??0other_error@detail@json_abi_v3_11_3@nlohmann@@QEAA@AEBV0123@@Z56 DD 00H
	DD	imagerel ??_R0?AVother_error@detail@json_abi_v3_11_3@nlohmann@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	038H
	DD	imagerel ??0other_error@detail@json_abi_v3_11_3@nlohmann@@QEAA@AEBV0123@@Z
xdata$x	ENDS
;	COMDAT ?value@?$static_const@Ufrom_json_fn@detail@json_abi_v3_11_3@nlohmann@@@detail@json_abi_v3_11_3@nlohmann@@2Ufrom_json_fn@234@B
CONST	SEGMENT
?value@?$static_const@Ufrom_json_fn@detail@json_abi_v3_11_3@nlohmann@@@detail@json_abi_v3_11_3@nlohmann@@2Ufrom_json_fn@234@B	ORG $+1 ; nlohmann::json_abi_v3_11_3::detail::static_const<nlohmann::json_abi_v3_11_3::detail::from_json_fn>::value
CONST	ENDS
;	COMDAT ?value@?$static_const@Uto_json_fn@detail@json_abi_v3_11_3@nlohmann@@@detail@json_abi_v3_11_3@nlohmann@@2Uto_json_fn@234@B
CONST	SEGMENT
?value@?$static_const@Uto_json_fn@detail@json_abi_v3_11_3@nlohmann@@@detail@json_abi_v3_11_3@nlohmann@@2Uto_json_fn@234@B	ORG $+1 ; nlohmann::json_abi_v3_11_3::detail::static_const<nlohmann::json_abi_v3_11_3::detail::to_json_fn>::value
CONST	ENDS
;	COMDAT _TI3?AVother_error@detail@json_abi_v3_11_3@nlohmann@@
xdata$x	SEGMENT
_TI3?AVother_error@detail@json_abi_v3_11_3@nlohmann@@ DD 00H
	DD	imagerel ??1other_error@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVother_error@detail@json_abi_v3_11_3@nlohmann@@
xdata$x	ENDS
;	COMDAT ??_R3other_error@detail@json_abi_v3_11_3@nlohmann@@8
rdata$r	SEGMENT
??_R3other_error@detail@json_abi_v3_11_3@nlohmann@@8 DD 00H ; nlohmann::json_abi_v3_11_3::detail::other_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2other_error@detail@json_abi_v3_11_3@nlohmann@@8
rdata$r	ENDS
;	COMDAT ??_R3exception@detail@json_abi_v3_11_3@nlohmann@@8
rdata$r	SEGMENT
??_R3exception@detail@json_abi_v3_11_3@nlohmann@@8 DD 00H ; nlohmann::json_abi_v3_11_3::detail::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2exception@detail@json_abi_v3_11_3@nlohmann@@8
rdata$r	ENDS
;	COMDAT ??_7exception@detail@json_abi_v3_11_3@nlohmann@@6B@
CONST	SEGMENT
??_7exception@detail@json_abi_v3_11_3@nlohmann@@6B@ DQ FLAT:??_R4exception@detail@json_abi_v3_11_3@nlohmann@@6B@ ; nlohmann::json_abi_v3_11_3::detail::exception::`vftable'
	DQ	FLAT:??_Eexception@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@detail@json_abi_v3_11_3@nlohmann@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT _CT??_R0?AVtype_error@detail@json_abi_v3_11_3@nlohmann@@@8??0type_error@detail@json_abi_v3_11_3@nlohmann@@QEAA@AEBV0123@@Z56
xdata$x	SEGMENT
_CT??_R0?AVtype_error@detail@json_abi_v3_11_3@nlohmann@@@8??0type_error@detail@json_abi_v3_11_3@nlohmann@@QEAA@AEBV0123@@Z56 DD 00H
	DD	imagerel ??_R0?AVtype_error@detail@json_abi_v3_11_3@nlohmann@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	038H
	DD	imagerel ??0type_error@detail@json_abi_v3_11_3@nlohmann@@QEAA@AEBV0123@@Z
xdata$x	ENDS
;	COMDAT ??_7invalid_iterator@detail@json_abi_v3_11_3@nlohmann@@6B@
CONST	SEGMENT
??_7invalid_iterator@detail@json_abi_v3_11_3@nlohmann@@6B@ DQ FLAT:??_R4invalid_iterator@detail@json_abi_v3_11_3@nlohmann@@6B@ ; nlohmann::json_abi_v3_11_3::detail::invalid_iterator::`vftable'
	DQ	FLAT:??_Einvalid_iterator@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@detail@json_abi_v3_11_3@nlohmann@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7out_of_range@detail@json_abi_v3_11_3@nlohmann@@6B@
CONST	SEGMENT
??_7out_of_range@detail@json_abi_v3_11_3@nlohmann@@6B@ DQ FLAT:??_R4out_of_range@detail@json_abi_v3_11_3@nlohmann@@6B@ ; nlohmann::json_abi_v3_11_3::detail::out_of_range::`vftable'
	DQ	FLAT:??_Eout_of_range@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@detail@json_abi_v3_11_3@nlohmann@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT _CTA3?AVparse_error@detail@json_abi_v3_11_3@nlohmann@@
xdata$x	SEGMENT
_CTA3?AVparse_error@detail@json_abi_v3_11_3@nlohmann@@ DD 03H
	DD	imagerel _CT??_R0?AVparse_error@detail@json_abi_v3_11_3@nlohmann@@@8??0parse_error@detail@json_abi_v3_11_3@nlohmann@@QEAA@AEBV0123@@Z64
	DD	imagerel _CT??_R0?AVexception@detail@json_abi_v3_11_3@nlohmann@@@8??0exception@detail@json_abi_v3_11_3@nlohmann@@QEAA@AEBV0123@@Z56
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT ??_R4parse_error@detail@json_abi_v3_11_3@nlohmann@@6B@
rdata$r	SEGMENT
??_R4parse_error@detail@json_abi_v3_11_3@nlohmann@@6B@ DD 01H ; nlohmann::json_abi_v3_11_3::detail::parse_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVparse_error@detail@json_abi_v3_11_3@nlohmann@@@8
	DD	imagerel ??_R3parse_error@detail@json_abi_v3_11_3@nlohmann@@8
	DD	imagerel ??_R4parse_error@detail@json_abi_v3_11_3@nlohmann@@6B@
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@detail@json_abi_v3_11_3@nlohmann@@@8
data$r	SEGMENT
??_R0?AVexception@detail@json_abi_v3_11_3@nlohmann@@@8 DQ FLAT:??_7type_info@@6B@ ; nlohmann::json_abi_v3_11_3::detail::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@detail@json_abi_v3_11_3@nlohmann@@', 00H
data$r	ENDS
;	COMDAT ??_7other_error@detail@json_abi_v3_11_3@nlohmann@@6B@
CONST	SEGMENT
??_7other_error@detail@json_abi_v3_11_3@nlohmann@@6B@ DQ FLAT:??_R4other_error@detail@json_abi_v3_11_3@nlohmann@@6B@ ; nlohmann::json_abi_v3_11_3::detail::other_error::`vftable'
	DQ	FLAT:??_Eother_error@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@detail@json_abi_v3_11_3@nlohmann@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BJ@NPKCAHHP@cannot?5use?5erase?$CI?$CJ?5with?5@
CONST	SEGMENT
??_C@_0BJ@NPKCAHHP@cannot?5use?5erase?$CI?$CJ?5with?5@ DB 'cannot use era'
	DB	'se() with ', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@OAOABPIO@iterator?5out?5of?5range@
CONST	SEGMENT
??_C@_0BG@OAOABPIO@iterator?5out?5of?5range@ DB 'iterator out of range', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@EAGLCAOD@type?5must?5be?5number?0?5but?5is?5@
CONST	SEGMENT
??_C@_0BN@EAGLCAOD@type?5must?5be?5number?0?5but?5is?5@ DB 'type must be '
	DB	'number, but is ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@GPCBHMHC@type?5must?5be?5string?0?5but?5is?5@
CONST	SEGMENT
??_C@_0BN@GPCBHMHC@type?5must?5be?5string?0?5but?5is?5@ DB 'type must be '
	DB	'string, but is ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@JLEGJFPM@excessive?5object?5size?3?5@
CONST	SEGMENT
??_C@_0BI@JLEGJFPM@excessive?5object?5size?3?5@ DB 'excessive object size'
	DB	': ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@BGJPELCC@iterator?5does?5not?5fit?5current?5v@
CONST	SEGMENT
??_C@_0CE@BGJPELCC@iterator?5does?5not?5fit?5current?5v@ DB 'iterator doe'
	DB	's not fit current value', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EPJFPCBB@out_of_range@
CONST	SEGMENT
??_C@_0N@EPJFPCBB@out_of_range@ DB 'out_of_range', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CJHFOHFM@type_error@
CONST	SEGMENT
??_C@_0L@CJHFOHFM@type_error@ DB 'type_error', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0GG@OICGGDEO@attempting?5to?5parse?5an?5empty?5in@
CONST	SEGMENT
??_C@_0GG@OICGGDEO@attempting?5to?5parse?5an?5empty?5in@ DB 'attempting t'
	DB	'o parse an empty input; check that your input string or strea'
	DB	'm contains the expected JSON', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@FCBMNGHJ@excessive?5array?5size?3?5@
CONST	SEGMENT
??_C@_0BH@FCBMNGHJ@excessive?5array?5size?3?5@ DB 'excessive array size: '
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DLKELGHM@other_error@
CONST	SEGMENT
??_C@_0M@DLKELGHM@other_error@ DB 'other_error', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GEOKNAJI@object?5key@
CONST	SEGMENT
??_C@_0L@GEOKNAJI@object?5key@ DB 'object key', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@GBHGKIGD@number?5overflow?5parsing?5?8@
CONST	SEGMENT
??_C@_0BK@GBHGKIGD@number?5overflow?5parsing?5?8@ DB 'number overflow par'
	DB	'sing ''', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@NAEMOGCE@object?5separator@
CONST	SEGMENT
??_C@_0BB@NAEMOGCE@object?5separator@ DB 'object separator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EOMJEIFA@vector?$DMbool?$DO?5too?5long@
CONST	SEGMENT
??_C@_0BG@EOMJEIFA@vector?$DMbool?$DO?5too?5long@ DB 'vector<bool> too lo'
	DB	'ng', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@MMKEGCHK@cannot?5compare?5iterators?5of?5dif@
CONST	SEGMENT
??_C@_0DB@MMKEGCHK@cannot?5compare?5iterators?5of?5dif@ DB 'cannot compar'
	DB	'e iterators of different containers', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@OIGMJCHJ@961c151d2e87f2686a955a9be24d316@
CONST	SEGMENT
??_C@_0DA@OIGMJCHJ@961c151d2e87f2686a955a9be24d316@ DB '961c151d2e87f2686'
	DB	'a955a9be24d316f1362bf21 3.11.3', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@NGMGHBHA@invalid?5string?3?5control?5charact@
CONST	SEGMENT
??_C@_0EI@NGMGHBHA@invalid?5string?3?5control?5charact@ DB 'invalid strin'
	DB	'g: control character U+001E (RS) must be escaped to \u001E', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@EECAIDOI@invalid?5string?3?5control?5charact@
CONST	SEGMENT
??_C@_0EI@EECAIDOI@invalid?5string?3?5control?5charact@ DB 'invalid strin'
	DB	'g: control character U+001D (GS) must be escaped to \u001D', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@DBODJMKB@invalid?5string?3?5ill?9formed?5UTF?9@
CONST	SEGMENT
??_C@_0CG@DBODJMKB@invalid?5string?3?5ill?9formed?5UTF?9@ DB 'invalid str'
	DB	'ing: ill-formed UTF-8 byte', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@BDNODKJO@invalid?5string?3?5control?5charact@
CONST	SEGMENT
??_C@_0EI@BDNODKJO@invalid?5string?3?5control?5charact@ DB 'invalid strin'
	DB	'g: control character U+001F (US) must be escaped to \u001F', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@GHGHBGJE@invalid?5string?3?5control?5charact@
CONST	SEGMENT
??_C@_0EJ@GHGHBGJE@invalid?5string?3?5control?5charact@ DB 'invalid strin'
	DB	'g: control character U+001A (SUB) must be escaped to \u001A', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@PODKIIEG@invalid?5string?3?5control?5charact@
CONST	SEGMENT
??_C@_0EI@PODKIIEG@invalid?5string?3?5control?5charact@ DB 'invalid strin'
	DB	'g: control character U+0019 (EM) must be escaped to \u0019', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@LHNMAEPO@invalid?5string?3?5control?5charact@
CONST	SEGMENT
??_C@_0EI@LHNMAEPO@invalid?5string?3?5control?5charact@ DB 'invalid strin'
	DB	'g: control character U+001C (FS) must be escaped to \u001C', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@DKHNKOP@invalid?5string?3?5control?5charact@
CONST	SEGMENT
??_C@_0EJ@DKHNKOP@invalid?5string?3?5control?5charact@ DB 'invalid string'
	DB	': control character U+001B (ESC) must be escaped to \u001B', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@DANDDHBM@invalid?5string?3?5control?5charact@
CONST	SEGMENT
??_C@_0EJ@DANDDHBM@invalid?5string?3?5control?5charact@ DB 'invalid strin'
	DB	'g: control character U+0016 (SYN) must be escaped to \u0016', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@KGLCIOHO@invalid?5string?3?5control?5charact@
CONST	SEGMENT
??_C@_0EJ@KGLCIOHO@invalid?5string?3?5control?5charact@ DB 'invalid strin'
	DB	'g: control character U+0015 (NAK) must be escaped to \u0015', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@CMNKNMME@invalid?5string?3?5control?5charact@
CONST	SEGMENT
??_C@_0EJ@CMNKNMME@invalid?5string?3?5control?5charact@ DB 'invalid strin'
	DB	'g: control character U+0018 (CAN) must be escaped to \u0018', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@MJEDHOMH@invalid?5string?3?5control?5charact@
CONST	SEGMENT
??_C@_0EJ@MJEDHOMH@invalid?5string?3?5control?5charact@ DB 'invalid strin'
	DB	'g: control character U+0017 (ETB) must be escaped to \u0017', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@OPAPENBO@invalid?5string?3?5control?5charact@
CONST	SEGMENT
??_C@_0EJ@OPAPENBO@invalid?5string?3?5control?5charact@ DB 'invalid strin'
	DB	'g: control character U+0012 (DC2) must be escaped to \u0012', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@MKMIGOL@invalid?5string?3?5control?5charact@
CONST	SEGMENT
??_C@_0EJ@MKMIGOL@invalid?5string?3?5control?5charact@ DB 'invalid string'
	DB	': control character U+0011 (DC1) must be escaped to \u0011', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@PDDJNMLF@invalid?5string?3?5control?5charact@
CONST	SEGMENT
??_C@_0EJ@PDDJNMLF@invalid?5string?3?5control?5charact@ DB 'invalid strin'
	DB	'g: control character U+0014 (DC4) must be escaped to \u0014', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@LBJBPEEN@invalid?5string?3?5control?5charact@
CONST	SEGMENT
??_C@_0EJ@LBJBPEEN@invalid?5string?3?5control?5charact@ DB 'invalid strin'
	DB	'g: control character U+0013 (DC3) must be escaped to \u0013', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@LAJMIDAP@invalid?5string?3?5control?5charact@
CONST	SEGMENT
??_C@_0EI@LAJMIDAP@invalid?5string?3?5control?5charact@ DB 'invalid strin'
	DB	'g: control character U+000E (SO) must be escaped to \u000E', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EO@PJJBEEPG@invalid?5string?3?5control?5charact@
CONST	SEGMENT
??_C@_0EO@PJJBEEPG@invalid?5string?3?5control?5charact@ DB 'invalid strin'
	DB	'g: control character U+000D (CR) must be escaped to \u000D or'
	DB	' \r', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@MNJGJMON@invalid?5string?3?5control?5charact@
CONST	SEGMENT
??_C@_0EJ@MNJGJMON@invalid?5string?3?5control?5charact@ DB 'invalid strin'
	DB	'g: control character U+0010 (DLE) must be escaped to \u0010', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@FBMHLBEA@invalid?5string?3?5control?5charact@
CONST	SEGMENT
??_C@_0EI@FBMHLBEA@invalid?5string?3?5control?5charact@ DB 'invalid strin'
	DB	'g: control character U+000F (SI) must be escaped to \u000F', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EO@BDKKLBCN@invalid?5string?3?5control?5charact@
CONST	SEGMENT
??_C@_0EO@BDKKLBCN@invalid?5string?3?5control?5charact@ DB 'invalid strin'
	DB	'g: control character U+000A (LF) must be escaped to \u000A or'
	DB	' \n', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EO@GMAPOODH@invalid?5string?3?5control?5charact@
CONST	SEGMENT
??_C@_0EO@GMAPOODH@invalid?5string?3?5control?5charact@ DB 'invalid strin'
	DB	'g: control character U+0009 (HT) must be escaped to \u0009 or'
	DB	' \t', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EO@IFHEDFEP@invalid?5string?3?5control?5charact@
CONST	SEGMENT
??_C@_0EO@IFHEDFEP@invalid?5string?3?5control?5charact@ DB 'invalid strin'
	DB	'g: control character U+000C (FF) must be escaped to \u000C or'
	DB	' \f', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@DPPPKLPC@invalid?5string?3?5control?5charact@
CONST	SEGMENT
??_C@_0EI@DPPPKLPC@invalid?5string?3?5control?5charact@ DB 'invalid strin'
	DB	'g: control character U+000B (VT) must be escaped to \u000B', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@JAMEJLH@invalid?5string?3?5control?5charact@
CONST	SEGMENT
??_C@_0EJ@JAMEJLH@invalid?5string?3?5control?5charact@ DB 'invalid string'
	DB	': control character U+0006 (ACK) must be escaped to \u0006', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@GPLGMBKM@invalid?5string?3?5control?5charact@
CONST	SEGMENT
??_C@_0EJ@GPLGMBKM@invalid?5string?3?5control?5charact@ DB 'invalid strin'
	DB	'g: control character U+0005 (ENQ) must be escaped to \u0005', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EO@HAMNCDCJ@invalid?5string?3?5control?5charact@
CONST	SEGMENT
??_C@_0EO@HAMNCDCJ@invalid?5string?3?5control?5charact@ DB 'invalid strin'
	DB	'g: control character U+0008 (BS) must be escaped to \u0008 or'
	DB	' \b', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@FMJJFDDO@invalid?5string?3?5control?5charact@
CONST	SEGMENT
??_C@_0EJ@FMJJFDDO@invalid?5string?3?5control?5charact@ DB 'invalid strin'
	DB	'g: control character U+0007 (BEL) must be escaped to \u0007', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@OKNGOHIK@invalid?5string?3?5control?5charact@
CONST	SEGMENT
??_C@_0EJ@OKNGOHIK@invalid?5string?3?5control?5charact@ DB 'invalid strin'
	DB	'g: control character U+0002 (STX) must be escaped to \u0002', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@CGIOMNAN@invalid?5string?3?5control?5charact@
CONST	SEGMENT
??_C@_0EJ@CGIOMNAN@invalid?5string?3?5control?5charact@ DB 'invalid strin'
	DB	'g: control character U+0001 (SOH) must be escaped to \u0001', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@FKCGPJCG@invalid?5string?3?5control?5charact@
CONST	SEGMENT
??_C@_0EJ@FKCGPJCG@invalid?5string?3?5control?5charact@ DB 'invalid strin'
	DB	'g: control character U+0004 (EOT) must be escaped to \u0004', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@BPGBHIAL@invalid?5string?3?5control?5charact@
CONST	SEGMENT
??_C@_0EJ@BPGBHIAL@invalid?5string?3?5control?5charact@ DB 'invalid strin'
	DB	'g: control character U+0003 (ETX) must be escaped to \u0003', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EE@JEFCKMMK@invalid?5string?3?5surrogate?5U?$CLDC0@
CONST	SEGMENT
??_C@_0EE@JEFCKMMK@invalid?5string?3?5surrogate?5U?$CLDC0@ DB 'invalid st'
	DB	'ring: surrogate U+DC00..U+DFFF must follow U+D800..U+DBFF', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EM@NBBIGKDA@invalid?5string?3?5surrogate?5U?$CLD80@
CONST	SEGMENT
??_C@_0EM@NBBIGKDA@invalid?5string?3?5surrogate?5U?$CLD80@ DB 'invalid st'
	DB	'ring: surrogate U+D800..U+DBFF must be followed by U+DC00..U+'
	DB	'DFFF', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@NABLKLLF@invalid?5string?3?5control?5charact@
CONST	SEGMENT
??_C@_0EJ@NABLKLLF@invalid?5string?3?5control?5charact@ DB 'invalid strin'
	DB	'g: control character U+0000 (NUL) must be escaped to \u0000', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@FDKDLPFL@invalid?5string?3?5forbidden?5chara@
CONST	SEGMENT
??_C@_0DE@FDKDLPFL@invalid?5string?3?5forbidden?5chara@ DB 'invalid strin'
	DB	'g: forbidden character after backslash', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@PAGCIHNF@invalid?5comment?$DL?5expecting?5?8?1?8?5@
CONST	SEGMENT
??_C@_0DA@PAGCIHNF@invalid?5comment?$DL?5expecting?5?8?1?8?5@ DB 'invalid'
	DB	' comment; expecting ''/'' or ''*'' after ''/''', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@NNDMIEDH@invalid?5comment?$DL?5missing?5closin@
CONST	SEGMENT
??_C@_0CG@NNDMIEDH@invalid?5comment?$DL?5missing?5closin@ DB 'invalid com'
	DB	'ment; missing closing ''*/''', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@LMKKCLLH@invalid?5string?3?5?8?2u?8?5must?5be?5fo@
CONST	SEGMENT
??_C@_0DG@LMKKCLLH@invalid?5string?3?5?8?2u?8?5must?5be?5fo@ DB 'invalid '
	DB	'string: ''\u'' must be followed by 4 hex digits', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@MLGKFPBE@invalid?5string?3?5missing?5closing@
CONST	SEGMENT
??_C@_0CG@MLGKFPBE@invalid?5string?3?5missing?5closing@ DB 'invalid strin'
	DB	'g: missing closing quote', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@CBPMDKID@invalid?5number?$DL?5expected?5digit?5@
CONST	SEGMENT
??_C@_0CJ@CBPMDKID@invalid?5number?$DL?5expected?5digit?5@ DB 'invalid nu'
	DB	'mber; expected digit after ''.''', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@CDLKIENK@invalid?5number?$DL?5expected?5digit?5@
CONST	SEGMENT
??_C@_0CJ@CDLKIENK@invalid?5number?$DL?5expected?5digit?5@ DB 'invalid nu'
	DB	'mber; expected digit after ''-''', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@LINOMLFL@invalid?5number?$DL?5expected?5digit?5@
CONST	SEGMENT
??_C@_0DD@LINOMLFL@invalid?5number?$DL?5expected?5digit?5@ DB 'invalid nu'
	DB	'mber; expected digit after exponent sign', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@FABMJCCP@invalid?5number?$DL?5expected?5?8?$CL?8?0?5?8@
CONST	SEGMENT
??_C@_0DL@FABMJCCP@invalid?5number?$DL?5expected?5?8?$CL?8?0?5?8@ DB 'inv'
	DB	'alid number; expected ''+'', ''-'', or digit after exponent', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KMCIHGPC@end?5of?5input@
CONST	SEGMENT
??_C@_0N@KMCIHGPC@end?5of?5input@ DB 'end of input', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JLFFEAGH@?$DMparse?5error?$DO@
CONST	SEGMENT
??_C@_0O@JLFFEAGH@?$DMparse?5error?$DO@ DB '<parse error>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IDJJBCJJ@unknown?5token@
CONST	SEGMENT
??_C@_0O@IDJJBCJJ@unknown?5token@ DB 'unknown token', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@EOPOIFBB@?8?$FL?8?0?5?8?$HL?8?0?5or?5a?5literal@
CONST	SEGMENT
??_C@_0BH@EOPOIFBB@?8?$FL?8?0?5?8?$HL?8?0?5or?5a?5literal@ DB '''['', ''{'
	DB	''', or a literal', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GFLCPOAC@?8?$HN?8@
CONST	SEGMENT
??_C@_03GFLCPOAC@?8?$HN?8@ DB '''}''', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03FNPPLIOC@?8?$FN?8@
CONST	SEGMENT
??_C@_03FNPPLIOC@?8?$FN?8@ DB ''']''', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03IMMLKIF@?8?0?8@
CONST	SEGMENT
??_C@_03IMMLKIF@?8?0?8@ DB ''',''', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03BAGHGFEH@?8?3?8@
CONST	SEGMENT
??_C@_03BAGHGFEH@?8?3?8@ DB ''':''', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CMLFDPOO@number?5literal@
CONST	SEGMENT
??_C@_0P@CMLFDPOO@number?5literal@ DB 'number literal', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JJFCJNC@string?5literal@
CONST	SEGMENT
??_C@_0P@JJFCJNC@string?5literal@ DB 'string literal', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03GBDPICLA@?8?$HL?8@
CONST	SEGMENT
??_C@_03GBDPICLA@?8?$HL?8@ DB '''{''', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03FJHCMEFA@?8?$FL?8@
CONST	SEGMENT
??_C@_03FJHCMEFA@?8?$FL?8@ DB '''[''', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GBJNOFKB@true?5literal@
CONST	SEGMENT
??_C@_0N@GBJNOFKB@true?5literal@ DB 'true literal', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFDABGPH@?$DMuninitialized?$DO@
CONST	SEGMENT
??_C@_0BA@JFDABGPH@?$DMuninitialized?$DO@ DB '<uninitialized>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LCPDBNFG@null?5literal@
CONST	SEGMENT
??_C@_0N@LCPDBNFG@null?5literal@ DB 'null literal', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GPPJPPBD@false?5literal@
CONST	SEGMENT
??_C@_0O@GPPJPPBD@false?5literal@ DB 'false literal', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06EBGNBFIA@number@
CONST	SEGMENT
??_C@_06EBGNBFIA@number@ DB 'number', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09BHELGMBL@discarded@
CONST	SEGMENT
??_C@_09BHELGMBL@discarded@ DB 'discarded', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NMKHNIFD@invalid?5literal@
CONST	SEGMENT
??_C@_0BA@NMKHNIFD@invalid?5literal@ DB 'invalid literal', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@IONLHPJF@invalid?5BOM?$DL?5must?5be?50xEF?50xBB?5@
CONST	SEGMENT
??_C@_0CN@IONLHPJF@invalid?5BOM?$DL?5must?5be?50xEF?50xBB?5@ DB 'invalid '
	DB	'BOM; must be 0xEF 0xBB 0xBF if given', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05HIFJDKLD@array@
CONST	SEGMENT
??_C@_05HIFJDKLD@array@ DB 'array', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06IEOJBDIK@object@
CONST	SEGMENT
??_C@_06IEOJBDIK@object@ DB 'object', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06FNFBAEBE@binary@
CONST	SEGMENT
??_C@_06FNFBAEBE@binary@ DB 'binary', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07GOBOHMJA@boolean@
CONST	SEGMENT
??_C@_07GOBOHMJA@boolean@ DB 'boolean', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GHJKFFPF@unexpected?5@
CONST	SEGMENT
??_C@_0M@GHJKFFPF@unexpected?5@ DB 'unexpected ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CPMJEHAD@?$DL?5last?5read?3?5?8@
CONST	SEGMENT
??_C@_0P@CPMJEHAD@?$DL?5last?5read?3?5?8@ DB '; last read: ''', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08HEDMEGDA@?$DMU?$CL?$CF?44X?$DO@
CONST	SEGMENT
??_C@_08HEDMEGDA@?$DMU?$CL?$CF?44X?$DO@ DB '<U+%.4X>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DKPGADPC@?$DL?5expected?5@
CONST	SEGMENT
??_C@_0M@DKPGADPC@?$DL?5expected?5@ DB '; expected ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DLFJJHJG@syntax?5error?5@
CONST	SEGMENT
??_C@_0O@DLFJJHJG@syntax?5error?5@ DB 'syntax error ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@MKOBOCJE@cannot?5use?5operator?$FL?$FN?5with?5a?5st@
CONST	SEGMENT
??_C@_0DD@MKOBOCJE@cannot?5use?5operator?$FL?$FN?5with?5a?5st@ DB 'cannot'
	DB	' use operator[] with a string argument with ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02KFKPNHPM@?9?5@
CONST	SEGMENT
??_C@_02KFKPNHPM@?9?5@ DB '- ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@ENHBMBLC@while?5parsing?5@
CONST	SEGMENT
??_C@_0P@ENHBMBLC@while?5parsing?5@ DB 'while parsing ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05MFEJDJP@value@
CONST	SEGMENT
??_C@_05MFEJDJP@value@ DB 'value', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@NIGHFCLN@invalid_iterator@
CONST	SEGMENT
??_C@_0BB@NIGHFCLN@invalid_iterator@ DB 'invalid_iterator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DKBLOJA@parse_error@
CONST	SEGMENT
??_C@_0M@DKBLOJA@parse_error@ DB 'parse_error', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BJIBBOFC@parse?5error@
CONST	SEGMENT
??_C@_0M@BJIBBOFC@parse?5error@ DB 'parse error', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02PHMGELLB@?6?6@
CONST	SEGMENT
??_C@_02PHMGELLB@?6?6@ DB 0aH, 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03JFDPLKFJ@?$HN?$DL?6@
CONST	SEGMENT
??_C@_03JFDPLKFJ@?$HN?$DL?6@ DB '};', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GBBPBDAB@cannot?5get?5value@
CONST	SEGMENT
??_C@_0BB@GBBPBDAB@cannot?5get?5value@ DB 'cannot get value', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03FHFHMOA@?7?$HN?6@
CONST	SEGMENT
??_C@_03FHFHMOA@?7?$HN?6@ DB 09H, '}', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02NOKNKGCL@?7?7@
CONST	SEGMENT
??_C@_02NOKNKGCL@?7?7@ DB 09H, 09H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03FGINLMGM@?7?7?6@
CONST	SEGMENT
??_C@_03FGINLMGM@?7?7?6@ DB 09H, 09H, 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@NPGFLEMP@?6?7virtual?5void?5Write?$CIPhiveBinar@
CONST	SEGMENT
??_C@_0EC@NPGFLEMP@?6?7virtual?5void?5Write?$CIPhiveBinar@ DB 0aH, 09H, 'v'
	DB	'irtual void Write(PhiveBinaryVectorWriter& Writer) override {'
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IMAGFDPC@?$FL0?$FN?$CJ?0?5sizeof?$CIm_@
CONST	SEGMENT
??_C@_0BA@IMAGFDPC@?$FL0?$FN?$CJ?0?5sizeof?$CIm_@ DB '[0]), sizeof(m_', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@GJNELJAO@Reader?4ReadStruct?$CI?$CGm_@
CONST	SEGMENT
??_C@_0BG@GJNELJAO@Reader?4ReadStruct?$CI?$CGm_@ DB 'Reader.ReadStruct(&m'
	DB	'_', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@FDDMNIBD@?6?7virtual?5void?5Read?$CIPhiveBinary@
CONST	SEGMENT
??_C@_0EB@FDDMNIBD@?6?7virtual?5void?5Read?$CIPhiveBinary@ DB 0aH, 09H, 'v'
	DB	'irtual void Read(PhiveBinaryVectorReader& Reader) override {', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@MONBHBKG@Writer?4WriteRawUnsafeFixed?$CIrein@
CONST	SEGMENT
??_C@_0DN@MONBHBKG@Writer?4WriteRawUnsafeFixed?$CIrein@ DB 'Writer.WriteR'
	DB	'awUnsafeFixed(reinterpret_cast<const char*>(&m_', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PGCHBHEK@?0?5sizeof?$CIT?$CJ?0?5?$CC@
CONST	SEGMENT
??_C@_0P@PGCHBHEK@?0?5sizeof?$CIT?$CJ?0?5?$CC@ DB ', sizeof(T), "', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@LCJBPMLM@Reader?4ReadHkPointer?$DMT?$DO?$CI?$CG@
CONST	SEGMENT
??_C@_0BK@LCJBPMLM@Reader?4ReadHkPointer?$DMT?$DO?$CI?$CG@ DB 'Reader.Rea'
	DB	'dHkPointer<T>(&', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PIEMPCOE@?$FL0?$FN?0?5sizeof?$CIm_@
CONST	SEGMENT
??_C@_0P@PIEMPCOE@?$FL0?$FN?0?5sizeof?$CIm_@ DB '[0], sizeof(m_', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@HJOJCKPE@Writer?4WriteHkPointer?$DMT?$DO?$CI?$CG@
CONST	SEGMENT
??_C@_0BL@HJOJCKPE@Writer?4WriteHkPointer?$DMT?$DO?$CI?$CG@ DB 'Writer.Wr'
	DB	'iteHkPointer<T>(&', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NBJPKPMN@Writer?4WriteHkPointer?$DM@
CONST	SEGMENT
??_C@_0BH@NBJPKPMN@Writer?4WriteHkPointer?$DM@ DB 'Writer.WriteHkPointer<'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LCOIIKIK@?4m_ptr?0?5sizeof?$CI@
CONST	SEGMENT
??_C@_0BA@LCOIIKIK@?4m_ptr?0?5sizeof?$CI@ DB '.m_ptr, sizeof(', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OEKMFJEA@?0?5sizeof?$CIT?$CJ?$CJ?$DL@
CONST	SEGMENT
??_C@_0O@OEKMFJEA@?0?5sizeof?$CIT?$CJ?$CJ?$DL@ DB ', sizeof(T));', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EFCEIBB@?4Write?$CIWriter?$CJ?$DL@
CONST	SEGMENT
??_C@_0BA@EFCEIBB@?4Write?$CIWriter?$CJ?$DL@ DB '.Write(Writer);', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@HGKCEIMA@Writer?4WriteRawUnsafeFixed?$CIrein@
CONST	SEGMENT
??_C@_0DL@HGKCEIMA@Writer?4WriteRawUnsafeFixed?$CIrein@ DB 'Writer.WriteR'
	DB	'awUnsafeFixed(reinterpret_cast<const char*>(&', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LOBCJAO@?$CJ?0?5sizeof?$CI@
CONST	SEGMENT
??_C@_0L@LOBCJAO@?$CJ?0?5sizeof?$CI@ DB '), sizeof(', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@BJAEFHNB@Writer?4QueryHkPointerWrite?$CI?$CC@
CONST	SEGMENT
??_C@_0BN@BJAEFHNB@Writer?4QueryHkPointerWrite?$CI?$CC@ DB 'Writer.QueryH'
	DB	'kPointerWrite("', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HGJCPFDI@?4Read?$CIReader?$CJ?$DL@
CONST	SEGMENT
??_C@_0P@HGJCPFDI@?4Read?$CIReader?$CJ?$DL@ DB '.Read(Reader);', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@JAIHFHGL@Writer?4WriteHkArray?$DM@
CONST	SEGMENT
??_C@_0BF@JAIHFHGL@Writer?4WriteHkArray?$DM@ DB 'Writer.WriteHkArray<', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@BJIDNMMB@Writer?4QueryHkArrayWrite?$CI?$CC@
CONST	SEGMENT
??_C@_0BL@BJIDNMMB@Writer?4QueryHkArrayWrite?$CI?$CC@ DB 'Writer.QueryHkA'
	DB	'rrayWrite("', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EFHGHDJM@Reader?4ReadStruct?$CI?$CG@
CONST	SEGMENT
??_C@_0BE@EFHGHDJM@Reader?4ReadStruct?$CI?$CG@ DB 'Reader.ReadStruct(&', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03IKPFCAA@?$CJ?$CJ?$DL@
CONST	SEGMENT
??_C@_03IKPFCAA@?$CJ?$CJ?$DL@ DB '));', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09HODNEBMG@?0?5sizeof?$CI@
CONST	SEGMENT
??_C@_09HODNEBMG@?0?5sizeof?$CI@ DB ', sizeof(', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04IABHFFNB@?$CJ?0?5?$CC@
CONST	SEGMENT
??_C@_04IABHFFNB@?$CJ?0?5?$CC@ DB '), "', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@KNOCKEAD@Reader?4ReadHkArray?$DM@
CONST	SEGMENT
??_C@_0BE@KNOCKEAD@Reader?4ReadHkArray?$DM@ DB 'Reader.ReadHkArray<', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03DLMPDLAN@?$DO?$CI?$CG@
CONST	SEGMENT
??_C@_03DLMPDLAN@?$DO?$CI?$CG@ DB '>(&', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@ICHKEMIB@std?3?3vector?$DM@
CONST	SEGMENT
??_C@_0N@ICHKEMIB@std?3?3vector?$DM@ DB 'std::vector<', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08MDBEEMA@hkRefPtr@
CONST	SEGMENT
??_C@_08MDBEEMA@hkRefPtr@ DB 'hkRefPtr', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03NPKONFAB@?$CC?$CJ?$DL@
CONST	SEGMENT
??_C@_03NPKONFAB@?$CC?$CJ?$DL@ DB '");', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02NCGPMEBG@?$DL?6@
CONST	SEGMENT
??_C@_02NCGPMEBG@?$DL?6@ DB ';', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@OHFHCIHK@template?5?$DMtypename?5T?0?5int?5N?$DO?6@
CONST	SEGMENT
??_C@_0BO@OHFHCIHK@template?5?$DMtypename?5T?0?5int?5N?$DO?6@ DB 'templat'
	DB	'e <typename T, int N>', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03LHKGCLJD@?$FLN?$FN@
CONST	SEGMENT
??_C@_03LHKGCLJD@?$FLN?$FN@ DB '[N]', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OOBJEGIO@hkRelArray@
CONST	SEGMENT
??_C@_0L@OOBJEGIO@hkRelArray@ DB 'hkRelArray', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07CBKKOCFO@hkArray@
CONST	SEGMENT
??_C@_07CBKKOCFO@hkArray@ DB 'hkArray', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IFFNGCBO@ParentAddress@
CONST	SEGMENT
??_C@_0O@IFFNGCBO@ParentAddress@ DB 'ParentAddress', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07EODJIPPN@Address@
CONST	SEGMENT
??_C@_07EODJIPPN@Address@ DB 'Address', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04JNFDGKJJ@T?$FLN?$FN@
CONST	SEGMENT
??_C@_04JNFDGKJJ@T?$FLN?$FN@ DB 'T[N]', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02EGAGMKJ@T?$CK@
CONST	SEGMENT
??_C@_02EGAGMKJ@T?$CK@ DB 'T*', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JGIAHIGF@Declarations@
CONST	SEGMENT
??_C@_0N@JGIAHIGF@Declarations@ DB 'Declarations', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@DJOMFKAE@template?5?$DMtypename?5T?$DO?6@
CONST	SEGMENT
??_C@_0BH@DJOMFKAE@template?5?$DMtypename?5T?$DO?6@ DB 'template <typenam'
	DB	'e T>', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_02HNJCDPAF@m_@
CONST	SEGMENT
??_C@_02HNJCDPAF@m_@ DB 'm_', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OMPJNBEE@DeclaredName@
CONST	SEGMENT
??_C@_0N@OMPJNBEE@DeclaredName@ DB 'DeclaredName', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@NCCOFNFG@Reader?4ReadStruct?$CI?$CGm_subTypeArr@
CONST	SEGMENT
??_C@_0DP@NCCOFNFG@Reader?4ReadStruct?$CI?$CGm_subTypeArr@ DB 'Reader.Rea'
	DB	'dStruct(&m_subTypeArray[0], sizeof(m_subTypeArray));', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@LPHDECH@?5m_subTypeArray?$FL@
CONST	SEGMENT
??_C@_0BB@LPHDECH@?5m_subTypeArray?$FL@ DB ' m_subTypeArray[', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07MLEFNJG@Pointer@
CONST	SEGMENT
??_C@_07MLEFNJG@Pointer@ DB 'Pointer', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0GH@NGNNMFPM@Writer?4WriteRawUnsafeFixed?$CIrein@
CONST	SEGMENT
??_C@_0GH@NGNNMFPM@Writer?4WriteRawUnsafeFixed?$CIrein@ DB 'Writer.WriteR'
	DB	'awUnsafeFixed(reinterpret_cast<const char*>(&m_subTypeArray[0'
	DB	']), sizeof(m_subTypeArray));', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04BOLKHABD@?$CJ?$FN?$DL?6@
CONST	SEGMENT
??_C@_04BOLKHABD@?$CJ?$FN?$DL?6@ DB ')];', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08ICBABEDP@hkFpMath@
CONST	SEGMENT
??_C@_08ICBABEDP@hkFpMath@ DB 'hkFpMath', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08PBGGBBJB@?1sizeof?$CI@
CONST	SEGMENT
??_C@_08PBGGBBJB@?1sizeof?$CI@ DB '/sizeof(', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07CNMHPEMB@SubType@
CONST	SEGMENT
??_C@_07CNMHPEMB@SubType@ DB 'SubType', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0GG@MKJOKMIO@Writer?4WriteRawUnsafeFixed?$CIrein@
CONST	SEGMENT
??_C@_0GG@MKJOKMIO@Writer?4WriteRawUnsafeFixed?$CIrein@ DB 'Writer.WriteR'
	DB	'awUnsafeFixed(reinterpret_cast<const char*>(&m_primitiveBase)'
	DB	', sizeof(m_primitiveBase));', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@BCDIPMIC@Reader?4ReadStruct?$CI?$CGm_primitiveB@
CONST	SEGMENT
??_C@_0DO@BCDIPMIC@Reader?4ReadStruct?$CI?$CGm_primitiveB@ DB 'Reader.Rea'
	DB	'dStruct(&m_primitiveBase, sizeof(m_primitiveBase));', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05HPPFDPIF@Array@
CONST	SEGMENT
??_C@_05HPPFDPIF@Array@ DB 'Array', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04BDAIJBLK@Kind@
CONST	SEGMENT
??_C@_04BDAIJBLK@Kind@ DB 'Kind', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0FO@DHIHCNDI@?5?3?5public?5PhiveBinaryVectorRead@
CONST	SEGMENT
??_C@_0FO@DHIHCNDI@?5?3?5public?5PhiveBinaryVectorRead@ DB ' : public Phi'
	DB	'veBinaryVectorReader::hkReadable, public PhiveBinaryVectorWri'
	DB	'ter::hkWriteable {', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03NMMCOAOG@?5?$HL?6@
CONST	SEGMENT
??_C@_03NMMCOAOG@?5?$HL?6@ DB ' {', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01GPOEFGEJ@?7@
CONST	SEGMENT
??_C@_01GPOEFGEJ@?7@ DB 09H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DMEJBBKG@?5m_primitiveBase?$DL?6@
CONST	SEGMENT
??_C@_0BD@DMEJBBKG@?5m_primitiveBase?$DL?6@ DB ' m_primitiveBase;', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HNABOCMF@?5?3?5public?5@
CONST	SEGMENT
??_C@_0L@HNABOCMF@?5?3?5public?5@ DB ' : public ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02MAHDAOBJ@hk@
CONST	SEGMENT
??_C@_02MAHDAOBJ@hk@ DB 'hk', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BIMOPEDO@?3?3Write?$CIWriter?$CJ?$DL@
CONST	SEGMENT
??_C@_0BB@BIMOPEDO@?3?3Write?$CIWriter?$CJ?$DL@ DB '::Write(Writer);', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IGEPLIGJ@?3?3Read?$CIReader?$CJ?$DL@
CONST	SEGMENT
??_C@_0BA@IGEPLIGJ@?3?3Read?$CIReader?$CJ?$DL@ DB '::Read(Reader);', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PIMACOKL@Writer?4Align?$CI@
CONST	SEGMENT
??_C@_0O@PIMACOKL@Writer?4Align?$CI@ DB 'Writer.Align(', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BNONFCHB@Reader?4Align?$CI@
CONST	SEGMENT
??_C@_0O@BNONFCHB@Reader?4Align?$CI@ DB 'Reader.Align(', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06EBOPLIP@Parent@
CONST	SEGMENT
??_C@_06EBOPLIP@Parent@ DB 'Parent', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07DIBCDNGL@struct?5@
CONST	SEGMENT
??_C@_07DIBCDNGL@struct?5@ DB 'struct ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02FKHNAOPL@__@
CONST	SEGMENT
??_C@_02FKHNAOPL@__@ DB '__', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02LJALELK@?$CJ?$DL@
CONST	SEGMENT
??_C@_02LJALELK@?$CJ?$DL@ DB ');', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02MOLJINC@?3?3@
CONST	SEGMENT
??_C@_02MOLJINC@?3?3@ DB '::', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09LIPKCAOI@?0?5column?5@
CONST	SEGMENT
??_C@_09LIPKCAOI@?0?5column?5@ DB ', column ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DHAIOKED@?$FLjson?4exception?4@
CONST	SEGMENT
??_C@_0BB@DHAIOKED@?$FLjson?4exception?4@ DB '[json.exception.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09BEOCNAAM@?5at?5line?5@
CONST	SEGMENT
??_C@_09BEOCNAAM@?5at?5line?5@ DB ' at line ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02PBFOLPKM@?$FN?5@
CONST	SEGMENT
??_C@_02PBFOLPKM@?$FN?5@ DB '] ', 00H			; `string'
PUBLIC	??$forward@AEBQEBD@std@@YAAEBQEBDAEBQEBD@Z	; std::forward<char const * const &>
PUBLIC	??$_Emplace_back@D@?$_Uninitialized_backout_al@V?$allocator@D@std@@@std@@QEAAX$$QEAD@Z ; std::_Uninitialized_backout_al<std::allocator<char> >::_Emplace_back<char>
PUBLIC	??$construct_at@DD$0A@@std@@YAPEADQEAD$$QEAD@Z	; std::construct_at<char,char,0>
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@D@std@@@std@@QEAA@PEADAEAV?$allocator@D@1@@Z ; std::_Uninitialized_backout_al<std::allocator<char> >::_Uninitialized_backout_al<std::allocator<char> >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@D@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<char> >::~_Uninitialized_backout_al<std::allocator<char> >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@D@std@@@std@@QEAAPEADXZ ; std::_Uninitialized_backout_al<std::allocator<char> >::_Release
PUBLIC	?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@D@std@@@std@@QEAAX_K@Z ; std::_Uninitialized_backout_al<std::allocator<char> >::__autoclassinit2
PUBLIC	??$_Copy_unchecked@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z ; std::_Copy_unchecked<std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >,std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >,std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > >
PUBLIC	??$_Emplace_back@AEBI@?$_Uninitialized_backout_al@V?$allocator@I@std@@@std@@QEAAXAEBI@Z ; std::_Uninitialized_backout_al<std::allocator<unsigned int> >::_Emplace_back<unsigned int const &>
PUBLIC	??$_Fill_zero_memset@PEAI@std@@YAXPEAI_K@Z	; std::_Fill_zero_memset<unsigned int *>
PUBLIC	??$_Is_all_bits_zero@I@std@@YA_NAEBI@Z		; std::_Is_all_bits_zero<unsigned int>
PUBLIC	??$forward@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@@std@@YA$$QEAV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@AEAV10@@Z ; std::forward<std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > >
PUBLIC	??$_Uninitialized_move@PEADV?$allocator@D@std@@@std@@YAPEADQEAD0PEADAEAV?$allocator@D@0@@Z ; std::_Uninitialized_move<char *,std::allocator<char> >
PUBLIC	??$construct@DD@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@QEAD$$QEAD@Z ; std::_Default_allocator_traits<std::allocator<char> >::construct<char,char>
PUBLIC	??$_Copy_memmove@PEADPEAD@std@@YAPEADPEAD00@Z	; std::_Copy_memmove<char *,char *>
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_Vector_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Dec@?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAXXZ ; std::_Vb_const_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::_Dec
PUBLIC	?_Inc@?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAXXZ ; std::_Vb_const_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::_Inc
PUBLIC	??4?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@_N@Z ; std::_Vb_reference<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator=
PUBLIC	?capacity@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ ; std::vector<char,std::allocator<char> >::capacity
PUBLIC	?_Getal@?$vector@DV?$allocator@D@std@@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::vector<char,std::allocator<char> >::_Getal
PUBLIC	??E?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@XZ ; std::_Vb_const_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator++
PUBLIC	??F?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@XZ ; std::_Vb_const_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator--
PUBLIC	??4?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@AEBV01@@Z ; std::_Vb_reference<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator=
PUBLIC	?max_size@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ ; std::vector<char,std::allocator<char> >::max_size
PUBLIC	?_Calculate_growth@?$vector@DV?$allocator@D@std@@@std@@AEBA_K_K@Z ; std::vector<char,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@DV?$allocator@D@std@@@std@@AEAAXQEAD_K1@Z ; std::vector<char,std::allocator<char> >::_Change_array
PUBLIC	?_Xlength@?$vector@DV?$allocator@D@std@@@std@@CAXXZ ; std::vector<char,std::allocator<char> >::_Xlength
PUBLIC	??0?$_Vector_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<char> >::_Vector_val<std::_Simple_types<char> >
PUBLIC	??E?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@XZ ; std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator++
PUBLIC	??F?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@XZ ; std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator--
PUBLIC	??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@QEAAPEAXI@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`scalar deleting destructor'
PUBLIC	??$_Move_unchecked@PEAIPEAI@std@@YAPEAIPEAI00@Z	; std::_Move_unchecked<unsigned int *,unsigned int *>
PUBLIC	??$addressof@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@I@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<unsigned int> > >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_Vector_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_Vector_val<std::_Simple_types<char> >,1><>
PUBLIC	??$copy@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z ; std::copy<std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >,std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > >
PUBLIC	??$_Uninitialized_fill_n@V?$allocator@I@std@@@std@@YAPEAIPEAI_KAEBIAEAV?$allocator@I@0@@Z ; std::_Uninitialized_fill_n<std::allocator<unsigned int> >
PUBLIC	??$_Resize_reallocate@I@?$vector@IV?$allocator@I@std@@@std@@AEAAX_KAEBI@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Resize_reallocate<unsigned int>
PUBLIC	??$_Seek_wrapped@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YAXAEAV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@$$QEAV10@@Z ; std::_Seek_wrapped<std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >,std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > >
PUBLIC	??$_Copy_backward_unchecked@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z ; std::_Copy_backward_unchecked<std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >,std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > >
PUBLIC	??$_Adl_verify_range@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >,std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > >
PUBLIC	??8?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vb_const_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator==
PUBLIC	??$_Fill_vbool@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@@std@@YAXV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@_N@Z ; std::_Fill_vbool<std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > >
PUBLIC	??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@0@@Z ; std::destroy_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
PUBLIC	??$construct_at@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@AEBQEAU12@$0A@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@0@QEAPEAU10@AEBQEAU10@@Z ; std::construct_at<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * const &,0>
PUBLIC	??$addressof@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@0@AEAPEAU10@@Z ; std::addressof<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *>
PUBLIC	??$to_address@D@std@@YAPEADQEAD@Z		; std::to_address<char>
PUBLIC	??$forward@AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@YAAEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@0@AEBQEAU10@@Z ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * const &>
PUBLIC	??$forward@AEAY0P@$$CBD@std@@YAAEAY0P@$$CBDAEAY0P@$$CBD@Z ; std::forward<char const (&)[15]>
PUBLIC	??$forward@PEBD@std@@YA$$QEAPEBDAEAPEBD@Z	; std::forward<char const *>
PUBLIC	?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEBAX_J@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned int> > >::_Verify_offset
PUBLIC	??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEAAAEAV01@_J@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned int> > >::operator+=
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEAA@PEAIPEBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned int> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned int> > >
PUBLIC	??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEAAAEAV01@_J@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned int> > >::operator+=
PUBLIC	?__autoclassinit2@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEAAX_K@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned int> > >::__autoclassinit2
PUBLIC	?erase@?$vector@IV?$allocator@I@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@0@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::erase
PUBLIC	?begin@?$vector@IV?$allocator@I@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@XZ ; std::vector<unsigned int,std::allocator<unsigned int> >::begin
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEAA@PEAIPEBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned int> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned int> > >
PUBLIC	?end@?$vector@IV?$allocator@I@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@XZ ; std::vector<unsigned int,std::allocator<unsigned int> >::end
PUBLIC	??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEBA?AV01@_J@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned int> > >::operator+
PUBLIC	?_Make_iter@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@V?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@@Z ; std::vector<bool,std::allocator<bool> >::_Make_iter
PUBLIC	?_Trim@?$vector@_NV?$allocator@_N@std@@@std@@QEAAX_K@Z ; std::vector<bool,std::allocator<bool> >::_Trim
PUBLIC	??0?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ	; std::vector<char,std::allocator<char> >::vector<char,std::allocator<char> >
PUBLIC	??0?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@AEBV?$_Vb_iter_base@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@1@@Z ; std::_Vb_reference<std::_Wrap_alloc<std::allocator<unsigned int> > >::_Vb_reference<std::_Wrap_alloc<std::allocator<unsigned int> > >
PUBLIC	?_Getptr@?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBAPEBIXZ ; std::_Vb_reference<std::_Wrap_alloc<std::allocator<unsigned int> > >::_Getptr
PUBLIC	?_Mask@?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@IEBAIXZ ; std::_Vb_reference<std::_Wrap_alloc<std::allocator<unsigned int> > >::_Mask
PUBLIC	??B?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA_NXZ ; std::_Vb_reference<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator bool
PUBLIC	??0?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@QEAA@XZ ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> >::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> >
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@2@QEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >::deallocate
PUBLIC	??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QEAA@XZ ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >
PUBLIC	??D?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA?AV?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@1@XZ ; std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator*
PUBLIC	??$_Resize@I@?$vector@IV?$allocator@I@std@@@std@@AEAAX_KAEBI@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Resize<unsigned int>
PUBLIC	??$_Get_unwrapped_n@AEAV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@_J@std@@YA?A_TAEAV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@_J@Z ; std::_Get_unwrapped_n<std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > &,__int64>
PUBLIC	??$_Idl_distance@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?A_PAEBV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@0@Z ; std::_Idl_distance<std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >,std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > >
PUBLIC	??$_Get_unwrapped@AEAV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@@std@@YA?A_TAEAV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > &>
PUBLIC	??$copy_backward@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z ; std::copy_backward<std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >,std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > >
PUBLIC	??$fill_n@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@_K_N@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@_KAEB_N@Z ; std::fill_n<std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >,unsigned __int64,bool>
PUBLIC	??$_Destroy_range@V?$allocator@D@std@@@std@@YAXPEADQEADAEAV?$allocator@D@0@@Z ; std::_Destroy_range<std::allocator<char> >
PUBLIC	??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
PUBLIC	??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@0@AEAU10@@Z ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
PUBLIC	??$_Destroy_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *>
PUBLIC	??$_Construct_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@0@AEBQEAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * const &>
PUBLIC	??$_To_address@PEAD@std@@YA?A_PAEBQEAD@Z	; std::_To_address<char *>
PUBLIC	??$_Get_unwrapped@AEBQEAD@std@@YA?A_TAEBQEAD@Z	; std::_Get_unwrapped<char * const &>
PUBLIC	??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@PEAU01@@Z ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >
PUBLIC	??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@PEAU01@@Z ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >
PUBLIC	??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@AEAPEAU12@@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@0@AEAPEAU10@0@Z ; std::exchange<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * &>
PUBLIC	??$forward@AEAPEBD@std@@YAAEAPEBDAEAPEBD@Z	; std::forward<char const * &>
PUBLIC	??$forward@AEAY02$$CBD@std@@YAAEAY02$$CBDAEAY02$$CBD@Z ; std::forward<char const (&)[3]>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,1>::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,1><>
PUBLIC	??$forward@AEA_N@std@@YAAEA_NAEA_N@Z		; std::forward<bool &>
PUBLIC	??$forward@AEAH@std@@YAAEAHAEAH@Z		; std::forward<int &>
PUBLIC	??$forward@D@std@@YA$$QEADAEAD@Z		; std::forward<char>
PUBLIC	?_Compat@?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBAXAEBV12@@Z ; std::_Vb_const_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::_Compat
PUBLIC	?_Nw@?$_Vb_val@V?$allocator@_N@std@@@std@@SA_K_K@Z ; std::_Vb_val<std::allocator<bool> >::_Nw
PUBLIC	?resize@?$vector@IV?$allocator@I@std@@@std@@QEAAX_KAEBI@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::resize
PUBLIC	?size@?$vector@_NV?$allocator@_N@std@@@std@@QEBA_KXZ ; std::vector<bool,std::allocator<bool> >::size
PUBLIC	?max_size@?$vector@_NV?$allocator@_N@std@@@std@@QEBA_KXZ ; std::vector<bool,std::allocator<bool> >::max_size
PUBLIC	?empty@?$vector@_NV?$allocator@_N@std@@@std@@QEBA_NXZ ; std::vector<bool,std::allocator<bool> >::empty
PUBLIC	?_Xlen@?$vector@_NV?$allocator@_N@std@@@std@@QEBAXXZ ; std::vector<bool,std::allocator<bool> >::_Xlen
PUBLIC	??0?$_Vb_iter_base@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@PEBI_KPEBU_Container_base0@1@@Z ; std::_Vb_iter_base<std::_Wrap_alloc<std::allocator<unsigned int> > >::_Vb_iter_base<std::_Wrap_alloc<std::allocator<unsigned int> > >
PUBLIC	?_Orphan_range@?$vector@DV?$allocator@D@std@@@std@@AEBAXPEAD0@Z ; std::vector<char,std::allocator<char> >::_Orphan_range
PUBLIC	??Y?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@_J@Z ; std::_Vb_const_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator+=
PUBLIC	??G?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA_JAEBV01@@Z ; std::_Vb_const_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator-
PUBLIC	?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::clear
PUBLIC	?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@QEAA_KV?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_K@Z ; std::vector<bool,std::allocator<bool> >::_Insert_x
PUBLIC	??0?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@PEBIPEBU_Container_base0@1@@Z ; std::_Vb_const_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::_Vb_const_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >
PUBLIC	??Y?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@_J@Z ; std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator+=
PUBLIC	??0?$initializer_list@I@std@@QEAA@PEBI0@Z	; std::initializer_list<unsigned int>::initializer_list<unsigned int>
PUBLIC	?begin@?$initializer_list@I@std@@QEBAPEBIXZ	; std::initializer_list<unsigned int>::begin
PUBLIC	?end@?$initializer_list@I@std@@QEBAPEBIXZ	; std::initializer_list<unsigned int>::end
PUBLIC	?__autoclassinit2@?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAX_K@Z ; std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::__autoclassinit2
PUBLIC	??0?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@PEBIPEBU_Container_base0@1@@Z ; std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >
PUBLIC	?begin@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@XZ ; std::vector<bool,std::allocator<bool> >::begin
PUBLIC	?_Insert_n@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@V?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_KAEB_N@Z ; std::vector<bool,std::allocator<bool> >::_Insert_n
PUBLIC	??H?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA?AV01@_J@Z ; std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator+
PUBLIC	?end@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@XZ ; std::vector<bool,std::allocator<bool> >::end
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_Vector_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	??1?$_Vb_val@V?$allocator@_N@std@@@std@@QEAA@XZ	; std::_Vb_val<std::allocator<bool> >::~_Vb_val<std::allocator<bool> >
PUBLIC	?_Getal@?$vector@DV?$allocator@D@std@@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::vector<char,std::allocator<char> >::_Getal
PUBLIC	?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@2@_K@Z ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> >::deallocate
PUBLIC	??1?$vector@_NV?$allocator@_N@std@@@std@@QEAA@XZ ; std::vector<bool,std::allocator<bool> >::~vector<bool,std::allocator<bool> >
PUBLIC	?_Tidy@?$vector@DV?$allocator@D@std@@@std@@AEAAXXZ ; std::vector<char,std::allocator<char> >::_Tidy
PUBLIC	??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ	; std::vector<char,std::allocator<char> >::~vector<char,std::allocator<char> >
PUBLIC	?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@2@_K@Z ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> >::allocate
PUBLIC	??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@@Z ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *>::_Buyheadnode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >
PUBLIC	??$?0AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@2@$00@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAU_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,1>,1>::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,1>,1><std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::_Zero_then_variadic_args_t>
PUBLIC	??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@YAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > >
PUBLIC	??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >
PUBLIC	?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IEAAXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,0> >::_Alloc_sentinel_and_proxy
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,1>::_Get_first
PUBLIC	??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,0> >::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,0> >
PUBLIC	?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,0> >::_Getal
PUBLIC	?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,0> >::_Get_scary
PUBLIC	??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,0> >
PUBLIC	??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QEAA@XZ ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >
PUBLIC	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@QEAA@XZ ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QEAA@XZ ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >
PUBLIC	?__autoclassinit2@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QEAAX_K@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::__autoclassinit2
PUBLIC	??1other_error@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ ; nlohmann::json_abi_v3_11_3::detail::other_error::~other_error
PUBLIC	??_Gother_error@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z ; nlohmann::json_abi_v3_11_3::detail::other_error::`scalar deleting destructor'
PUBLIC	??1out_of_range@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ ; nlohmann::json_abi_v3_11_3::detail::out_of_range::~out_of_range
PUBLIC	??_Gout_of_range@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z ; nlohmann::json_abi_v3_11_3::detail::out_of_range::`scalar deleting destructor'
PUBLIC	??1type_error@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ ; nlohmann::json_abi_v3_11_3::detail::type_error::~type_error
PUBLIC	??_Gtype_error@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z ; nlohmann::json_abi_v3_11_3::detail::type_error::`scalar deleting destructor'
PUBLIC	??1invalid_iterator@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ ; nlohmann::json_abi_v3_11_3::detail::invalid_iterator::~invalid_iterator
PUBLIC	??_Ginvalid_iterator@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z ; nlohmann::json_abi_v3_11_3::detail::invalid_iterator::`scalar deleting destructor'
PUBLIC	??1parse_error@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ ; nlohmann::json_abi_v3_11_3::detail::parse_error::~parse_error
PUBLIC	??_Gparse_error@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z ; nlohmann::json_abi_v3_11_3::detail::parse_error::`scalar deleting destructor'
PUBLIC	??1exception@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ ; nlohmann::json_abi_v3_11_3::detail::exception::~exception
PUBLIC	??_Gexception@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z ; nlohmann::json_abi_v3_11_3::detail::exception::`scalar deleting destructor'
PUBLIC	?ClassDependencies@PhiveClassGenerator@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@A ; PhiveClassGenerator::ClassDependencies
PUBLIC	?Classes@PhiveClassGenerator@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@A ; PhiveClassGenerator::Classes
EXTRN	??_Eother_error@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z:PROC ; nlohmann::json_abi_v3_11_3::detail::other_error::`vector deleting destructor'
EXTRN	??_Eexception@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z:PROC ; nlohmann::json_abi_v3_11_3::detail::exception::`vector deleting destructor'
EXTRN	??_Eout_of_range@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z:PROC ; nlohmann::json_abi_v3_11_3::detail::out_of_range::`vector deleting destructor'
EXTRN	??_Eparse_error@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z:PROC ; nlohmann::json_abi_v3_11_3::detail::parse_error::`vector deleting destructor'
EXTRN	??_Einvalid_iterator@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z:PROC ; nlohmann::json_abi_v3_11_3::detail::invalid_iterator::`vector deleting destructor'
EXTRN	??_Etype_error@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z:PROC ; nlohmann::json_abi_v3_11_3::detail::type_error::`vector deleting destructor'
?ClassDependencies@PhiveClassGenerator@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@A DB 010H DUP (?) ; PhiveClassGenerator::ClassDependencies
?Classes@PhiveClassGenerator@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@A DB 010H DUP (?) ; PhiveClassGenerator::Classes
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_unchecked@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z DD imagerel $LN59
	DD	imagerel $LN59+54
	DD	imagerel $unwind$??$_Copy_unchecked@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$_Copy_unchecked@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z DD imagerel $LN59+54
	DD	imagerel $LN59+170
	DD	imagerel $chain$0$??$_Copy_unchecked@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Copy_unchecked@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z DD imagerel $LN59+170
	DD	imagerel $LN59+196
	DD	imagerel $chain$1$??$_Copy_unchecked@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEADV?$allocator@D@std@@@std@@YAPEADQEAD0PEADAEAV?$allocator@D@0@@Z DD imagerel $LN23
	DD	imagerel $LN23+49
	DD	imagerel $unwind$??$_Uninitialized_move@PEADV?$allocator@D@std@@@std@@YAPEADQEAD0PEADAEAV?$allocator@D@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEADPEAD@std@@YAPEADPEAD00@Z DD imagerel $LN4
	DD	imagerel $LN4+48
	DD	imagerel $unwind$??$_Copy_memmove@PEADPEAD@std@@YAPEADPEAD00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN19
	DD	imagerel $LN19+67
	DD	imagerel $unwind$??4?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@DV?$allocator@D@std@@@std@@AEAAXQEAD_K1@Z DD imagerel $LN30
	DD	imagerel $LN30+132
	DD	imagerel $unwind$?_Change_array@?$vector@DV?$allocator@D@std@@@std@@AEAAXQEAD_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@DV?$allocator@D@std@@@std@@CAXXZ DD imagerel $LN4
	DD	imagerel $LN4+18
	DD	imagerel $unwind$?_Xlength@?$vector@DV?$allocator@D@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@QEAAPEAXI@Z DD imagerel $LN14
	DD	imagerel $LN14+35
	DD	imagerel $unwind$??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Move_unchecked@PEAIPEAI@std@@YAPEAIPEAI00@Z DD imagerel $LN16
	DD	imagerel $LN16+48
	DD	imagerel $unwind$??$_Move_unchecked@PEAIPEAI@std@@YAPEAIPEAI00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$copy@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z DD imagerel $LN82
	DD	imagerel $LN82+163
	DD	imagerel $unwind$??$copy@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_fill_n@V?$allocator@I@std@@@std@@YAPEAIPEAI_KAEBIAEAV?$allocator@I@0@@Z DD imagerel $LN28
	DD	imagerel $LN28+15
	DD	imagerel $unwind$??$_Uninitialized_fill_n@V?$allocator@I@std@@@std@@YAPEAIPEAI_KAEBIAEAV?$allocator@I@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$_Uninitialized_fill_n@V?$allocator@I@std@@@std@@YAPEAIPEAI_KAEBIAEAV?$allocator@I@0@@Z DD imagerel $LN28+15
	DD	imagerel $LN28+53
	DD	imagerel $chain$0$??$_Uninitialized_fill_n@V?$allocator@I@std@@@std@@YAPEAIPEAI_KAEBIAEAV?$allocator@I@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Uninitialized_fill_n@V?$allocator@I@std@@@std@@YAPEAIPEAI_KAEBIAEAV?$allocator@I@0@@Z DD imagerel $LN28+53
	DD	imagerel $LN28+88
	DD	imagerel $chain$1$??$_Uninitialized_fill_n@V?$allocator@I@std@@@std@@YAPEAIPEAI_KAEBIAEAV?$allocator@I@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize_reallocate@I@?$vector@IV?$allocator@I@std@@@std@@AEAAX_KAEBI@Z DD imagerel $LN66
	DD	imagerel $LN66+50
	DD	imagerel $unwind$??$_Resize_reallocate@I@?$vector@IV?$allocator@I@std@@@std@@AEAAX_KAEBI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Resize_reallocate@I@?$vector@IV?$allocator@I@std@@@std@@AEAAX_KAEBI@Z DD imagerel $LN66+50
	DD	imagerel $LN66+138
	DD	imagerel $chain$1$??$_Resize_reallocate@I@?$vector@IV?$allocator@I@std@@@std@@AEAAX_KAEBI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$_Resize_reallocate@I@?$vector@IV?$allocator@I@std@@@std@@AEAAX_KAEBI@Z DD imagerel $LN66+138
	DD	imagerel $LN66+232
	DD	imagerel $chain$2$??$_Resize_reallocate@I@?$vector@IV?$allocator@I@std@@@std@@AEAAX_KAEBI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$_Resize_reallocate@I@?$vector@IV?$allocator@I@std@@@std@@AEAAX_KAEBI@Z DD imagerel $LN66+232
	DD	imagerel $LN66+238
	DD	imagerel $chain$3$??$_Resize_reallocate@I@?$vector@IV?$allocator@I@std@@@std@@AEAAX_KAEBI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_backward_unchecked@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z DD imagerel $LN57
	DD	imagerel $LN57+49
	DD	imagerel $unwind$??$_Copy_backward_unchecked@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$_Copy_backward_unchecked@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z DD imagerel $LN57+49
	DD	imagerel $LN57+168
	DD	imagerel $chain$0$??$_Copy_backward_unchecked@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Copy_backward_unchecked@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z DD imagerel $LN57+168
	DD	imagerel $LN57+185
	DD	imagerel $chain$1$??$_Copy_backward_unchecked@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Fill_vbool@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@@std@@YAXV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@_N@Z DD imagerel $LN29
	DD	imagerel $LN29+55
	DD	imagerel $unwind$??$_Fill_vbool@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@@std@@YAXV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Fill_vbool@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@@std@@YAXV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@_N@Z DD imagerel $LN29+55
	DD	imagerel $LN29+211
	DD	imagerel $chain$1$??$_Fill_vbool@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@@std@@YAXV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$_Fill_vbool@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@@std@@YAXV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@_N@Z DD imagerel $LN29+211
	DD	imagerel $LN29+228
	DD	imagerel $chain$2$??$_Fill_vbool@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@@std@@YAXV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@0@@Z DD imagerel $LN16
	DD	imagerel $LN16+31
	DD	imagerel $unwind$??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?erase@?$vector@IV?$allocator@I@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@0@Z DD imagerel $LN27
	DD	imagerel $LN27+21
	DD	imagerel $unwind$?erase@?$vector@IV?$allocator@I@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?erase@?$vector@IV?$allocator@I@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@0@Z DD imagerel $LN27+21
	DD	imagerel $LN27+83
	DD	imagerel $chain$0$?erase@?$vector@IV?$allocator@I@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?erase@?$vector@IV?$allocator@I@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@0@Z DD imagerel $LN27+83
	DD	imagerel $LN27+100
	DD	imagerel $chain$1$?erase@?$vector@IV?$allocator@I@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Make_iter@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@V?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@@Z DD imagerel $LN27
	DD	imagerel $LN27+71
	DD	imagerel $unwind$?_Make_iter@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@V?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Trim@?$vector@_NV?$allocator@_N@std@@@std@@QEAAX_K@Z DD imagerel $LN59
	DD	imagerel $LN59+139
	DD	imagerel $unwind$?_Trim@?$vector@_NV?$allocator@_N@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize@I@?$vector@IV?$allocator@I@std@@@std@@AEAAX_KAEBI@Z DD imagerel $LN8
	DD	imagerel $LN8+102
	DD	imagerel $unwind$??$_Resize@I@?$vector@IV?$allocator@I@std@@@std@@AEAAX_KAEBI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$copy_backward@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z DD imagerel $LN80
	DD	imagerel $LN80+170
	DD	imagerel $unwind$??$copy_backward@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$fill_n@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@_K_N@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@_KAEB_N@Z DD imagerel $LN34
	DD	imagerel $LN34+29
	DD	imagerel $unwind$??$fill_n@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@_K_N@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@_KAEB_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$fill_n@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@_K_N@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@_KAEB_N@Z DD imagerel $LN34+29
	DD	imagerel $LN34+104
	DD	imagerel $chain$1$??$fill_n@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@_K_N@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@_KAEB_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$fill_n@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@_K_N@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@_KAEB_N@Z DD imagerel $LN34+104
	DD	imagerel $LN34+255
	DD	imagerel $chain$3$??$fill_n@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@_K_N@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@_KAEB_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$??$fill_n@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@_K_N@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@_KAEB_N@Z DD imagerel $LN34+255
	DD	imagerel $LN34+276
	DD	imagerel $chain$4$??$fill_n@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@_K_N@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@_KAEB_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$??$fill_n@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@_K_N@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@_KAEB_N@Z DD imagerel $LN34+276
	DD	imagerel $LN34+293
	DD	imagerel $chain$5$??$fill_n@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@_K_N@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@_KAEB_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@1@@Z DD imagerel $LN18
	DD	imagerel $LN18+31
	DD	imagerel $unwind$??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@PEAU01@@Z DD imagerel $LN64
	DD	imagerel $LN64+54
	DD	imagerel $unwind$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@PEAU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$vector@IV?$allocator@I@std@@@std@@QEAAX_KAEBI@Z DD imagerel $LN10
	DD	imagerel $LN10+102
	DD	imagerel $unwind$?resize@?$vector@IV?$allocator@I@std@@@std@@QEAAX_KAEBI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlen@?$vector@_NV?$allocator@_N@std@@@std@@QEBAXXZ DD imagerel $LN4
	DD	imagerel $LN4+18
	DD	imagerel $unwind$?_Xlen@?$vector@_NV?$allocator@_N@std@@@std@@QEBAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@QEAA_KV?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_K@Z DD imagerel $LN211
	DD	imagerel $LN211+76
	DD	imagerel $unwind$?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@QEAA_KV?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@QEAA_KV?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_K@Z DD imagerel $LN211+76
	DD	imagerel $LN211+87
	DD	imagerel $chain$0$?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@QEAA_KV?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@QEAA_KV?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_K@Z DD imagerel $LN211+87
	DD	imagerel $LN211+223
	DD	imagerel $chain$1$?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@QEAA_KV?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@QEAA_KV?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_K@Z DD imagerel $LN211+223
	DD	imagerel $LN211+235
	DD	imagerel $chain$2$?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@QEAA_KV?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@QEAA_KV?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_K@Z DD imagerel $LN211+235
	DD	imagerel $LN211+249
	DD	imagerel $chain$3$?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@QEAA_KV?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@QEAA_KV?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_K@Z DD imagerel $LN211+249
	DD	imagerel $LN211+565
	DD	imagerel $chain$4$?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@QEAA_KV?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@QEAA_KV?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_K@Z DD imagerel $LN211+565
	DD	imagerel $LN211+571
	DD	imagerel $chain$5$?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@QEAA_KV?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Insert_n@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@V?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_KAEB_N@Z DD imagerel $LN62
	DD	imagerel $LN62+104
	DD	imagerel $unwind$?_Insert_n@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@V?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_KAEB_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?_Insert_n@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@V?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_KAEB_N@Z DD imagerel $LN62+104
	DD	imagerel $LN62+205
	DD	imagerel $chain$0$?_Insert_n@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@V?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_KAEB_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?_Insert_n@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@V?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_KAEB_N@Z DD imagerel $LN62+205
	DD	imagerel $LN62+346
	DD	imagerel $chain$1$?_Insert_n@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@V?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_KAEB_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?_Insert_n@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@V?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_KAEB_N@Z DD imagerel $LN62+346
	DD	imagerel $LN62+351
	DD	imagerel $chain$2$?_Insert_n@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@V?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_KAEB_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?_Insert_n@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@V?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_KAEB_N@Z DD imagerel $LN62+351
	DD	imagerel $LN62+364
	DD	imagerel $chain$3$?_Insert_n@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@V?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_KAEB_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?end@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@XZ DD imagerel $LN13
	DD	imagerel $LN13+53
	DD	imagerel $unwind$?end@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Vb_val@V?$allocator@_N@std@@@std@@QEAA@XZ DD imagerel $LN36
	DD	imagerel $LN36+92
	DD	imagerel $unwind$??1?$_Vb_val@V?$allocator@_N@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@_NV?$allocator@_N@std@@@std@@QEAA@XZ DD imagerel $LN40
	DD	imagerel $LN40+92
	DD	imagerel $unwind$??1?$vector@_NV?$allocator@_N@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@DV?$allocator@D@std@@@std@@AEAAXXZ DD imagerel $LN30
	DD	imagerel $LN30+88
	DD	imagerel $unwind$?_Tidy@?$vector@DV?$allocator@D@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ DD imagerel $LN33
	DD	imagerel $LN33+88
	DD	imagerel $unwind$??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@@Z DD imagerel $LN33
	DD	imagerel $LN33+36
	DD	imagerel $unwind$??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@@Z DD imagerel $LN49
	DD	imagerel $LN49+39
	DD	imagerel $unwind$??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@1@@Z DD imagerel $LN75
	DD	imagerel $LN75+25
	DD	imagerel $unwind$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@1@@Z DD imagerel $LN75+25
	DD	imagerel $LN75+116
	DD	imagerel $chain$1$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@1@@Z DD imagerel $LN75+116
	DD	imagerel $LN75+125
	DD	imagerel $chain$2$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IEAAXXZ DD imagerel $LN36
	DD	imagerel $LN36+45
	DD	imagerel $unwind$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z DD imagerel $LN46
	DD	imagerel $LN46+55
	DD	imagerel $unwind$??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ DD imagerel $LN52
	DD	imagerel $LN52+42
	DD	imagerel $unwind$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QEAA@XZ DD imagerel $LN50
	DD	imagerel $LN50+55
	DD	imagerel $unwind$??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@QEAA@XZ DD imagerel $LN10
	DD	imagerel $LN10+31
	DD	imagerel $unwind$??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__FClassDependencies@PhiveClassGenerator@@YAXXZ DD imagerel ??__FClassDependencies@PhiveClassGenerator@@YAXXZ
	DD	imagerel ??__FClassDependencies@PhiveClassGenerator@@YAXXZ+23
	DD	imagerel $unwind$??__FClassDependencies@PhiveClassGenerator@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??__FClassDependencies@PhiveClassGenerator@@YAXXZ DD imagerel ??__FClassDependencies@PhiveClassGenerator@@YAXXZ+23
	DD	imagerel ??__FClassDependencies@PhiveClassGenerator@@YAXXZ+116
	DD	imagerel $chain$1$??__FClassDependencies@PhiveClassGenerator@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??__FClassDependencies@PhiveClassGenerator@@YAXXZ DD imagerel ??__FClassDependencies@PhiveClassGenerator@@YAXXZ+116
	DD	imagerel ??__FClassDependencies@PhiveClassGenerator@@YAXXZ+131
	DD	imagerel $chain$2$??__FClassDependencies@PhiveClassGenerator@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EClassDependencies@PhiveClassGenerator@@YAXXZ DD imagerel ??__EClassDependencies@PhiveClassGenerator@@YAXXZ
	DD	imagerel ??__EClassDependencies@PhiveClassGenerator@@YAXXZ+54
	DD	imagerel $unwind$??__EClassDependencies@PhiveClassGenerator@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QEAA@XZ DD imagerel $LN55
	DD	imagerel $LN55+42
	DD	imagerel $unwind$??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__FClasses@PhiveClassGenerator@@YAXXZ DD imagerel ??__FClasses@PhiveClassGenerator@@YAXXZ
	DD	imagerel ??__FClasses@PhiveClassGenerator@@YAXXZ+23
	DD	imagerel $unwind$??__FClasses@PhiveClassGenerator@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??__FClasses@PhiveClassGenerator@@YAXXZ DD imagerel ??__FClasses@PhiveClassGenerator@@YAXXZ+23
	DD	imagerel ??__FClasses@PhiveClassGenerator@@YAXXZ+116
	DD	imagerel $chain$1$??__FClasses@PhiveClassGenerator@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??__FClasses@PhiveClassGenerator@@YAXXZ DD imagerel ??__FClasses@PhiveClassGenerator@@YAXXZ+116
	DD	imagerel ??__FClasses@PhiveClassGenerator@@YAXXZ+131
	DD	imagerel $chain$2$??__FClasses@PhiveClassGenerator@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EClasses@PhiveClassGenerator@@YAXXZ DD imagerel ??__EClasses@PhiveClassGenerator@@YAXXZ
	DD	imagerel ??__EClasses@PhiveClassGenerator@@YAXXZ+54
	DD	imagerel $unwind$??__EClasses@PhiveClassGenerator@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1other_error@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ DD imagerel $LN15
	DD	imagerel $LN15+58
	DD	imagerel $unwind$??1other_error@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gother_error@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z DD imagerel $LN21
	DD	imagerel $LN21+91
	DD	imagerel $unwind$??_Gother_error@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1out_of_range@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ DD imagerel $LN15
	DD	imagerel $LN15+58
	DD	imagerel $unwind$??1out_of_range@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gout_of_range@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z DD imagerel $LN21
	DD	imagerel $LN21+91
	DD	imagerel $unwind$??_Gout_of_range@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1type_error@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ DD imagerel $LN15
	DD	imagerel $LN15+58
	DD	imagerel $unwind$??1type_error@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gtype_error@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z DD imagerel $LN21
	DD	imagerel $LN21+91
	DD	imagerel $unwind$??_Gtype_error@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1invalid_iterator@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ DD imagerel $LN15
	DD	imagerel $LN15+58
	DD	imagerel $unwind$??1invalid_iterator@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Ginvalid_iterator@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z DD imagerel $LN21
	DD	imagerel $LN21+91
	DD	imagerel $unwind$??_Ginvalid_iterator@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1parse_error@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ DD imagerel $LN15
	DD	imagerel $LN15+58
	DD	imagerel $unwind$??1parse_error@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gparse_error@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z DD imagerel $LN21
	DD	imagerel $LN21+91
	DD	imagerel $unwind$??_Gparse_error@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ DD imagerel $LN12
	DD	imagerel $LN12+58
	DD	imagerel $unwind$??1exception@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z DD imagerel $LN18
	DD	imagerel $LN18+91
	DD	imagerel $unwind$??_Gexception@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gparse_error@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1parse_error@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Ginvalid_iterator@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1invalid_iterator@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gtype_error@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1type_error@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gout_of_range@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1out_of_range@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gother_error@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1other_error@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EClasses@PhiveClassGenerator@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??__FClasses@PhiveClassGenerator@@YAXXZ DD 021H
	DD	imagerel ??__FClasses@PhiveClassGenerator@@YAXXZ
	DD	imagerel ??__FClasses@PhiveClassGenerator@@YAXXZ+23
	DD	imagerel $unwind$??__FClasses@PhiveClassGenerator@@YAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??__FClasses@PhiveClassGenerator@@YAXXZ DD 040a21H
	DD	07740aH
	DD	066405H
	DD	imagerel ??__FClasses@PhiveClassGenerator@@YAXXZ
	DD	imagerel ??__FClasses@PhiveClassGenerator@@YAXXZ+23
	DD	imagerel $unwind$??__FClasses@PhiveClassGenerator@@YAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__FClasses@PhiveClassGenerator@@YAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EClassDependencies@PhiveClassGenerator@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??__FClassDependencies@PhiveClassGenerator@@YAXXZ DD 021H
	DD	imagerel ??__FClassDependencies@PhiveClassGenerator@@YAXXZ
	DD	imagerel ??__FClassDependencies@PhiveClassGenerator@@YAXXZ+23
	DD	imagerel $unwind$??__FClassDependencies@PhiveClassGenerator@@YAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??__FClassDependencies@PhiveClassGenerator@@YAXXZ DD 040a21H
	DD	07740aH
	DD	066405H
	DD	imagerel ??__FClassDependencies@PhiveClassGenerator@@YAXXZ
	DD	imagerel ??__FClassDependencies@PhiveClassGenerator@@YAXXZ+23
	DD	imagerel $unwind$??__FClassDependencies@PhiveClassGenerator@@YAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__FClassDependencies@PhiveClassGenerator@@YAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@1@@Z DD 021H
	DD	imagerel $LN75
	DD	imagerel $LN75+25
	DD	imagerel $unwind$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@1@@Z DD 040a21H
	DD	04740aH
	DD	056405H
	DD	imagerel $LN75
	DD	imagerel $LN75+25
	DD	imagerel $unwind$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@1@@Z DD 040901H
	DD	0e0055209H
	DD	030025003H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@DV?$allocator@D@std@@@std@@AEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@_NV?$allocator@_N@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Vb_val@V?$allocator@_N@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?end@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@XZ DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?_Insert_n@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@V?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_KAEB_N@Z DD 021H
	DD	imagerel $LN62
	DD	imagerel $LN62+104
	DD	imagerel $unwind$?_Insert_n@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@V?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_KAEB_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?_Insert_n@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@V?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_KAEB_N@Z DD 021H
	DD	imagerel $LN62+104
	DD	imagerel $LN62+205
	DD	imagerel $chain$0$?_Insert_n@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@V?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_KAEB_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?_Insert_n@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@V?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_KAEB_N@Z DD 020521H
	DD	0c6405H
	DD	imagerel $LN62+104
	DD	imagerel $LN62+205
	DD	imagerel $chain$0$?_Insert_n@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@V?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_KAEB_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?_Insert_n@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@V?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_KAEB_N@Z DD 020521H
	DD	06e405H
	DD	imagerel $LN62
	DD	imagerel $LN62+104
	DD	imagerel $unwind$?_Insert_n@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@V?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_KAEB_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Insert_n@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@V?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_KAEB_N@Z DD 050a01H
	DD	0f006620aH
	DD	050037004H
	DD	03002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@QEAA_KV?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_K@Z DD 021H
	DD	imagerel $LN211
	DD	imagerel $LN211+76
	DD	imagerel $unwind$?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@QEAA_KV?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@QEAA_KV?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_K@Z DD 020021H
	DD	0a3400H
	DD	imagerel $LN211
	DD	imagerel $LN211+76
	DD	imagerel $unwind$?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@QEAA_KV?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@QEAA_KV?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_K@Z DD 021H
	DD	imagerel $LN211
	DD	imagerel $LN211+76
	DD	imagerel $unwind$?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@QEAA_KV?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@QEAA_KV?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_K@Z DD 021H
	DD	imagerel $LN211+76
	DD	imagerel $LN211+87
	DD	imagerel $chain$0$?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@QEAA_KV?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@QEAA_KV?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_K@Z DD 020521H
	DD	0b7405H
	DD	imagerel $LN211+76
	DD	imagerel $LN211+87
	DD	imagerel $chain$0$?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@QEAA_KV?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@QEAA_KV?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_K@Z DD 020521H
	DD	0a3405H
	DD	imagerel $LN211
	DD	imagerel $LN211+76
	DD	imagerel $unwind$?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@QEAA_KV?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@QEAA_KV?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_K@Z DD 040a01H
	DD	0d540aH
	DD	06006720aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen@?$vector@_NV?$allocator@_N@std@@@std@@QEBAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$vector@IV?$allocator@I@std@@@std@@QEAAX_KAEBI@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@PEAU01@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@1@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$??$fill_n@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@_K_N@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@_KAEB_N@Z DD 021H
	DD	imagerel $LN34
	DD	imagerel $LN34+29
	DD	imagerel $unwind$??$fill_n@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@_K_N@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@_KAEB_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$??$fill_n@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@_K_N@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@_KAEB_N@Z DD 021H
	DD	imagerel $LN34+29
	DD	imagerel $LN34+104
	DD	imagerel $chain$1$??$fill_n@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@_K_N@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@_KAEB_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$fill_n@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@_K_N@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@_KAEB_N@Z DD 041121H
	DD	0a7411H
	DD	083405H
	DD	imagerel $LN34+29
	DD	imagerel $LN34+104
	DD	imagerel $chain$1$??$fill_n@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@_K_N@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@_KAEB_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$fill_n@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@_K_N@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@_KAEB_N@Z DD 041021H
	DD	04e410H
	DD	095405H
	DD	imagerel $LN34
	DD	imagerel $LN34+29
	DD	imagerel $unwind$??$fill_n@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@_K_N@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@_KAEB_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$fill_n@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@_K_N@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@_KAEB_N@Z DD 030801H
	DD	0f0044208H
	DD	06002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$copy_backward@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize@I@?$vector@IV?$allocator@I@std@@@std@@AEAAX_KAEBI@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Trim@?$vector@_NV?$allocator@_N@std@@@std@@QEAAX_K@Z DD 011319H
	DD	06204H
	DD	imagerel __GSHandlerCheck
	DD	020H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Make_iter@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@V?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?erase@?$vector@IV?$allocator@I@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@0@Z DD 021H
	DD	imagerel $LN27
	DD	imagerel $LN27+21
	DD	imagerel $unwind$?erase@?$vector@IV?$allocator@I@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?erase@?$vector@IV?$allocator@I@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@0@Z DD 020521H
	DD	067405H
	DD	imagerel $LN27
	DD	imagerel $LN27+21
	DD	imagerel $unwind$?erase@?$vector@IV?$allocator@I@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?erase@?$vector@IV?$allocator@I@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@0@Z DD 040a01H
	DD	08340aH
	DD	06006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@0@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$_Fill_vbool@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@@std@@YAXV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@_N@Z DD 021H
	DD	imagerel $LN29
	DD	imagerel $LN29+55
	DD	imagerel $unwind$??$_Fill_vbool@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@@std@@YAXV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Fill_vbool@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@@std@@YAXV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@_N@Z DD 041121H
	DD	077411H
	DD	063405H
	DD	imagerel $LN29
	DD	imagerel $LN29+55
	DD	imagerel $unwind$??$_Fill_vbool@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@@std@@YAXV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Fill_vbool@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@@std@@YAXV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@_N@Z DD 061001H
	DD	096410H
	DD	085410H
	DD	0e00c3210H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Copy_backward_unchecked@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z DD 021H
	DD	imagerel $LN57
	DD	imagerel $LN57+49
	DD	imagerel $unwind$??$_Copy_backward_unchecked@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$_Copy_backward_unchecked@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z DD 020521H
	DD	093405H
	DD	imagerel $LN57
	DD	imagerel $LN57+49
	DD	imagerel $unwind$??$_Copy_backward_unchecked@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_backward_unchecked@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z DD 040801H
	DD	070043208H
	DD	050026003H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$_Resize_reallocate@I@?$vector@IV?$allocator@I@std@@@std@@AEAAX_KAEBI@Z DD 021H
	DD	imagerel $LN66
	DD	imagerel $LN66+50
	DD	imagerel $unwind$??$_Resize_reallocate@I@?$vector@IV?$allocator@I@std@@@std@@AEAAX_KAEBI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$_Resize_reallocate@I@?$vector@IV?$allocator@I@std@@@std@@AEAAX_KAEBI@Z DD 020021H
	DD	0ae400H
	DD	imagerel $LN66
	DD	imagerel $LN66+50
	DD	imagerel $unwind$??$_Resize_reallocate@I@?$vector@IV?$allocator@I@std@@@std@@AEAAX_KAEBI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Resize_reallocate@I@?$vector@IV?$allocator@I@std@@@std@@AEAAX_KAEBI@Z DD 042921H
	DD	0ae429H
	DD	085405H
	DD	imagerel $LN66
	DD	imagerel $LN66+50
	DD	imagerel $unwind$??$_Resize_reallocate@I@?$vector@IV?$allocator@I@std@@@std@@AEAAX_KAEBI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize_reallocate@I@?$vector@IV?$allocator@I@std@@@std@@AEAAX_KAEBI@Z DD 040801H
	DD	070043208H
	DD	030026003H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Uninitialized_fill_n@V?$allocator@I@std@@@std@@YAPEAIPEAI_KAEBIAEAV?$allocator@I@0@@Z DD 021H
	DD	imagerel $LN28
	DD	imagerel $LN28+15
	DD	imagerel $unwind$??$_Uninitialized_fill_n@V?$allocator@I@std@@@std@@YAPEAIPEAI_KAEBIAEAV?$allocator@I@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$_Uninitialized_fill_n@V?$allocator@I@std@@@std@@YAPEAIPEAI_KAEBIAEAV?$allocator@I@0@@Z DD 020521H
	DD	087405H
	DD	imagerel $LN28
	DD	imagerel $LN28+15
	DD	imagerel $unwind$??$_Uninitialized_fill_n@V?$allocator@I@std@@@std@@YAPEAIPEAI_KAEBIAEAV?$allocator@I@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_fill_n@V?$allocator@I@std@@@std@@YAPEAIPEAI_KAEBIAEAV?$allocator@I@0@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$copy@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Move_unchecked@PEAIPEAI@std@@YAPEAIPEAI00@Z DD 040a01H
	DD	09340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@DV?$allocator@D@std@@@std@@CAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@DV?$allocator@D@std@@@std@@AEAAXQEAD_K1@Z DD 081401H
	DD	096414H
	DD	085414H
	DD	073414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@AEBV01@@Z DD 020501H
	DD	013405H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEADPEAD@std@@YAPEADPEAD00@Z DD 040a01H
	DD	09340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEADV?$allocator@D@std@@@std@@YAPEADQEAD0PEADAEAV?$allocator@D@0@@Z DD 040801H
	DD	070043208H
	DD	030026003H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Copy_unchecked@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z DD 021H
	DD	imagerel $LN59
	DD	imagerel $LN59+54
	DD	imagerel $unwind$??$_Copy_unchecked@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$_Copy_unchecked@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z DD 020521H
	DD	067405H
	DD	imagerel $LN59
	DD	imagerel $LN59+54
	DD	imagerel $unwind$??$_Copy_unchecked@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_unchecked@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z DD 060f01H
	DD	08540fH
	DD	07340fH
	DD	0600b320fH
?Classes$initializer$@PhiveClassGenerator@@3P6AXXZEA DQ FLAT:??__EClasses@PhiveClassGenerator@@YAXXZ ; PhiveClassGenerator::Classes$initializer$
?ClassDependencies$initializer$@PhiveClassGenerator@@3P6AXXZEA DQ FLAT:??__EClassDependencies@PhiveClassGenerator@@YAXXZ ; PhiveClassGenerator::ClassDependencies$initializer$
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??_Gexception@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gexception@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z PROC ; nlohmann::json_abi_v3_11_3::detail::exception::`scalar deleting destructor', COMDAT
$LN18:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx

; 89   :     {

	lea	rsi, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rcx+32], rsi
	mov	ebx, edx

; 90   :         __std_exception_destroy(&_Data);

	add	rcx, 40					; 00000028H
	call	QWORD PTR __imp___std_exception_destroy
	lea	rcx, QWORD PTR [rdi+8]
	mov	QWORD PTR [rdi], rsi
	call	QWORD PTR __imp___std_exception_destroy
	test	bl, 1
	je	SHORT $LN14@scalar
	mov	edx, 56					; 00000038H
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
$LN14@scalar:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gexception@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z ENDP ; nlohmann::json_abi_v3_11_3::detail::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??1exception@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1exception@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ PROC ; nlohmann::json_abi_v3_11_3::detail::exception::~exception, COMDAT
$LN12:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 89   :     {

	lea	rdi, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rcx+32], rdi

; 90   :         __std_exception_destroy(&_Data);

	add	rcx, 40					; 00000028H
	call	QWORD PTR __imp___std_exception_destroy
	lea	rcx, QWORD PTR [rbx+8]
	mov	QWORD PTR [rbx], rdi
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	rex_jmp	QWORD PTR __imp___std_exception_destroy
??1exception@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ ENDP ; nlohmann::json_abi_v3_11_3::detail::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??_Gparse_error@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gparse_error@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z PROC ; nlohmann::json_abi_v3_11_3::detail::parse_error::`scalar deleting destructor', COMDAT
$LN21:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx

; 89   :     {

	lea	rsi, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rcx+32], rsi
	mov	ebx, edx

; 90   :         __std_exception_destroy(&_Data);

	add	rcx, 40					; 00000028H
	call	QWORD PTR __imp___std_exception_destroy
	lea	rcx, QWORD PTR [rdi+8]
	mov	QWORD PTR [rdi], rsi
	call	QWORD PTR __imp___std_exception_destroy
	test	bl, 1
	je	SHORT $LN17@scalar
	mov	edx, 64					; 00000040H
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
$LN17@scalar:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gparse_error@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z ENDP ; nlohmann::json_abi_v3_11_3::detail::parse_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??1parse_error@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1parse_error@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ PROC ; nlohmann::json_abi_v3_11_3::detail::parse_error::~parse_error, COMDAT
$LN15:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 89   :     {

	lea	rdi, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rcx+32], rdi

; 90   :         __std_exception_destroy(&_Data);

	add	rcx, 40					; 00000028H
	call	QWORD PTR __imp___std_exception_destroy
	lea	rcx, QWORD PTR [rbx+8]
	mov	QWORD PTR [rbx], rdi
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	rex_jmp	QWORD PTR __imp___std_exception_destroy
??1parse_error@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ ENDP ; nlohmann::json_abi_v3_11_3::detail::parse_error::~parse_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??_Ginvalid_iterator@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Ginvalid_iterator@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z PROC ; nlohmann::json_abi_v3_11_3::detail::invalid_iterator::`scalar deleting destructor', COMDAT
$LN21:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx

; 89   :     {

	lea	rsi, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rcx+32], rsi
	mov	ebx, edx

; 90   :         __std_exception_destroy(&_Data);

	add	rcx, 40					; 00000028H
	call	QWORD PTR __imp___std_exception_destroy
	lea	rcx, QWORD PTR [rdi+8]
	mov	QWORD PTR [rdi], rsi
	call	QWORD PTR __imp___std_exception_destroy
	test	bl, 1
	je	SHORT $LN17@scalar
	mov	edx, 56					; 00000038H
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
$LN17@scalar:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Ginvalid_iterator@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z ENDP ; nlohmann::json_abi_v3_11_3::detail::invalid_iterator::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??1invalid_iterator@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1invalid_iterator@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ PROC ; nlohmann::json_abi_v3_11_3::detail::invalid_iterator::~invalid_iterator, COMDAT
$LN15:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 89   :     {

	lea	rdi, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rcx+32], rdi

; 90   :         __std_exception_destroy(&_Data);

	add	rcx, 40					; 00000028H
	call	QWORD PTR __imp___std_exception_destroy
	lea	rcx, QWORD PTR [rbx+8]
	mov	QWORD PTR [rbx], rdi
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	rex_jmp	QWORD PTR __imp___std_exception_destroy
??1invalid_iterator@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ ENDP ; nlohmann::json_abi_v3_11_3::detail::invalid_iterator::~invalid_iterator
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??_Gtype_error@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gtype_error@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z PROC ; nlohmann::json_abi_v3_11_3::detail::type_error::`scalar deleting destructor', COMDAT
$LN21:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx

; 89   :     {

	lea	rsi, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rcx+32], rsi
	mov	ebx, edx

; 90   :         __std_exception_destroy(&_Data);

	add	rcx, 40					; 00000028H
	call	QWORD PTR __imp___std_exception_destroy
	lea	rcx, QWORD PTR [rdi+8]
	mov	QWORD PTR [rdi], rsi
	call	QWORD PTR __imp___std_exception_destroy
	test	bl, 1
	je	SHORT $LN17@scalar
	mov	edx, 56					; 00000038H
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
$LN17@scalar:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gtype_error@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z ENDP ; nlohmann::json_abi_v3_11_3::detail::type_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??1type_error@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1type_error@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ PROC ; nlohmann::json_abi_v3_11_3::detail::type_error::~type_error, COMDAT
$LN15:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 89   :     {

	lea	rdi, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rcx+32], rdi

; 90   :         __std_exception_destroy(&_Data);

	add	rcx, 40					; 00000028H
	call	QWORD PTR __imp___std_exception_destroy
	lea	rcx, QWORD PTR [rbx+8]
	mov	QWORD PTR [rbx], rdi
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	rex_jmp	QWORD PTR __imp___std_exception_destroy
??1type_error@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ ENDP ; nlohmann::json_abi_v3_11_3::detail::type_error::~type_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??_Gout_of_range@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gout_of_range@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z PROC ; nlohmann::json_abi_v3_11_3::detail::out_of_range::`scalar deleting destructor', COMDAT
$LN21:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx

; 89   :     {

	lea	rsi, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rcx+32], rsi
	mov	ebx, edx

; 90   :         __std_exception_destroy(&_Data);

	add	rcx, 40					; 00000028H
	call	QWORD PTR __imp___std_exception_destroy
	lea	rcx, QWORD PTR [rdi+8]
	mov	QWORD PTR [rdi], rsi
	call	QWORD PTR __imp___std_exception_destroy
	test	bl, 1
	je	SHORT $LN17@scalar
	mov	edx, 56					; 00000038H
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
$LN17@scalar:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gout_of_range@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z ENDP ; nlohmann::json_abi_v3_11_3::detail::out_of_range::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??1out_of_range@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1out_of_range@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ PROC ; nlohmann::json_abi_v3_11_3::detail::out_of_range::~out_of_range, COMDAT
$LN15:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 89   :     {

	lea	rdi, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rcx+32], rdi

; 90   :         __std_exception_destroy(&_Data);

	add	rcx, 40					; 00000028H
	call	QWORD PTR __imp___std_exception_destroy
	lea	rcx, QWORD PTR [rbx+8]
	mov	QWORD PTR [rbx], rdi
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	rex_jmp	QWORD PTR __imp___std_exception_destroy
??1out_of_range@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ ENDP ; nlohmann::json_abi_v3_11_3::detail::out_of_range::~out_of_range
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??_Gother_error@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gother_error@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z PROC ; nlohmann::json_abi_v3_11_3::detail::other_error::`scalar deleting destructor', COMDAT
$LN21:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx

; 89   :     {

	lea	rsi, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rcx+32], rsi
	mov	ebx, edx

; 90   :         __std_exception_destroy(&_Data);

	add	rcx, 40					; 00000028H
	call	QWORD PTR __imp___std_exception_destroy
	lea	rcx, QWORD PTR [rdi+8]
	mov	QWORD PTR [rdi], rsi
	call	QWORD PTR __imp___std_exception_destroy
	test	bl, 1
	je	SHORT $LN17@scalar
	mov	edx, 56					; 00000038H
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
$LN17@scalar:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gother_error@detail@json_abi_v3_11_3@nlohmann@@UEAAPEAXI@Z ENDP ; nlohmann::json_abi_v3_11_3::detail::other_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??1other_error@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1other_error@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ PROC ; nlohmann::json_abi_v3_11_3::detail::other_error::~other_error, COMDAT
$LN15:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 89   :     {

	lea	rdi, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rcx+32], rdi

; 90   :         __std_exception_destroy(&_Data);

	add	rcx, 40					; 00000028H
	call	QWORD PTR __imp___std_exception_destroy
	lea	rcx, QWORD PTR [rbx+8]
	mov	QWORD PTR [rbx], rdi
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	rex_jmp	QWORD PTR __imp___std_exception_destroy
??1other_error@detail@json_abi_v3_11_3@nlohmann@@UEAA@XZ ENDP ; nlohmann::json_abi_v3_11_3::detail::other_error::~other_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveClassGenerator.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveClassGenerator.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveClassGenerator.cpp
;	COMDAT ??__EClasses@PhiveClassGenerator@@YAXXZ
text$di	SEGMENT
??__EClasses@PhiveClassGenerator@@YAXXZ PROC		; PhiveClassGenerator::`dynamic initializer for 'Classes'', COMDAT

; 7    : std::map<std::string, std::vector<std::string>> PhiveClassGenerator::Classes;

	sub	rsp, 40					; 00000028H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 88					; 00000058H
	call	??2@YAPEAX_K@Z				; operator new
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveClassGenerator.cpp

; 7    : std::map<std::string, std::vector<std::string>> PhiveClassGenerator::Classes;

	lea	rcx, OFFSET FLAT:??__FClasses@PhiveClassGenerator@@YAXXZ ; PhiveClassGenerator::`dynamic atexit destructor for 'Classes''
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);

	mov	QWORD PTR [rax], rax

; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

	mov	QWORD PTR [rax+8], rax

; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);

	mov	QWORD PTR [rax+16], rax

; 350  :         _Pnode->_Color = _Black;

	mov	WORD PTR [rax+24], 257			; 00000101H

; 1943 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

	mov	QWORD PTR ?Classes@PhiveClassGenerator@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@A, rax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveClassGenerator.cpp

; 7    : std::map<std::string, std::vector<std::string>> PhiveClassGenerator::Classes;

	add	rsp, 40					; 00000028H
	jmp	atexit
??__EClasses@PhiveClassGenerator@@YAXXZ ENDP		; PhiveClassGenerator::`dynamic initializer for 'Classes''
text$di	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??__FClasses@PhiveClassGenerator@@YAXXZ
text$yd	SEGMENT
??__FClasses@PhiveClassGenerator@@YAXXZ PROC		; PhiveClassGenerator::`dynamic atexit destructor for 'Classes'', COMDAT
	push	rbx
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	rcx, QWORD PTR ?Classes@PhiveClassGenerator@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@A
	mov	rbx, QWORD PTR [rcx+8]

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

	cmp	BYTE PTR [rbx+25], 0
	jne	SHORT $LN12@dynamic
	mov	QWORD PTR [rsp+48], rsi
	mov	QWORD PTR [rsp+56], rdi
$LL11@dynamic:

; 746  :             _Erase_tree(_Al, _Rootnode->_Right);

	mov	r8, QWORD PTR [rbx+16]
	lea	rdx, OFFSET FLAT:?Classes@PhiveClassGenerator@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@A ; PhiveClassGenerator::Classes
	lea	rcx, OFFSET FLAT:?Classes@PhiveClassGenerator@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@A ; PhiveClassGenerator::Classes
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rsi, rbx

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	rbx, QWORD PTR [rbx]
	lea	rcx, QWORD PTR [rsi+64]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR [rsi+32]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 88					; 00000058H
	mov	rcx, rsi
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

	cmp	BYTE PTR [rbx+25], 0
	je	SHORT $LL11@dynamic
	mov	rdi, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+48]
	mov	rcx, QWORD PTR ?Classes@PhiveClassGenerator@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@A
$LN12@dynamic:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 88					; 00000058H
	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	??3@YAXPEAX_K@Z				; operator delete
??__FClasses@PhiveClassGenerator@@YAXXZ ENDP		; PhiveClassGenerator::`dynamic atexit destructor for 'Classes''
text$yd	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QEAAX_K@Z PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::__autoclassinit2, COMDAT
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [rcx], xmm0
	ret	0
?__autoclassinit2@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QEAAX_K@Z ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QEAA@XZ PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >, COMDAT
$LN55:
	push	rbx
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR [rcx]
	mov	rdx, rcx
	mov	rbx, rcx
	mov	r8, QWORD PTR [r8+8]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [rbx]
	mov	edx, 88					; 00000058H
	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	??3@YAXPEAX_K@Z				; operator delete
??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QEAA@XZ ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveClassGenerator.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveClassGenerator.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveClassGenerator.cpp
;	COMDAT ??__EClassDependencies@PhiveClassGenerator@@YAXXZ
text$di	SEGMENT
??__EClassDependencies@PhiveClassGenerator@@YAXXZ PROC	; PhiveClassGenerator::`dynamic initializer for 'ClassDependencies'', COMDAT

; 8    : std::map<std::string, std::vector<std::string>> PhiveClassGenerator::ClassDependencies;

	sub	rsp, 40					; 00000028H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 88					; 00000058H
	call	??2@YAPEAX_K@Z				; operator new
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveClassGenerator.cpp

; 8    : std::map<std::string, std::vector<std::string>> PhiveClassGenerator::ClassDependencies;

	lea	rcx, OFFSET FLAT:??__FClassDependencies@PhiveClassGenerator@@YAXXZ ; PhiveClassGenerator::`dynamic atexit destructor for 'ClassDependencies''
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);

	mov	QWORD PTR [rax], rax

; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

	mov	QWORD PTR [rax+8], rax

; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);

	mov	QWORD PTR [rax+16], rax

; 350  :         _Pnode->_Color = _Black;

	mov	WORD PTR [rax+24], 257			; 00000101H

; 1943 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

	mov	QWORD PTR ?ClassDependencies@PhiveClassGenerator@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@A, rax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveClassGenerator.cpp

; 8    : std::map<std::string, std::vector<std::string>> PhiveClassGenerator::ClassDependencies;

	add	rsp, 40					; 00000028H
	jmp	atexit
??__EClassDependencies@PhiveClassGenerator@@YAXXZ ENDP	; PhiveClassGenerator::`dynamic initializer for 'ClassDependencies''
text$di	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??__FClassDependencies@PhiveClassGenerator@@YAXXZ
text$yd	SEGMENT
??__FClassDependencies@PhiveClassGenerator@@YAXXZ PROC	; PhiveClassGenerator::`dynamic atexit destructor for 'ClassDependencies'', COMDAT
	push	rbx
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	rcx, QWORD PTR ?ClassDependencies@PhiveClassGenerator@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@A
	mov	rbx, QWORD PTR [rcx+8]

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

	cmp	BYTE PTR [rbx+25], 0
	jne	SHORT $LN12@dynamic
	mov	QWORD PTR [rsp+48], rsi
	mov	QWORD PTR [rsp+56], rdi
$LL11@dynamic:

; 746  :             _Erase_tree(_Al, _Rootnode->_Right);

	mov	r8, QWORD PTR [rbx+16]
	lea	rdx, OFFSET FLAT:?ClassDependencies@PhiveClassGenerator@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@A ; PhiveClassGenerator::ClassDependencies
	lea	rcx, OFFSET FLAT:?ClassDependencies@PhiveClassGenerator@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@A ; PhiveClassGenerator::ClassDependencies
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rsi, rbx

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	rbx, QWORD PTR [rbx]
	lea	rcx, QWORD PTR [rsi+64]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR [rsi+32]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 88					; 00000058H
	mov	rcx, rsi
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

	cmp	BYTE PTR [rbx+25], 0
	je	SHORT $LL11@dynamic
	mov	rdi, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+48]
	mov	rcx, QWORD PTR ?ClassDependencies@PhiveClassGenerator@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@A
$LN12@dynamic:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 88					; 00000058H
	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	??3@YAXPEAX_K@Z				; operator delete
??__FClassDependencies@PhiveClassGenerator@@YAXXZ ENDP	; PhiveClassGenerator::`dynamic atexit destructor for 'ClassDependencies''
text$yd	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@QEAA@XZ PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
$LN10:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	add	rcx, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@QEAA@XZ ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
;	COMDAT ??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QEAA@XZ PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >, COMDAT

; 107  :     map() : _Mybase(key_compare()) {}

$LN50:
	push	rbx
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	xor	eax, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map

; 107  :     map() : _Mybase(key_compare()) {}

	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	lea	ecx, QWORD PTR [rax+88]
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);

	mov	QWORD PTR [rax], rax

; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

	mov	QWORD PTR [rax+8], rax

; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);

	mov	QWORD PTR [rax+16], rax

; 350  :         _Pnode->_Color = _Black;

	mov	WORD PTR [rax+24], 257			; 00000101H

; 1943 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

	mov	QWORD PTR [rbx], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map

; 107  :     map() : _Mybase(key_compare()) {}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@@std@@QEAA@XZ ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,0> >, COMDAT

; 1080 :     ~_Tree() noexcept {

$LN52:
	push	rbx
	sub	rsp, 32					; 00000020H

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR [rcx]
	mov	rdx, rcx

; 1080 :     ~_Tree() noexcept {

	mov	rbx, rcx

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR [r8+8]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [rbx]
	mov	edx, 88					; 00000058H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1087 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,0> >::_Get_scary, COMDAT

; 1969 :         return _STD addressof(_Mypair._Myval2._Myval2);

	mov	rax, rcx

; 1970 :     }

	ret	0
?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,0> >::_Get_scary
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,0> >::_Getal, COMDAT

; 1961 :         return _Mypair._Myval2._Get_first();

	mov	rax, rcx

; 1962 :     }

	ret	0
?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,0> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Parg$dead$ = 56
??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,0> >::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,0> >, COMDAT

; 882  :     _Tree(const key_compare& _Parg) : _Mypair(_One_then_variadic_args_t{}, _Parg, _Zero_then_variadic_args_t{}) {

$LN46:
	push	rbx
	sub	rsp, 32					; 00000020H

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	xor	eax, eax

; 882  :     _Tree(const key_compare& _Parg) : _Mypair(_One_then_variadic_args_t{}, _Parg, _Zero_then_variadic_args_t{}) {

	mov	rbx, rcx

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	lea	ecx, QWORD PTR [rax+88]
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);

	mov	QWORD PTR [rax], rax

; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

	mov	QWORD PTR [rax+8], rax

; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);

	mov	QWORD PTR [rax+16], rax

; 350  :         _Pnode->_Color = _Black;

	mov	WORD PTR [rax+24], 257			; 00000101H

; 1943 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

	mov	QWORD PTR [rbx], rax

; 883  :         _Alloc_sentinel_and_proxy();
; 884  :     }

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,0> >::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IEAAXXZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,0> >::_Alloc_sentinel_and_proxy, COMDAT

; 1939 :     void _Alloc_sentinel_and_proxy() {

$LN36:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 88					; 00000058H
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);

	mov	QWORD PTR [rax], rax

; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

	mov	QWORD PTR [rax+8], rax

; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);

	mov	QWORD PTR [rax+16], rax

; 350  :         _Pnode->_Color = _Black;

	mov	WORD PTR [rax+24], 257			; 00000101H

; 1940 :         const auto _Scary = _Get_scary();
; 1941 :         auto&& _Alproxy   = _GET_PROXY_ALLOCATOR(_Alnode, _Getal());
; 1942 :         _Container_proxy_ptr<_Alnode> _Proxy(_Alproxy, *_Scary);
; 1943 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

	mov	QWORD PTR [rbx], rax

; 1944 :         _Proxy._Release();
; 1945 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@2@$0A@@std@@@std@@IEAAXXZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,0> >::_Alloc_sentinel_and_proxy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@1@@Z
_TEXT	SEGMENT
this$ = 80
_Al$ = 88
_Rootnode$ = 96
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >, COMDAT

; 744  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

$LN75:
	push	rbx
	push	rbp
	push	r14
	sub	rsp, 48					; 00000030H

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

	cmp	BYTE PTR [r8+25], 0
	mov	rbx, r8
	mov	r14, rdx
	mov	rbp, rcx
	jne	SHORT $LN3@Erase_tree
	mov	QWORD PTR [rsp+40], rsi
	mov	QWORD PTR [rsp+32], rdi
	npad	13
$LL2@Erase_tree:

; 746  :             _Erase_tree(_Al, _Rootnode->_Right);

	mov	r8, QWORD PTR [rbx+16]
	mov	rdx, r14
	mov	rcx, rbp
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rsi, rbx

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	rbx, QWORD PTR [rbx]
	lea	rcx, QWORD PTR [rsi+64]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR [rsi+32]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 88					; 00000058H
	mov	rcx, rsi
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

	cmp	BYTE PTR [rbx+25], 0
	je	SHORT $LL2@Erase_tree
	mov	rdi, QWORD PTR [rsp+32]
	mov	rsi, QWORD PTR [rsp+40]
$LN3@Erase_tree:

; 747  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));
; 748  :         }
; 749  :     }

	add	rsp, 48					; 00000030H
	pop	r14
	pop	rbp
	pop	rbx
	ret	0
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Al$ = 56
??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >, COMDAT

; 752  :     void _Erase_head(_Alnode& _Al) noexcept {

$LN49:
	push	rbx
	sub	rsp, 32					; 00000020H

; 753  :         this->_Orphan_all();
; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR [rcx]
	mov	rbx, rcx
	mov	r8, QWORD PTR [r8+8]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [rbx]
	mov	edx, 88					; 00000058H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 756  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@YAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@YAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > >, COMDAT

; 1607 :     return __builtin_addressof(_Val);

	mov	rax, rcx

; 1608 : }

	ret	0
??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@@std@@YAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$?0AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@2@$00@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAU_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
_Val1$dead$ = 24
<_Val2_0>$dead$ = 32
??$?0AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@2@$00@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAU_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,1>,1>::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,1>,1><std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::_Zero_then_variadic_args_t>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1520 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	rax, rcx
	ret	0
??$?0AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@2@$00@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAU_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,1>,1>::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,1>,1><std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::_Zero_then_variadic_args_t>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@@Z
_TEXT	SEGMENT
_Al$dead$ = 48
??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@@Z PROC ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *>::_Buyheadnode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >, COMDAT

; 344  :     static _Nodeptr _Buyheadnode(_Alloc& _Al) {

$LN33:
	sub	rsp, 40					; 00000028H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 88					; 00000058H
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);

	mov	QWORD PTR [rax], rax

; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

	mov	QWORD PTR [rax+8], rax

; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);

	mov	QWORD PTR [rax+16], rax

; 350  :         _Pnode->_Color = _Black;

	mov	WORD PTR [rax+24], 257			; 00000101H

; 351  :         _Pnode->_Isnil = true;
; 352  :         return _Pnode;
; 353  :     }

	add	rsp, 40					; 00000028H
	ret	0
??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@@Z ENDP ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *>::_Buyheadnode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@2@_K@Z
_TEXT	SEGMENT
this$dead$ = 8
_Count$dead$ = 16
?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@2@_K@Z PROC ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> >::allocate, COMDAT

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 88					; 00000058H
	jmp	??2@YAPEAX_K@Z				; operator new
?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@2@_K@Z ENDP ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ PROC	; std::vector<char,std::allocator<char> >::~vector<char,std::allocator<char> >, COMDAT

; 766  :     _CONSTEXPR20 ~vector() noexcept {

$LN33:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN4@vector

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN22@vector

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN19@vector

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN22@vector:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN4@vector:

; 772  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN19@vector:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN30@vector:
??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ ENDP	; std::vector<char,std::allocator<char> >::~vector<char,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Tidy@?$vector@DV?$allocator@D@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@DV?$allocator@D@std@@@std@@AEAAXXZ PROC	; std::vector<char,std::allocator<char> >::_Tidy, COMDAT

; 2035 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN30:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 2036 :         auto& _Al         = _Getal();
; 2037 :         auto& _My_data    = _Mypair._Myval2;
; 2038 :         pointer& _Myfirst = _My_data._Myfirst;
; 2039 :         pointer& _Mylast  = _My_data._Mylast;
; 2040 :         pointer& _Myend   = _My_data._Myend;
; 2041 : 
; 2042 :         _My_data._Orphan_all();
; 2043 : 
; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN2@Tidy

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN20@Tidy

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN17@Tidy

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN20@Tidy:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN2@Tidy:

; 2053 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN17@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN27@Tidy:
?_Tidy@?$vector@DV?$allocator@D@std@@@std@@AEAAXXZ ENDP	; std::vector<char,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??1?$vector@_NV?$allocator@_N@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$vector@_NV?$allocator@_N@std@@@std@@QEAA@XZ PROC	; std::vector<bool,std::allocator<bool> >::~vector<bool,std::allocator<bool> >, COMDAT

; 3015 :     _CONSTEXPR20 ~vector() noexcept {}

$LN40:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN9@vector

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -4

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN27@vector

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN24@vector

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN27@vector:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN9@vector:

; 3015 :     _CONSTEXPR20 ~vector() noexcept {}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN24@vector:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN37@vector:
??1?$vector@_NV?$allocator@_N@std@@@std@@QEAA@XZ ENDP	; std::vector<bool,std::allocator<bool> >::~vector<bool,std::allocator<bool> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@2@_K@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ptr$ = 16
_Count$dead$ = 24
?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@2@_K@Z PROC ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> >::deallocate, COMDAT

; 966  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

	mov	rcx, rdx

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 88					; 00000058H
	jmp	??3@YAXPEAX_K@Z				; operator delete
?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@2@_K@Z ENDP ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Getal@?$vector@DV?$allocator@D@std@@@std@@AEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@DV?$allocator@D@std@@@std@@AEAAAEAV?$allocator@D@2@XZ PROC ; std::vector<char,std::allocator<char> >::_Getal, COMDAT

; 2181 :         return _Mypair._Get_first();

	mov	rax, rcx

; 2182 :     }

	ret	0
?_Getal@?$vector@DV?$allocator@D@std@@@std@@AEAAAEAV?$allocator@D@2@XZ ENDP ; std::vector<char,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??1?$_Vb_val@V?$allocator@_N@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Vb_val@V?$allocator@_N@std@@@std@@QEAA@XZ PROC	; std::_Vb_val<std::allocator<bool> >::~_Vb_val<std::allocator<bool> >, COMDAT

; 2822 :     _CONSTEXPR20 ~_Vb_val() noexcept {

$LN36:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN6@Vb_val

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -4

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN24@Vb_val

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN21@Vb_val

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN24@Vb_val:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN6@Vb_val:

; 2828 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN21@Vb_val:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN33@Vb_val:
??1?$_Vb_val@V?$allocator@_N@std@@@std@@QEAA@XZ ENDP	; std::_Vb_val<std::allocator<bool> >::~_Vb_val<std::allocator<bool> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_Vector_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_Vector_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?end@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T1 = 32
this$dead$ = 64
__$ReturnUdt$ = 72
?end@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@XZ PROC ; std::vector<bool,std::allocator<bool> >::end, COMDAT

; 3066 :     _NODISCARD _CONSTEXPR20 iterator end() noexcept {

$LN13:
	sub	rsp, 56					; 00000038H

; 2388 :         : _Myptr(_Ptr), _Myoff(_Off) {

	mov	rax, QWORD PTR ?SubModelHovered@UICollisionCreator@@3V?$vector@_NV?$allocator@_N@std@@@std@@A

; 3067 :         return begin() + static_cast<difference_type>(this->_Mysize);

	lea	rcx, QWORD PTR $T1[rsp]
	mov	r8, QWORD PTR ?SubModelHovered@UICollisionCreator@@3V?$vector@_NV?$allocator@_N@std@@@std@@A+24
	mov	r11, rdx

; 2388 :         : _Myptr(_Ptr), _Myoff(_Off) {

	mov	QWORD PTR $T1[rsp], rax
	mov	QWORD PTR $T1[rsp+8], 0

; 3067 :         return begin() + static_cast<difference_type>(this->_Mysize);

	call	??H?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA?AV01@_J@Z ; std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator+
	mov	rax, r11

; 3068 :     }

	add	rsp, 56					; 00000038H
	ret	0
?end@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@XZ ENDP ; std::vector<bool,std::allocator<bool> >::end
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??H?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA?AV01@_J@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
_Off$ = 24
??H?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA?AV01@_J@Z PROC ; std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator+, COMDAT

; 2553 :         if (_Off < 0 && this->_Myoff < 0 - static_cast<_Size_type>(_Off)) { // add negative increment

	lea	r9, QWORD PTR [rdx+8]

; 2739 :     _NODISCARD _CONSTEXPR20 _Vb_iterator operator+(const difference_type _Off) const noexcept {

	mov	r10, rdx

; 2740 :         _Vb_iterator _Tmp = *this;

	movups	xmm0, XMMWORD PTR [rcx]
	movups	XMMWORD PTR [rdx], xmm0

; 2553 :         if (_Off < 0 && this->_Myoff < 0 - static_cast<_Size_type>(_Off)) { // add negative increment

	test	r8, r8
	jns	SHORT $LN11@operator
	mov	rcx, QWORD PTR [r9]
	mov	rax, r8
	neg	rax
	cmp	rcx, rax
	jae	SHORT $LN11@operator

; 2554 :             this->_Myoff += static_cast<_Size_type>(_Off);

	lea	rdx, QWORD PTR [rcx+r8]

; 2555 :             this->_Myptr -= 1 + (static_cast<_Size_type>(-1) - this->_Myoff) / _VBITS;

	mov	rax, -4
	mov	rcx, rdx

; 2741 :         _Tmp += _Off;
; 2742 :         return _Tmp;

	mov	QWORD PTR [r9], rdx

; 2555 :             this->_Myptr -= 1 + (static_cast<_Size_type>(-1) - this->_Myoff) / _VBITS;

	not	rcx
	shr	rcx, 5
	shl	rcx, 2
	sub	rax, rcx

; 2741 :         _Tmp += _Off;
; 2742 :         return _Tmp;

	add	QWORD PTR [r10], rax
	mov	rax, r10
	and	edx, 31
	mov	QWORD PTR [r9], rdx

; 2743 :     }

	ret	0
$LN11@operator:

; 2558 :             this->_Myoff += static_cast<_Size_type>(_Off);

	mov	rdx, QWORD PTR [r9]
	add	rdx, r8

; 2559 :             this->_Myptr += this->_Myoff / _VBITS;

	mov	rax, rdx

; 2741 :         _Tmp += _Off;
; 2742 :         return _Tmp;

	mov	QWORD PTR [r9], rdx

; 2559 :             this->_Myptr += this->_Myoff / _VBITS;

	shr	rax, 5

; 2741 :         _Tmp += _Off;
; 2742 :         return _Tmp;

	and	edx, 31

; 2559 :             this->_Myptr += this->_Myoff / _VBITS;

	shl	rax, 2

; 2741 :         _Tmp += _Off;
; 2742 :         return _Tmp;

	add	QWORD PTR [r10], rax
	mov	rax, r10
	mov	QWORD PTR [r9], rdx

; 2743 :     }

	ret	0
??H?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA?AV01@_J@Z ENDP ; std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator+
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Insert_n@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@V?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_KAEB_N@Z
_TEXT	SEGMENT
$T2 = 32
$T3 = 32
this$dead$ = 96
__$ReturnUdt$ = 104
_Where$ = 112
_Count$ = 120
_Val$ = 128
?_Insert_n@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@V?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_KAEB_N@Z PROC ; std::vector<bool,std::allocator<bool> >::_Insert_n, COMDAT

; 3460 :     _CONSTEXPR20 iterator _Insert_n(const_iterator _Where, size_type _Count, const bool& _Val) {

$LN62:
	push	rbx
	push	rbp
	push	rdi
	push	r15
	sub	rsp, 56					; 00000038H

; 3461 :         size_type _Off     = _Insert_x(_Where, _Count);

	movaps	xmm0, XMMWORD PTR [r8]
	mov	rbx, rdx
	mov	r15, QWORD PTR _Val$[rsp]
	lea	rdx, QWORD PTR $T2[rsp]
	mov	r8, r9
	movdqa	XMMWORD PTR $T2[rsp], xmm0
	mov	rdi, r9
	call	?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@QEAA_KV?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_K@Z ; std::vector<bool,std::allocator<bool> >::_Insert_x
	xorps	xmm0, xmm0

; 3462 :         const auto _Result = begin() + static_cast<difference_type>(_Off);

	lea	rcx, QWORD PTR $T3[rsp]
	movups	XMMWORD PTR [rbx], xmm0
	mov	r8, rax

; 2388 :         : _Myptr(_Ptr), _Myoff(_Off) {

	xor	ebp, ebp
	mov	rax, QWORD PTR ?SubModelHovered@UICollisionCreator@@3V?$vector@_NV?$allocator@_N@std@@@std@@A

; 3462 :         const auto _Result = begin() + static_cast<difference_type>(_Off);

	mov	rdx, rbx

; 2388 :         : _Myptr(_Ptr), _Myoff(_Off) {

	mov	QWORD PTR $T3[rsp], rax
	mov	QWORD PTR $T3[rsp+8], rbp

; 3462 :         const auto _Result = begin() + static_cast<difference_type>(_Off);

	call	??H?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA?AV01@_J@Z ; std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator+
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5075 :     if (0 < _Count) {

	test	rdi, rdi
	je	$LN48@Insert_n
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2740 :         _Vb_iterator _Tmp = *this;

	movups	xmm1, XMMWORD PTR [rbx]

; 2553 :         if (_Off < 0 && this->_Myoff < 0 - static_cast<_Size_type>(_Off)) { // add negative increment

	mov	rcx, QWORD PTR [rbx+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5075 :     if (0 < _Count) {

	mov	QWORD PTR [rsp+48], r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2553 :         if (_Off < 0 && this->_Myoff < 0 - static_cast<_Size_type>(_Off)) { // add negative increment

	jns	SHORT $LN25@Insert_n
	mov	rax, rdi
	neg	rax
	cmp	rcx, rax
	jae	SHORT $LN25@Insert_n

; 2554 :             this->_Myoff += static_cast<_Size_type>(_Off);

	add	rdi, rcx

; 2555 :             this->_Myptr -= 1 + (static_cast<_Size_type>(-1) - this->_Myoff) / _VBITS;

	movq	r14, xmm1
	mov	rax, rdi
	not	rax
	shr	rax, 5
	lea	rax, QWORD PTR [rax*4+4]
	sub	r14, rax

; 2556 :             this->_Myoff %= _VBITS;
; 2557 :         } else { // add non-negative increment

	jmp	SHORT $LN26@Insert_n
$LN25@Insert_n:

; 2558 :             this->_Myoff += static_cast<_Size_type>(_Off);

	add	rdi, rcx

; 2559 :             this->_Myptr += this->_Myoff / _VBITS;

	movq	rax, xmm1
	mov	rcx, rdi
	shr	rcx, 5
	lea	r14, QWORD PTR [rax+rcx*4]
$LN26@Insert_n:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5078 :             _Fill_vbool(_Dest, _Last, _Val);

	movzx	r15d, BYTE PTR [r15]
	and	edi, 31
	mov	rcx, QWORD PTR [rbx+8]
	movq	rdx, xmm1
	cmp	rdx, r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2599 :         return this->_Myptr == _Right._Myptr && this->_Myoff == _Right._Myoff;

	jne	SHORT $LN40@Insert_n
	cmp	rcx, rdi
	je	$LN59@Insert_n
$LN40@Insert_n:

; 3598 :     const auto _FillVal         = static_cast<_Vbase>(_Val ? -1 : 0);

	mov	r10d, DWORD PTR [rdx]
	mov	QWORD PTR [rsp+96], rsi

; 3466 : 
; 3467 :     _CONSTEXPR20 size_type _Insert_x(const_iterator _Where, size_type _Count) {
; 3468 :         const difference_type _Off = _Where - begin();
; 3469 : 
; 3470 : #if _ITERATOR_DEBUG_LEVEL == 2
; 3471 :         _STL_VERIFY(end() >= _Where, "vector<bool> insert iterator outside range");
; 3472 :         const bool _Realloc = capacity() - size() < _Count;
; 3473 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 3474 : 
; 3475 :         if (_Count != 0) {
; 3476 :             if (max_size() - size() < _Count) {
; 3477 :                 _Xlen(); // result too long
; 3478 :             }
; 3479 : 
; 3480 : #if _ITERATOR_DEBUG_LEVEL == 2
; 3481 :             _Orphan_range(static_cast<size_type>(_Realloc ? 0 : _Off), this->_Mysize);
; 3482 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 3483 :             this->_Myvec.resize(this->_Nw(size() + _Count), 0);
; 3484 :             if (empty()) {
; 3485 :                 this->_Mysize += _Count;
; 3486 :             } else { // make room and copy down suffix
; 3487 :                 iterator _Oldend = end();
; 3488 :                 this->_Mysize += _Count;
; 3489 :                 _STD copy_backward(begin() + _Off, _Oldend, end());
; 3490 :             }
; 3491 :         }
; 3492 : 
; 3493 :         return static_cast<size_type>(_Off);
; 3494 :     }
; 3495 : 
; 3496 : #if _ITERATOR_DEBUG_LEVEL == 2
; 3497 :     _CONSTEXPR20 void _Orphan_range_unlocked(size_type _Offlo, size_type _Offhi) const {
; 3498 :         const auto _Base = this->_Myvec.data();
; 3499 : 
; 3500 :         _Iterator_base12** _Pnext = &this->_Myproxy->_Myfirstiter;
; 3501 :         while (*_Pnext) { // test offset from beginning of vector
; 3502 :             const auto& _Pnextiter = static_cast<const_iterator&>(**_Pnext);
; 3503 :             const auto _Temp       = *_Pnext;
; 3504 :             if (!_Pnextiter._Myptr) { // orphan the iterator
; 3505 :                 _Temp->_Myproxy = nullptr;
; 3506 :                 *_Pnext         = _Temp->_Mynextiter;
; 3507 :                 continue;
; 3508 :             }
; 3509 :             const auto _Off =
; 3510 :                 static_cast<size_type>(const_iterator::_VBITS_DIFF * (_Pnextiter._Myptr - _Base)) + _Pnextiter._Myoff;
; 3511 :             if (_Off < _Offlo || _Offhi < _Off) {
; 3512 :                 _Pnext = &_Temp->_Mynextiter;
; 3513 :             } else { // orphan the iterator
; 3514 :                 _Temp->_Myproxy = nullptr;
; 3515 :                 *_Pnext         = _Temp->_Mynextiter;
; 3516 :             }
; 3517 :         }
; 3518 :     }
; 3519 : 
; 3520 :     void _Orphan_range_locked(size_type _Offlo, size_type _Offhi) const {
; 3521 :         _Lockit _Lock(_LOCK_DEBUG);
; 3522 :         _Orphan_range_unlocked(_Offlo, _Offhi);
; 3523 :     }
; 3524 : 
; 3525 :     _CONSTEXPR20 void _Orphan_range(size_type _Offlo, size_type _Offhi) const {
; 3526 : #if _HAS_CXX20
; 3527 :         if (_STD is_constant_evaluated()) {
; 3528 :             _Orphan_range_unlocked(_Offlo, _Offhi);
; 3529 :         } else
; 3530 : #endif // _HAS_CXX20
; 3531 :         {
; 3532 :             _Orphan_range_locked(_Offlo, _Offhi);
; 3533 :         }
; 3534 :     }
; 3535 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 3536 : 
; 3537 :     _CONSTEXPR20 void _Trim(size_type _Size) {
; 3538 :         if (max_size() < _Size) {
; 3539 :             _Xlen(); // result too long
; 3540 :         }
; 3541 : 
; 3542 :         const size_type _Words = this->_Nw(_Size);
; 3543 :         if (_Words < this->_Myvec.size()) {
; 3544 :             this->_Myvec.erase(this->_Myvec.begin() + static_cast<difference_type>(_Words), this->_Myvec.end());
; 3545 :         }
; 3546 : 
; 3547 :         this->_Mysize = _Size;
; 3548 :         _Size %= _VBITS;
; 3549 :         if (0 < _Size) {
; 3550 :             this->_Myvec[_Words - 1] &= (static_cast<_Vbase>(1) << _Size) - 1;
; 3551 :         }
; 3552 :     }
; 3553 : 
; 3554 :     [[noreturn]] void _Xlen() const {
; 3555 :         _Xlength_error("vector<bool> too long");
; 3556 :     }
; 3557 : 
; 3558 :     [[noreturn]] void _Xran() const {
; 3559 :         _Xout_of_range("invalid vector<bool> subscript");
; 3560 :     }
; 3561 : };
; 3562 : 
; 3563 : template <class _Alloc>
; 3564 : struct hash<vector<bool, _Alloc>> {
; 3565 :     using _ARGUMENT_TYPE_NAME _CXX17_DEPRECATE_ADAPTOR_TYPEDEFS = vector<bool, _Alloc>;
; 3566 :     using _RESULT_TYPE_NAME _CXX17_DEPRECATE_ADAPTOR_TYPEDEFS   = size_t;
; 3567 : 
; 3568 :     _NODISCARD size_t operator()(const vector<bool, _Alloc>& _Keyval) const noexcept {
; 3569 :         return _Hash_array_representation(_Keyval._Myvec.data(), _Keyval._Myvec.size());
; 3570 :     }
; 3571 : };
; 3572 : 
; 3573 : #if _HAS_CXX17
; 3574 : namespace pmr {
; 3575 :     _EXPORT_STD template <class _Ty>
; 3576 :     using vector = _STD vector<_Ty, polymorphic_allocator<_Ty>>;
; 3577 : } // namespace pmr
; 3578 : #endif // _HAS_CXX17
; 3579 : 
; 3580 : template <class _Alloc, bool _RequiresMutable>
; 3581 : _INLINE_VAR constexpr bool _Is_vb_iterator<_Vb_iterator<_Alloc>, _RequiresMutable> = true;
; 3582 : 
; 3583 : template <class _Alloc>
; 3584 : _INLINE_VAR constexpr bool _Is_vb_iterator<_Vb_const_iterator<_Alloc>, false> = true;
; 3585 : 
; 3586 : template <class _VbIt>
; 3587 : _CONSTEXPR20 void _Fill_vbool(_VbIt _First, const _VbIt _Last, const bool _Val) noexcept {
; 3588 :     // Set [_First, _Last) to _Val
; 3589 :     if (_First == _Last) {
; 3590 :         return;
; 3591 :     }
; 3592 : 
; 3593 :     _Vbase* _VbFirst      = const_cast<_Vbase*>(_First._Myptr);
; 3594 :     _Vbase* const _VbLast = const_cast<_Vbase*>(_Last._Myptr);
; 3595 : 
; 3596 :     const auto _FirstSourceMask = static_cast<_Vbase>(-1) << _First._Myoff;

	mov	esi, -1					; ffffffffH
	mov	r8d, esi
	shl	r8d, cl

; 3597 :     const auto _FirstDestMask   = ~_FirstSourceMask;

	mov	r9d, r8d
	not	r9d

; 3599 : 
; 3600 :     if (_VbFirst == _VbLast) {

	cmp	rdx, r14
	jne	SHORT $LN33@Insert_n

; 3601 :         // We already excluded _First == _Last, so here _Last._Myoff > 0 and the shift is safe
; 3602 :         const auto _LastSourceMask = static_cast<_Vbase>(-1) >> (_VBITS - _Last._Myoff);

	mov	ecx, 32					; 00000020H
	sub	cl, dil
	shr	esi, cl

; 3603 :         const auto _LastDestMask   = ~_LastSourceMask;
; 3604 :         const auto _SourceMask     = _FirstSourceMask & _LastSourceMask;
; 3605 :         const auto _DestMask       = _FirstDestMask | _LastDestMask;
; 3606 :         *_VbFirst                  = (*_VbFirst & _DestMask) | (_FillVal & _SourceMask);

	test	r15b, r15b
	cmovne	ebp, esi
	not	esi
	or	esi, r9d
	and	ebp, r8d
	and	esi, r10d
	or	ebp, esi
	mov	DWORD PTR [rdx], ebp

; 3607 :         return;

	jmp	SHORT $LN47@Insert_n
$LN33@Insert_n:

; 3608 :     }
; 3609 : 
; 3610 :     *_VbFirst = (*_VbFirst & _FirstDestMask) | (_FillVal & _FirstSourceMask);
; 3611 :     ++_VbFirst;

	lea	rcx, QWORD PTR [rdx+4]
	test	r15b, r15b
	mov	eax, ebp
	cmovne	eax, r8d
	and	r10d, r9d
	or	eax, r10d
	mov	r8, r14
	mov	DWORD PTR [rdx], eax
	sub	r8, rcx

; 3612 : 
; 3613 : #if _HAS_CXX20
; 3614 :     if (_STD is_constant_evaluated()) {
; 3615 :         for (; _VbFirst != _VbLast; ++_VbFirst) {
; 3616 :             *_VbFirst = _FillVal;
; 3617 :         }
; 3618 :     } else
; 3619 : #endif // _HAS_CXX20
; 3620 :     {
; 3621 :         const auto _VbFirst_ch = reinterpret_cast<const char*>(_VbFirst);
; 3622 :         const auto _VbLast_ch  = reinterpret_cast<const char*>(_VbLast);
; 3623 :         const auto _Count_ch   = static_cast<size_t>(_VbLast_ch - _VbFirst_ch);
; 3624 :         const auto _ValChar    = static_cast<unsigned char>(_Val ? -1 : 0);

	movzx	eax, r15b
	neg	al
	sbb	edx, edx
	movzx	edx, dl

; 3625 :         _CSTD memset(_VbFirst, _ValChar, _Count_ch);

	call	memset

; 3626 :         _VbFirst = _VbLast;
; 3627 :     }
; 3628 : 
; 3629 :     if (_Last._Myoff != 0) {

	test	rdi, rdi
	je	SHORT $LN47@Insert_n

; 3630 :         const auto _LastSourceMask = static_cast<_Vbase>(-1) >> (_VBITS - _Last._Myoff);

	mov	ecx, 32					; 00000020H
	sub	cl, dil
	shr	esi, cl

; 3631 :         const auto _LastDestMask   = ~_LastSourceMask;

	mov	eax, esi
	not	eax

; 3632 :         *_VbFirst                  = (*_VbFirst & _LastDestMask) | (_FillVal & _LastSourceMask);

	and	eax, DWORD PTR [r14]
	test	r15b, r15b
	cmovne	ebp, esi
	or	eax, ebp
	mov	DWORD PTR [r14], eax
$LN47@Insert_n:
	mov	rsi, QWORD PTR [rsp+96]
$LN59@Insert_n:
	mov	r14, QWORD PTR [rsp+48]
$LN48@Insert_n:

; 3463 :         _STD fill_n(_Result, _Count, _Val);
; 3464 :         return _Result;
; 3465 :     }

	mov	rax, rbx
	add	rsp, 56					; 00000038H
	pop	r15
	pop	rdi
	pop	rbp
	pop	rbx
	ret	0
?_Insert_n@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@V?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_KAEB_N@Z ENDP ; std::vector<bool,std::allocator<bool> >::_Insert_n
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?begin@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$dead$ = 8
__$ReturnUdt$ = 16
?begin@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@XZ PROC ; std::vector<bool,std::allocator<bool> >::begin, COMDAT

; 2388 :         : _Myptr(_Ptr), _Myoff(_Off) {

	mov	rax, QWORD PTR ?SubModelHovered@UICollisionCreator@@3V?$vector@_NV?$allocator@_N@std@@@std@@A
	mov	QWORD PTR [rdx], rax

; 3059 :         return iterator(this->_Myvec.data(), this);

	mov	rax, rdx

; 2388 :         : _Myptr(_Ptr), _Myoff(_Off) {

	mov	QWORD PTR [rdx+8], 0

; 3060 :     }

	ret	0
?begin@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@XZ ENDP ; std::vector<bool,std::allocator<bool> >::begin
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@PEBIPEBU_Container_base0@1@@Z
_TEXT	SEGMENT
this$ = 8
__param0$ = 16
__param1$dead$ = 24
??0?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@PEBIPEBU_Container_base0@1@@Z PROC ; std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >, COMDAT

; 2388 :         : _Myptr(_Ptr), _Myoff(_Off) {

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], 0
	ret	0
??0?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@PEBIPEBU_Container_base0@1@@Z ENDP ; std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAX_K@Z PROC ; std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::__autoclassinit2, COMDAT
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [rcx], xmm0
	ret	0
?__autoclassinit2@?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAX_K@Z ENDP ; std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\initializer_list
;	COMDAT ?end@?$initializer_list@I@std@@QEBAPEBIXZ
_TEXT	SEGMENT
this$ = 8
?end@?$initializer_list@I@std@@QEBAPEBIXZ PROC		; std::initializer_list<unsigned int>::end, COMDAT

; 42   :         return _Last;

	mov	rax, QWORD PTR [rcx+8]

; 43   :     }

	ret	0
?end@?$initializer_list@I@std@@QEBAPEBIXZ ENDP		; std::initializer_list<unsigned int>::end
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\initializer_list
;	COMDAT ?begin@?$initializer_list@I@std@@QEBAPEBIXZ
_TEXT	SEGMENT
this$ = 8
?begin@?$initializer_list@I@std@@QEBAPEBIXZ PROC	; std::initializer_list<unsigned int>::begin, COMDAT

; 38   :         return _First;

	mov	rax, QWORD PTR [rcx]

; 39   :     }

	ret	0
?begin@?$initializer_list@I@std@@QEBAPEBIXZ ENDP	; std::initializer_list<unsigned int>::begin
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\initializer_list
;	COMDAT ??0?$initializer_list@I@std@@QEAA@PEBI0@Z
_TEXT	SEGMENT
this$ = 8
_First_arg$ = 16
_Last_arg$ = 24
??0?$initializer_list@I@std@@QEAA@PEBI0@Z PROC		; std::initializer_list<unsigned int>::initializer_list<unsigned int>, COMDAT

; 35   :         : _First(_First_arg), _Last(_Last_arg) {}

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], r8
	ret	0
??0?$initializer_list@I@std@@QEAA@PEBI0@Z ENDP		; std::initializer_list<unsigned int>::initializer_list<unsigned int>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??Y?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@_J@Z
_TEXT	SEGMENT
this$ = 8
_Off$ = 16
??Y?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@_J@Z PROC ; std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator+=, COMDAT

; 2553 :         if (_Off < 0 && this->_Myoff < 0 - static_cast<_Size_type>(_Off)) { // add negative increment

	lea	r8, QWORD PTR [rcx+8]

; 2734 :     _CONSTEXPR20 _Vb_iterator& operator+=(const difference_type _Off) noexcept {

	mov	r9, rcx

; 2553 :         if (_Off < 0 && this->_Myoff < 0 - static_cast<_Size_type>(_Off)) { // add negative increment

	test	rdx, rdx
	jns	SHORT $LN7@operator
	mov	rcx, QWORD PTR [r8]
	mov	rax, rdx
	neg	rax
	cmp	rcx, rax
	jae	SHORT $LN7@operator

; 2554 :             this->_Myoff += static_cast<_Size_type>(_Off);

	add	rdx, rcx

; 2555 :             this->_Myptr -= 1 + (static_cast<_Size_type>(-1) - this->_Myoff) / _VBITS;

	mov	rax, -4
	mov	rcx, rdx

; 2735 :         _Mybase::operator+=(_Off);
; 2736 :         return *this;

	mov	QWORD PTR [r8], rdx

; 2555 :             this->_Myptr -= 1 + (static_cast<_Size_type>(-1) - this->_Myoff) / _VBITS;

	not	rcx
	shr	rcx, 5
	shl	rcx, 2
	sub	rax, rcx

; 2735 :         _Mybase::operator+=(_Off);
; 2736 :         return *this;

	add	QWORD PTR [r9], rax
	mov	rax, r9
	and	edx, 31
	mov	QWORD PTR [r8], rdx

; 2737 :     }

	ret	0
$LN7@operator:

; 2558 :             this->_Myoff += static_cast<_Size_type>(_Off);

	add	rdx, QWORD PTR [r8]

; 2559 :             this->_Myptr += this->_Myoff / _VBITS;

	mov	rax, rdx

; 2735 :         _Mybase::operator+=(_Off);
; 2736 :         return *this;

	mov	QWORD PTR [r8], rdx

; 2559 :             this->_Myptr += this->_Myoff / _VBITS;

	shr	rax, 5

; 2735 :         _Mybase::operator+=(_Off);
; 2736 :         return *this;

	and	edx, 31

; 2559 :             this->_Myptr += this->_Myoff / _VBITS;

	shl	rax, 2

; 2735 :         _Mybase::operator+=(_Off);
; 2736 :         return *this;

	add	QWORD PTR [r9], rax
	mov	rax, r9
	mov	QWORD PTR [r8], rdx

; 2737 :     }

	ret	0
??Y?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@_J@Z ENDP ; std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator+=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@PEBIPEBU_Container_base0@1@@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
_Mypvbool$dead$ = 24
??0?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@PEBIPEBU_Container_base0@1@@Z PROC ; std::_Vb_const_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::_Vb_const_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >, COMDAT

; 2388 :         : _Myptr(_Ptr), _Myoff(_Off) {

	mov	QWORD PTR [rcx], rdx

; 2503 :         : _Mybase(_Ptr, 0, _Mypvbool) {}

	mov	rax, rcx

; 2388 :         : _Myptr(_Ptr), _Myoff(_Off) {

	mov	QWORD PTR [rcx+8], 0

; 2503 :         : _Mybase(_Ptr, 0, _Mypvbool) {}

	ret	0
??0?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@PEBIPEBU_Container_base0@1@@Z ENDP ; std::_Vb_const_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::_Vb_const_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@QEAA_KV?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_K@Z
_TEXT	SEGMENT
$T3 = 32
$T4 = 48
$T5 = 48
this$dead$ = 80
_Where$ = 88
_Count$ = 96
?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@QEAA_KV?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_K@Z PROC ; std::vector<bool,std::allocator<bool> >::_Insert_x, COMDAT

; 3467 :     _CONSTEXPR20 size_type _Insert_x(const_iterator _Where, size_type _Count) {

$LN211:
	mov	QWORD PTR [rsp+32], rbp
	push	rsi
	sub	rsp, 64					; 00000040H

; 2589 :         return static_cast<difference_type>(_Mybase::_VBITS_DIFF * (this->_Myptr - _Right._Myptr))

	mov	rbp, QWORD PTR [rdx]

; 3467 :     _CONSTEXPR20 size_type _Insert_x(const_iterator _Where, size_type _Count) {

	mov	rsi, r8

; 2388 :         : _Myptr(_Ptr), _Myoff(_Off) {

	mov	r8, QWORD PTR ?SubModelHovered@UICollisionCreator@@3V?$vector@_NV?$allocator@_N@std@@@std@@A

; 2589 :         return static_cast<difference_type>(_Mybase::_VBITS_DIFF * (this->_Myptr - _Right._Myptr))

	sub	rbp, r8
	sar	rbp, 2
	shl	rbp, 5
	add	rbp, QWORD PTR [rdx+8]

; 3468 :         const difference_type _Off = _Where - begin();
; 3469 : 
; 3470 : #if _ITERATOR_DEBUG_LEVEL == 2
; 3471 :         _STL_VERIFY(end() >= _Where, "vector<bool> insert iterator outside range");
; 3472 :         const bool _Realloc = capacity() - size() < _Count;
; 3473 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 3474 : 
; 3475 :         if (_Count != 0) {

	test	rsi, rsi
	je	$LN184@Insert_x

; 3476 :             if (max_size() - size() < _Count) {

	mov	rcx, QWORD PTR ?SubModelHovered@UICollisionCreator@@3V?$vector@_NV?$allocator@_N@std@@@std@@A+24
	mov	rax, 9223372036854775807		; 7fffffffffffffffH
	sub	rax, rcx
	cmp	rax, rsi
	jb	$LN209@Insert_x

; 3478 :             }
; 3479 : 
; 3480 : #if _ITERATOR_DEBUG_LEVEL == 2
; 3481 :             _Orphan_range(static_cast<size_type>(_Realloc ? 0 : _Off), this->_Mysize);
; 3482 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 3483 :             this->_Myvec.resize(this->_Nw(size() + _Count), 0);

	mov	QWORD PTR [rsp+80], rbx
	xor	edx, edx

; 2839 :         return (_Count + _VBITS - 1) / _VBITS;

	lea	rbx, QWORD PTR [rcx+31]
	mov	QWORD PTR [rsp+88], rdi

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rdi, QWORD PTR ?SubModelHovered@UICollisionCreator@@3V?$vector@_NV?$allocator@_N@std@@@std@@A+8

; 2839 :         return (_Count + _VBITS - 1) / _VBITS;

	add	rbx, rsi

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rcx, rdi

; 2839 :         return (_Count + _VBITS - 1) / _VBITS;

	shr	rbx, 5

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	sub	rcx, r8

; 3478 :             }
; 3479 : 
; 3480 : #if _ITERATOR_DEBUG_LEVEL == 2
; 3481 :             _Orphan_range(static_cast<size_type>(_Realloc ? 0 : _Off), this->_Mysize);
; 3482 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 3483 :             this->_Myvec.resize(this->_Nw(size() + _Count), 0);

	mov	DWORD PTR $T3[rsp], edx

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	sar	rcx, 2

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rbx, rcx
	jae	SHORT $LN26@Insert_x

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	lea	rax, QWORD PTR [r8+rbx*4]
	mov	QWORD PTR ?SubModelHovered@UICollisionCreator@@3V?$vector@_NV?$allocator@_N@std@@@std@@A+8, rax

; 1560 :             _Orphan_range(_Newlast, _Mylast);
; 1561 :             _Destroy_range(_Newlast, _Mylast, _Al);
; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;
; 1564 :             return;

	jmp	SHORT $LN27@Insert_x
$LN26@Insert_x:

; 1565 :         }
; 1566 : 
; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN27@Insert_x

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR ?SubModelHovered@UICollisionCreator@@3V?$vector@_NV?$allocator@_N@std@@@std@@A+16
	sub	rax, r8
	sar	rax, 2

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	rbx, rax
	jbe	SHORT $LN28@Insert_x

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	lea	r8, QWORD PTR $T3[rsp]
	mov	rdx, rbx
	call	??$_Resize_reallocate@I@?$vector@IV?$allocator@I@std@@@std@@AEAAX_KAEBI@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Resize_reallocate<unsigned int>

; 1571 :                 return;

	jmp	SHORT $LN27@Insert_x
$LN28@Insert_x:

; 1577 :                 _Mylast = _Uninitialized_fill_n(_Oldlast, _Newsize - _Oldsize, _Val, _Al);

	sub	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5016 :     _CSTD memset(_To_address(_Dest), 0, _Count * sizeof(_Iter_value_t<_CtgIt>));

	mov	rcx, rdi
	lea	rbx, QWORD PTR [rbx*4]
	mov	r8, rbx
	call	memset
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1972 :                 return _First + _Count;

	add	rdi, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1577 :                 _Mylast = _Uninitialized_fill_n(_Oldlast, _Newsize - _Oldsize, _Val, _Al);

	mov	QWORD PTR ?SubModelHovered@UICollisionCreator@@3V?$vector@_NV?$allocator@_N@std@@@std@@A+8, rdi
$LN27@Insert_x:

; 3162 :         return this->_Mysize == 0;

	mov	rcx, QWORD PTR ?SubModelHovered@UICollisionCreator@@3V?$vector@_NV?$allocator@_N@std@@@std@@A+24
	mov	rdi, QWORD PTR [rsp+88]
	test	rcx, rcx

; 3484 :             if (empty()) {

	jne	SHORT $LN4@Insert_x

; 3485 :                 this->_Mysize += _Count;

	mov	QWORD PTR ?SubModelHovered@UICollisionCreator@@3V?$vector@_NV?$allocator@_N@std@@@std@@A+24, rsi
$LN203@Insert_x:
	mov	rbx, QWORD PTR [rsp+80]
$LN184@Insert_x:

; 3489 :                 _STD copy_backward(begin() + _Off, _Oldend, end());
; 3490 :             }
; 3491 :         }
; 3492 : 
; 3493 :         return static_cast<size_type>(_Off);

	mov	rax, rbp

; 3494 :     }

	mov	rbp, QWORD PTR [rsp+104]
	add	rsp, 64					; 00000040H
	pop	rsi
	ret	0
$LN4@Insert_x:

; 2388 :         : _Myptr(_Ptr), _Myoff(_Off) {

	mov	r11, QWORD PTR ?SubModelHovered@UICollisionCreator@@3V?$vector@_NV?$allocator@_N@std@@@std@@A

; 2553 :         if (_Off < 0 && this->_Myoff < 0 - static_cast<_Size_type>(_Off)) { // add negative increment

	test	rcx, rcx
	jns	SHORT $LN70@Insert_x
	mov	rax, rcx
	neg	rax
	je	SHORT $LN70@Insert_x

; 2554 :             this->_Myoff += static_cast<_Size_type>(_Off);

	mov	rax, rcx

; 2555 :             this->_Myptr -= 1 + (static_cast<_Size_type>(-1) - this->_Myoff) / _VBITS;

	mov	r10, r11
	not	rax
	shr	rax, 5
	lea	rax, QWORD PTR [rax*4+4]
	sub	r10, rax

; 2556 :             this->_Myoff %= _VBITS;
; 2557 :         } else { // add non-negative increment

	jmp	SHORT $LN205@Insert_x
$LN70@Insert_x:

; 2558 :             this->_Myoff += static_cast<_Size_type>(_Off);

	mov	rax, rcx
	shr	rax, 5

; 2559 :             this->_Myptr += this->_Myoff / _VBITS;

	lea	r10, QWORD PTR [r11+rax*4]
$LN205@Insert_x:

; 3486 :             } else { // make room and copy down suffix
; 3487 :                 iterator _Oldend = end();
; 3488 :                 this->_Mysize += _Count;

	lea	r8, QWORD PTR [rcx+rsi]
	mov	rdx, rcx
	and	edx, 31
	mov	QWORD PTR ?SubModelHovered@UICollisionCreator@@3V?$vector@_NV?$allocator@_N@std@@@std@@A+24, r8

; 2553 :         if (_Off < 0 && this->_Myoff < 0 - static_cast<_Size_type>(_Off)) { // add negative increment

	test	r8, r8
	jns	SHORT $LN90@Insert_x
	mov	rax, r8
	neg	rax
	je	SHORT $LN90@Insert_x

; 2554 :             this->_Myoff += static_cast<_Size_type>(_Off);

	mov	rax, r8

; 2555 :             this->_Myptr -= 1 + (static_cast<_Size_type>(-1) - this->_Myoff) / _VBITS;

	mov	rcx, r11
	not	rax
	shr	rax, 5
	lea	rax, QWORD PTR [rax*4+4]
	sub	rcx, rax
	mov	QWORD PTR $T5[rsp], rcx

; 2556 :             this->_Myoff %= _VBITS;
; 2557 :         } else { // add non-negative increment

	jmp	SHORT $LN206@Insert_x
$LN90@Insert_x:

; 2558 :             this->_Myoff += static_cast<_Size_type>(_Off);

	mov	rax, r8
	shr	rax, 5

; 2559 :             this->_Myptr += this->_Myoff / _VBITS;

	lea	rax, QWORD PTR [r11+rax*4]
	mov	QWORD PTR $T5[rsp], rax
$LN206@Insert_x:

; 2553 :         if (_Off < 0 && this->_Myoff < 0 - static_cast<_Size_type>(_Off)) { // add negative increment

	and	r8d, 31
	mov	QWORD PTR $T5[rsp+8], r8
	test	rbp, rbp
	jns	SHORT $LN108@Insert_x
	mov	rax, rbp
	neg	rax
	je	SHORT $LN108@Insert_x

; 2554 :             this->_Myoff += static_cast<_Size_type>(_Off);

	mov	rax, rbp
	not	rax

; 2555 :             this->_Myptr -= 1 + (static_cast<_Size_type>(-1) - this->_Myoff) / _VBITS;

	shr	rax, 5
	lea	rax, QWORD PTR [rax*4+4]
	sub	r11, rax

; 2556 :             this->_Myoff %= _VBITS;
; 2557 :         } else { // add non-negative increment

	jmp	SHORT $LN207@Insert_x
$LN108@Insert_x:

; 2558 :             this->_Myoff += static_cast<_Size_type>(_Off);

	mov	rax, rbp
	shr	rax, 5

; 2559 :             this->_Myptr += this->_Myoff / _VBITS;

	lea	r11, QWORD PTR [r11+rax*4]
$LN207@Insert_x:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4881 :     _Seek_wrapped(_Dest, _Copy_backward_unchecked(_UFirst, _ULast, _UDest));

	movaps	xmm0, XMMWORD PTR $T5[rsp]
	mov	rbx, rbp
	movdqa	XMMWORD PTR $T4[rsp], xmm0
	and	ebx, 31
	mov	r8, QWORD PTR $T4[rsp+8]
	mov	r9, QWORD PTR $T4[rsp]
$LL124@Insert_x:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2599 :         return this->_Myptr == _Right._Myptr && this->_Myoff == _Right._Myoff;

	mov	rcx, rdx
	cmp	r11, r10
	jne	SHORT $LN129@Insert_x
	cmp	rbx, rdx
	je	$LN203@Insert_x
$LN129@Insert_x:

; 2658 :         if (this->_Myoff != 0) {

	test	rdx, rdx
	je	SHORT $LN136@Insert_x

; 2659 :             --this->_Myoff;

	dec	rdx

; 2660 :         } else { // move to previous word

	jmp	SHORT $LN137@Insert_x
$LN136@Insert_x:

; 2661 :             this->_Myoff = _VBITS - 1;

	mov	edx, 31
$LN137@Insert_x:

; 2658 :         if (this->_Myoff != 0) {

	test	rcx, rcx
	lea	rax, QWORD PTR [r10-4]
	cmove	r10, rax
	test	r8, r8
	je	SHORT $LN150@Insert_x

; 2659 :             --this->_Myoff;

	dec	r8

; 2660 :         } else { // move to previous word

	jmp	SHORT $LN151@Insert_x
$LN150@Insert_x:

; 2661 :             this->_Myoff = _VBITS - 1;

	mov	r8d, 31

; 2662 :             --this->_Myptr;

	sub	r9, 4
$LN151@Insert_x:

; 2388 :         : _Myptr(_Ptr), _Myoff(_Off) {

	mov	rcx, rdx
	mov	eax, 1
	shl	eax, cl

; 2456 :         return (*_Getptr() & _Mask()) != 0;

	test	eax, DWORD PTR [r10]

; 2430 :         if (_Val) {

	mov	eax, DWORD PTR [r9]
	je	SHORT $LN166@Insert_x

; 2431 :             *const_cast<_Vbase*>(_Getptr()) |= _Mask();

	bts	eax, r8d
	mov	DWORD PTR [r9], eax

; 2432 :         } else {

	jmp	SHORT $LL124@Insert_x
$LN166@Insert_x:

; 2433 :             *const_cast<_Vbase*>(_Getptr()) &= ~_Mask();

	btr	eax, r8d
	mov	DWORD PTR [r9], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4869 :     }

	jmp	SHORT $LL124@Insert_x
$LN209@Insert_x:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 3477 :                 _Xlen(); // result too long

	call	?_Xlen@?$vector@_NV?$allocator@_N@std@@@std@@QEBAXXZ ; std::vector<bool,std::allocator<bool> >::_Xlen
	int	3
$LN204@Insert_x:
?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@QEAA_KV?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@_K@Z ENDP ; std::vector<bool,std::allocator<bool> >::_Insert_x
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::clear, COMDAT

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rcx+24], 16

; 2227 :         if (_Large_string_engaged()) {

	jb	SHORT $LN10@clear

; 2228 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR [rcx]

; 4815 :         _Traits::assign(_Mypair._Myval2._Myptr()[_Mypair._Myval2._Mysize = _New_size], _Elem());

	mov	QWORD PTR [rcx+16], 0
	mov	BYTE PTR [rax], 0

; 3673 :         _Eos(0);
; 3674 :     }

	ret	0
$LN10@clear:

; 4815 :         _Traits::assign(_Mypair._Myval2._Myptr()[_Mypair._Myval2._Mysize = _New_size], _Elem());

	mov	QWORD PTR [rcx+16], 0
	mov	BYTE PTR [rcx], 0

; 3673 :         _Eos(0);
; 3674 :     }

	ret	0
?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??G?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA_JAEBV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??G?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA_JAEBV01@@Z PROC ; std::_Vb_const_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator-, COMDAT

; 2588 :         _Compat(_Right);
; 2589 :         return static_cast<difference_type>(_Mybase::_VBITS_DIFF * (this->_Myptr - _Right._Myptr))

	mov	rax, QWORD PTR [rcx]
	sub	rax, QWORD PTR [rdx]
	sar	rax, 2
	shl	rax, 5
	sub	rax, QWORD PTR [rdx+8]
	add	rax, QWORD PTR [rcx+8]

; 2590 :              + static_cast<difference_type>(this->_Myoff) - static_cast<difference_type>(_Right._Myoff);
; 2591 :     }

	ret	0
??G?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA_JAEBV01@@Z ENDP ; std::_Vb_const_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator-
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??Y?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@_J@Z
_TEXT	SEGMENT
this$ = 8
_Off$ = 16
??Y?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@_J@Z PROC ; std::_Vb_const_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator+=, COMDAT

; 2539 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2540 :         if (_Off != 0) {
; 2541 :             const auto _Cont = static_cast<const _Mycont*>(this->_Getcont());
; 2542 :             _STL_VERIFY(_Cont, "cannot seek value-initialized vector<bool> iterator");
; 2543 :             const auto _Start_offset = this->_Total_off(_Cont);
; 2544 :             if (_Off < 0) {
; 2545 :                 _STL_VERIFY(-_Start_offset <= _Off, "cannot seek vector<bool> iterator before begin");
; 2546 :             } else if (0 < _Off) {
; 2547 :                 _STL_VERIFY(_Off <= static_cast<_Difference_type>(_Cont->_Mysize - _Start_offset),
; 2548 :                     "cannot seek vector<bool> iterator after end");
; 2549 :             }
; 2550 :         }
; 2551 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2552 : 
; 2553 :         if (_Off < 0 && this->_Myoff < 0 - static_cast<_Size_type>(_Off)) { // add negative increment

	lea	r8, QWORD PTR [rcx+8]
	mov	r9, rcx
	test	rdx, rdx
	jns	SHORT $LN5@operator
	mov	rcx, QWORD PTR [r8]
	mov	rax, rdx
	neg	rax
	cmp	rcx, rax
	jae	SHORT $LN5@operator

; 2554 :             this->_Myoff += static_cast<_Size_type>(_Off);

	add	rdx, rcx

; 2555 :             this->_Myptr -= 1 + (static_cast<_Size_type>(-1) - this->_Myoff) / _VBITS;

	mov	rax, -4
	mov	rcx, rdx

; 2560 :             this->_Myoff %= _VBITS;
; 2561 :         }
; 2562 :         return *this;

	mov	QWORD PTR [r8], rdx
	not	rcx
	shr	rcx, 5
	shl	rcx, 2
	sub	rax, rcx
	add	QWORD PTR [r9], rax
	mov	rax, r9
	and	edx, 31
	mov	QWORD PTR [r8], rdx

; 2563 :     }

	ret	0
$LN5@operator:

; 2556 :             this->_Myoff %= _VBITS;
; 2557 :         } else { // add non-negative increment
; 2558 :             this->_Myoff += static_cast<_Size_type>(_Off);

	add	rdx, QWORD PTR [r8]

; 2559 :             this->_Myptr += this->_Myoff / _VBITS;

	mov	rax, rdx

; 2560 :             this->_Myoff %= _VBITS;
; 2561 :         }
; 2562 :         return *this;

	mov	QWORD PTR [r8], rdx
	shr	rax, 5
	and	edx, 31
	shl	rax, 2
	add	QWORD PTR [r9], rax
	mov	rax, r9
	mov	QWORD PTR [r8], rdx

; 2563 :     }

	ret	0
??Y?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@_J@Z ENDP ; std::_Vb_const_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator+=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Orphan_range@?$vector@DV?$allocator@D@std@@@std@@AEBAXPEAD0@Z
_TEXT	SEGMENT
this$dead$ = 8
__formal$dead$ = 16
__formal$dead$ = 24
?_Orphan_range@?$vector@DV?$allocator@D@std@@@std@@AEBAXPEAD0@Z PROC ; std::vector<char,std::allocator<char> >::_Orphan_range, COMDAT

; 2177 :     _CONSTEXPR20 void _Orphan_range(pointer, pointer) const {}

	ret	0
?_Orphan_range@?$vector@DV?$allocator@D@std@@@std@@AEBAXPEAD0@Z ENDP ; std::vector<char,std::allocator<char> >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$_Vb_iter_base@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@PEBI_KPEBU_Container_base0@1@@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
_Off$ = 24
_Mypvbool$dead$ = 32
??0?$_Vb_iter_base@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@PEBI_KPEBU_Container_base0@1@@Z PROC ; std::_Vb_iter_base<std::_Wrap_alloc<std::allocator<unsigned int> > >::_Vb_iter_base<std::_Wrap_alloc<std::allocator<unsigned int> > >, COMDAT

; 2388 :         : _Myptr(_Ptr), _Myoff(_Off) {

	mov	QWORD PTR [rcx], rdx

; 2389 :         this->_Adopt(_Mypvbool);
; 2390 :     }

	mov	rax, rcx
	mov	QWORD PTR [rcx+8], r8
	ret	0
??0?$_Vb_iter_base@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@PEBI_KPEBU_Container_base0@1@@Z ENDP ; std::_Vb_iter_base<std::_Wrap_alloc<std::allocator<unsigned int> > >::_Vb_iter_base<std::_Wrap_alloc<std::allocator<unsigned int> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Xlen@?$vector@_NV?$allocator@_N@std@@@std@@QEBAXXZ
_TEXT	SEGMENT
this$dead$ = 48
?_Xlen@?$vector@_NV?$allocator@_N@std@@@std@@QEBAXXZ PROC ; std::vector<bool,std::allocator<bool> >::_Xlen, COMDAT

; 3554 :     [[noreturn]] void _Xlen() const {

$LN4:
	sub	rsp, 40					; 00000028H

; 3555 :         _Xlength_error("vector<bool> too long");

	lea	rcx, OFFSET FLAT:??_C@_0BG@EOMJEIFA@vector?$DMbool?$DO?5too?5long@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN3@Xlen:
?_Xlen@?$vector@_NV?$allocator@_N@std@@@std@@QEBAXXZ ENDP ; std::vector<bool,std::allocator<bool> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?empty@?$vector@_NV?$allocator@_N@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$dead$ = 8
?empty@?$vector@_NV?$allocator@_N@std@@@std@@QEBA_NXZ PROC ; std::vector<bool,std::allocator<bool> >::empty, COMDAT

; 3162 :         return this->_Mysize == 0;

	cmp	QWORD PTR ?SubModelHovered@UICollisionCreator@@3V?$vector@_NV?$allocator@_N@std@@@std@@A+24, 0
	sete	al

; 3163 :     }

	ret	0
?empty@?$vector@_NV?$allocator@_N@std@@@std@@QEBA_NXZ ENDP ; std::vector<bool,std::allocator<bool> >::empty
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?max_size@?$vector@_NV?$allocator@_N@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$dead$ = 8
?max_size@?$vector@_NV?$allocator@_N@std@@@std@@QEBA_KXZ PROC ; std::vector<bool,std::allocator<bool> >::max_size, COMDAT

; 3151 :         constexpr auto _Diff_max  = static_cast<size_type>((numeric_limits<difference_type>::max)());
; 3152 :         const size_type _Ints_max = this->_Myvec.max_size();
; 3153 :         if (_Ints_max > _Diff_max / _VBITS) { // max_size bound by difference_type limits
; 3154 :             return _Diff_max;

	mov	rax, 9223372036854775807		; 7fffffffffffffffH

; 3155 :         }
; 3156 : 
; 3157 :         // max_size bound by underlying storage limits
; 3158 :         return _Ints_max * _VBITS;
; 3159 :     }

	ret	0
?max_size@?$vector@_NV?$allocator@_N@std@@@std@@QEBA_KXZ ENDP ; std::vector<bool,std::allocator<bool> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?size@?$vector@_NV?$allocator@_N@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$dead$ = 8
?size@?$vector@_NV?$allocator@_N@std@@@std@@QEBA_KXZ PROC ; std::vector<bool,std::allocator<bool> >::size, COMDAT

; 3147 :         return this->_Mysize;

	mov	rax, QWORD PTR ?SubModelHovered@UICollisionCreator@@3V?$vector@_NV?$allocator@_N@std@@@std@@A+24

; 3148 :     }

	ret	0
?size@?$vector@_NV?$allocator@_N@std@@@std@@QEBA_KXZ ENDP ; std::vector<bool,std::allocator<bool> >::size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?resize@?$vector@IV?$allocator@I@std@@@std@@QEAAX_KAEBI@Z
_TEXT	SEGMENT
this$dead$ = 48
_Newsize$ = 56
_Val$ = 64
?resize@?$vector@IV?$allocator@I@std@@@std@@QEAAX_KAEBI@Z PROC ; std::vector<unsigned int,std::allocator<unsigned int> >::resize, COMDAT

; 1595 :     _CONSTEXPR20 void resize(_CRT_GUARDOVERFLOW const size_type _Newsize, const _Ty& _Val) {

$LN10:
	sub	rsp, 40					; 00000028H

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	r10, QWORD PTR ?SubModelHovered@UICollisionCreator@@3V?$vector@_NV?$allocator@_N@std@@@std@@A+8
	mov	r9, QWORD PTR ?SubModelHovered@UICollisionCreator@@3V?$vector@_NV?$allocator@_N@std@@@std@@A
	mov	rcx, r10
	sub	rcx, r9
	sar	rcx, 2

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rdx, rcx
	jae	SHORT $LN4@resize

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	lea	rax, QWORD PTR [r9+rdx*4]

; 1596 :         // trim or append copies of _Val, provide strong guarantee
; 1597 :         _Resize(_Newsize, _Val);
; 1598 :     }

	mov	QWORD PTR ?SubModelHovered@UICollisionCreator@@3V?$vector@_NV?$allocator@_N@std@@@std@@A+8, rax
	add	rsp, 40					; 00000028H
	ret	0
$LN4@resize:

; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN5@resize

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR ?SubModelHovered@UICollisionCreator@@3V?$vector@_NV?$allocator@_N@std@@@std@@A+16
	sub	rax, r9
	sar	rax, 2

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	rdx, rax
	jbe	SHORT $LN6@resize

; 1596 :         // trim or append copies of _Val, provide strong guarantee
; 1597 :         _Resize(_Newsize, _Val);
; 1598 :     }

	add	rsp, 40					; 00000028H

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	jmp	??$_Resize_reallocate@I@?$vector@IV?$allocator@I@std@@@std@@AEAAX_KAEBI@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Resize_reallocate<unsigned int>
$LN6@resize:

; 1571 :                 return;
; 1572 :             }
; 1573 : 
; 1574 :             _ASAN_VECTOR_EXTEND_GUARD(_Newsize);
; 1575 :             const pointer _Oldlast = _Mylast;
; 1576 :             if constexpr (is_same_v<_Ty2, _Ty>) {
; 1577 :                 _Mylast = _Uninitialized_fill_n(_Oldlast, _Newsize - _Oldsize, _Val, _Al);

	sub	rdx, rcx
	mov	rcx, r10
	call	??$_Uninitialized_fill_n@V?$allocator@I@std@@@std@@YAPEAIPEAI_KAEBIAEAV?$allocator@I@0@@Z ; std::_Uninitialized_fill_n<std::allocator<unsigned int> >

; 1596 :         // trim or append copies of _Val, provide strong guarantee
; 1597 :         _Resize(_Newsize, _Val);
; 1598 :     }

	mov	QWORD PTR ?SubModelHovered@UICollisionCreator@@3V?$vector@_NV?$allocator@_N@std@@@std@@A+8, rax
$LN5@resize:
	add	rsp, 40					; 00000028H
	ret	0
?resize@?$vector@IV?$allocator@I@std@@@std@@QEAAX_KAEBI@Z ENDP ; std::vector<unsigned int,std::allocator<unsigned int> >::resize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Nw@?$_Vb_val@V?$allocator@_N@std@@@std@@SA_K_K@Z
_TEXT	SEGMENT
_Count$ = 8
?_Nw@?$_Vb_val@V?$allocator@_N@std@@@std@@SA_K_K@Z PROC	; std::_Vb_val<std::allocator<bool> >::_Nw, COMDAT

; 2839 :         return (_Count + _VBITS - 1) / _VBITS;

	lea	rax, QWORD PTR [rcx+31]
	shr	rax, 5

; 2840 :     }

	ret	0
?_Nw@?$_Vb_val@V?$allocator@_N@std@@@std@@SA_K_K@Z ENDP	; std::_Vb_val<std::allocator<bool> >::_Nw
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Compat@?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBAXAEBV12@@Z
_TEXT	SEGMENT
this$dead$ = 8
_Right$dead$ = 16
?_Compat@?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBAXAEBV12@@Z PROC ; std::_Vb_const_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::_Compat, COMDAT

; 2634 :         // test for compatible iterator pair
; 2635 : #if _ITERATOR_DEBUG_LEVEL == 0
; 2636 :         (void) _Right;
; 2637 : #else // _ITERATOR_DEBUG_LEVEL == 0
; 2638 :         _STL_VERIFY(this->_Getcont() == _Right._Getcont(), "vector<bool> iterators incompatible");
; 2639 : #endif // _ITERATOR_DEBUG_LEVEL
; 2640 :     }

	ret	0
?_Compat@?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBAXAEBV12@@Z ENDP ; std::_Vb_const_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::_Compat
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@D@std@@YA$$QEADAEAD@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@D@std@@YA$$QEADAEAD@Z PROC			; std::forward<char>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@D@std@@YA$$QEADAEAD@Z ENDP			; std::forward<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@AEAH@std@@YAAEAHAEAH@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAH@std@@YAAEAHAEAH@Z PROC			; std::forward<int &>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@AEAH@std@@YAAEAHAEAH@Z ENDP			; std::forward<int &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@AEA_N@std@@YAAEA_NAEA_N@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEA_N@std@@YAAEA_NAEA_N@Z PROC		; std::forward<bool &>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@AEA_N@std@@YAAEA_NAEA_N@Z ENDP		; std::forward<bool &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,1>::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,1><>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1515 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	rax, rcx
	ret	0
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,1>::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@AEAY02$$CBD@std@@YAAEAY02$$CBDAEAY02$$CBD@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAY02$$CBD@std@@YAAEAY02$$CBDAEAY02$$CBD@Z PROC ; std::forward<char const (&)[3]>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@AEAY02$$CBD@std@@YAAEAY02$$CBDAEAY02$$CBD@Z ENDP ; std::forward<char const (&)[3]>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@AEAPEBD@std@@YAAEAPEBDAEAPEBD@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAPEBD@std@@YAAEAPEBDAEAPEBD@Z PROC		; std::forward<char const * &>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@AEAPEBD@std@@YAAEAPEBDAEAPEBD@Z ENDP		; std::forward<char const * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@AEAPEAU12@@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@0@AEAPEAU10@0@Z
_TEXT	SEGMENT
_Val$ = 8
_New_val$ = 16
??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@AEAPEAU12@@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@0@AEAPEAU10@0@Z PROC ; std::exchange<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * &>, COMDAT

; 753  :     // assign _New_val to _Val, return previous _Val
; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);
; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	rdx, QWORD PTR [rdx]
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rcx], rdx

; 756  :     return _Old_val;
; 757  : }

	ret	0
??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@AEAPEAU12@@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@0@AEAPEAU10@0@Z ENDP ; std::exchange<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@PEAU01@@Z
_TEXT	SEGMENT
_Al$dead$ = 48
_Ptr$ = 56
??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@PEAU01@@Z PROC ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >, COMDAT

; 380  :     static void _Freenode(_Alloc& _Al, _Nodeptr _Ptr) noexcept {

$LN64:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	lea	rcx, QWORD PTR [rdx+64]
	mov	rdi, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR [rdi+32]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 88					; 00000058H
	mov	rcx, rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 384  :     }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@PEAU01@@Z ENDP ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@PEAU01@@Z
_TEXT	SEGMENT
_Al$dead$ = 8
_Ptr$ = 16
??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@PEAU01@@Z PROC ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >, COMDAT

; 371  :     static void _Freenode0(_Alloc& _Al, _Nodeptr _Ptr) noexcept {

	mov	rcx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 88					; 00000058H
	jmp	??3@YAXPEAX_K@Z				; operator delete
??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@PEAU01@@Z ENDP ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Get_unwrapped@AEBQEAD@std@@YA?A_TAEBQEAD@Z
_TEXT	SEGMENT
_It$ = 8
??$_Get_unwrapped@AEBQEAD@std@@YA?A_TAEBQEAD@Z PROC	; std::_Get_unwrapped<char * const &>, COMDAT

; 1156 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1157 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1158 :         return _It + 0;

	mov	rax, QWORD PTR [rcx]

; 1159 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1160 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1161 :     } else {
; 1162 :         return static_cast<_Iter&&>(_It);
; 1163 :     }
; 1164 : }

	ret	0
??$_Get_unwrapped@AEBQEAD@std@@YA?A_TAEBQEAD@Z ENDP	; std::_Get_unwrapped<char * const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_To_address@PEAD@std@@YA?A_PAEBQEAD@Z
_TEXT	SEGMENT
_Val$ = 8
??$_To_address@PEAD@std@@YA?A_PAEBQEAD@Z PROC		; std::_To_address<char *>, COMDAT

; 4395 :     _STL_INTERNAL_STATIC_ASSERT(contiguous_iterator<_Iter>);
; 4396 :     return _STD to_address(_Val);

	mov	rax, QWORD PTR [rcx]

; 4397 : }

	ret	0
??$_To_address@PEAD@std@@YA?A_PAEBQEAD@Z ENDP		; std::_To_address<char *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Construct_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@0@AEBQEAU10@@Z
_TEXT	SEGMENT
_Obj$ = 8
<_Args_0>$ = 16
??$_Construct_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@0@AEBQEAU10@@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * const &>, COMDAT

; 248  : #if _HAS_CXX20
; 249  :     if (_STD is_constant_evaluated()) {
; 250  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);
; 251  :     } else
; 252  : #endif // _HAS_CXX20
; 253  :     {
; 254  :         ::new (static_cast<void*>(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);
; 255  :     }
; 256  : }

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	ret	0
??$_Construct_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@0@AEBQEAU10@@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Destroy_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@0@@Z
_TEXT	SEGMENT
_Obj$dead$ = 8
??$_Destroy_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@0@@Z PROC ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *>, COMDAT

; 305  :     if constexpr (is_array_v<_Ty>) {
; 306  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 307  :     } else {
; 308  :         _Obj.~_Ty();
; 309  :     }
; 310  : }

	ret	0
??$_Destroy_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@0@@Z ENDP ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@0@AEAU10@@Z PROC ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >, COMDAT

; 1607 :     return __builtin_addressof(_Val);

	mov	rax, rcx

; 1608 : }

	ret	0
??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@0@AEAU10@@Z ENDP ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@1@@Z
_TEXT	SEGMENT
__formal$dead$ = 48
_Ptr$ = 56
??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >, COMDAT

; 724  :     static _CONSTEXPR20 void destroy(_Alloc&, _Uty* const _Ptr) {

$LN18:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rcx, QWORD PTR [rdx+32]
	mov	rbx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 730  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@D@std@@@std@@YAXPEADQEADAEAV?$allocator@D@0@@Z
_TEXT	SEGMENT
_First$dead$ = 8
_Last$dead$ = 16
_Al$dead$ = 24
??$_Destroy_range@V?$allocator@D@std@@@std@@YAXPEADQEADAEAV?$allocator@D@0@@Z PROC ; std::_Destroy_range<std::allocator<char> >, COMDAT

; 1083 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1084 :     using _Ty = typename _Alloc::value_type;
; 1085 :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1086 :         for (; _First != _Last; ++_First) {
; 1087 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1088 :         }
; 1089 :     }
; 1090 : }

	ret	0
??$_Destroy_range@V?$allocator@D@std@@@std@@YAXPEADQEADAEAV?$allocator@D@0@@Z ENDP ; std::_Destroy_range<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$fill_n@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@_K_N@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@_KAEB_N@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 64
_Dest$ = 72
_Count_raw$ = 80
_Val$ = 88
??$fill_n@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@_K_N@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@_KAEB_N@Z PROC ; std::fill_n<std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >,unsigned __int64,bool>, COMDAT

; 5072 : _CONSTEXPR20 _OutIt fill_n(_OutIt _Dest, const _Diff _Count_raw, const _Ty& _Val) {

$LN34:
	push	rsi
	push	r15
	sub	rsp, 40					; 00000028H
	mov	r15, r9
	mov	r11, rdx
	mov	rsi, rcx

; 5073 :     // copy _Val _Count times through [_Dest, ...)
; 5074 :     _Algorithm_int_t<_Diff> _Count = _Count_raw;
; 5075 :     if (0 < _Count) {

	test	r8, r8
	je	$LN2@fill_n
	xorps	xmm0, xmm0
	mov	QWORD PTR [rsp+72], rbp
	movups	XMMWORD PTR [rcx], xmm0

; 5076 :         if constexpr (_Is_vb_iterator<_OutIt, true>) {
; 5077 :             const auto _Last = _Dest + static_cast<typename _OutIt::difference_type>(_Count);

	mov	rdx, rcx
	mov	QWORD PTR [rsp+32], r14
	mov	rcx, r11
	call	??H?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA?AV01@_J@Z ; std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator+

; 5078 :             _Fill_vbool(_Dest, _Last, _Val);

	movaps	xmm2, XMMWORD PTR [r11]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2599 :         return this->_Myptr == _Right._Myptr && this->_Myoff == _Right._Myoff;

	mov	r14, QWORD PTR [rsi]
	movdqa	xmm0, xmm2
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5078 :             _Fill_vbool(_Dest, _Last, _Val);

	movzx	r15d, BYTE PTR [r15]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2599 :         return this->_Myptr == _Right._Myptr && this->_Myoff == _Right._Myoff;

	movq	r8, xmm2
	mov	rbp, QWORD PTR [rsi+8]
	psrldq	xmm0, 8
	movq	rcx, xmm0
	cmp	r8, r14
	jne	SHORT $LN18@fill_n
	cmp	rcx, rbp
	je	$LN14@fill_n
$LN18@fill_n:

; 3598 :     const auto _FillVal         = static_cast<_Vbase>(_Val ? -1 : 0);

	mov	r10d, DWORD PTR [r8]
	mov	QWORD PTR [rsp+64], rbx

; 2600 :     }
; 2601 : 
; 2602 : #if _HAS_CXX20
; 2603 :     _NODISCARD constexpr strong_ordering operator<=>(const _Vb_const_iterator& _Right) const noexcept {
; 2604 :         _Compat(_Right);
; 2605 :         if (const auto _CmpResult = this->_Myptr <=> _Right._Myptr; _CmpResult != 0) {
; 2606 :             return _CmpResult;
; 2607 :         }
; 2608 :         return this->_Myoff <=> _Right._Myoff;
; 2609 :     }
; 2610 : #else // ^^^ _HAS_CXX20 / !_HAS_CXX20 vvv
; 2611 :     _NODISCARD bool operator!=(const _Vb_const_iterator& _Right) const noexcept {
; 2612 :         return !(*this == _Right);
; 2613 :     }
; 2614 : 
; 2615 :     _NODISCARD bool operator<(const _Vb_const_iterator& _Right) const noexcept {
; 2616 :         _Compat(_Right);
; 2617 :         return this->_Myptr < _Right._Myptr || (this->_Myptr == _Right._Myptr && this->_Myoff < _Right._Myoff);
; 2618 :     }
; 2619 : 
; 2620 :     _NODISCARD bool operator>(const _Vb_const_iterator& _Right) const noexcept {
; 2621 :         return _Right < *this;
; 2622 :     }
; 2623 : 
; 2624 :     _NODISCARD bool operator<=(const _Vb_const_iterator& _Right) const noexcept {
; 2625 :         return !(_Right < *this);
; 2626 :     }
; 2627 : 
; 2628 :     _NODISCARD bool operator>=(const _Vb_const_iterator& _Right) const noexcept {
; 2629 :         return !(*this < _Right);
; 2630 :     }
; 2631 : #endif // !_HAS_CXX20
; 2632 : 
; 2633 :     _CONSTEXPR20 void _Compat(const _Vb_const_iterator& _Right) const noexcept {
; 2634 :         // test for compatible iterator pair
; 2635 : #if _ITERATOR_DEBUG_LEVEL == 0
; 2636 :         (void) _Right;
; 2637 : #else // _ITERATOR_DEBUG_LEVEL == 0
; 2638 :         _STL_VERIFY(this->_Getcont() == _Right._Getcont(), "vector<bool> iterators incompatible");
; 2639 : #endif // _ITERATOR_DEBUG_LEVEL
; 2640 :     }
; 2641 : 
; 2642 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2643 :     using _Prevent_inheriting_unwrap = _Vb_const_iterator;
; 2644 : 
; 2645 :     friend _CONSTEXPR20 void _Verify_range(const _Vb_const_iterator& _First, const _Vb_const_iterator& _Last) noexcept {
; 2646 :         // note _Compat check inside <=
; 2647 :         _STL_VERIFY(_First <= _Last, "vector<bool> iterator range transposed");
; 2648 :     }
; 2649 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2650 : 
; 2651 :     _CONSTEXPR20 void _Dec() noexcept { // decrement bit position
; 2652 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2653 :         const auto _Cont = static_cast<const _Mycont*>(this->_Getcont());
; 2654 :         _STL_VERIFY(_Cont, "cannot decrement value-initialized vector<bool> iterator");
; 2655 :         _STL_VERIFY(this->_Total_off(_Cont) > 0, "cannot decrement vector<bool> begin iterator");
; 2656 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2657 : 
; 2658 :         if (this->_Myoff != 0) {
; 2659 :             --this->_Myoff;
; 2660 :         } else { // move to previous word
; 2661 :             this->_Myoff = _VBITS - 1;
; 2662 :             --this->_Myptr;
; 2663 :         }
; 2664 :     }
; 2665 : 
; 2666 :     _CONSTEXPR20 void _Inc() noexcept { // increment bit position
; 2667 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2668 :         const auto _Cont = static_cast<const _Mycont*>(this->_Getcont());
; 2669 :         _STL_VERIFY(_Cont, "cannot increment value-initialized vector<bool> iterator");
; 2670 :         _STL_VERIFY(this->_Total_off(_Cont) < static_cast<_Difference_type>(_Cont->_Mysize),
; 2671 :             "cannot increment vector<bool> end iterator");
; 2672 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2673 : 
; 2674 :         if (this->_Myoff < _VBITS - 1) {
; 2675 :             ++this->_Myoff;
; 2676 :         } else { // move to next word
; 2677 :             this->_Myoff = 0;
; 2678 :             ++this->_Myptr;
; 2679 :         }
; 2680 :     }
; 2681 : };
; 2682 : 
; 2683 : template <class _Alvbase_wrapped>
; 2684 : class _Vb_iterator : public _Vb_const_iterator<_Alvbase_wrapped> {
; 2685 : public:
; 2686 :     using _Mybase          = _Vb_const_iterator<_Alvbase_wrapped>;
; 2687 :     using _Mycont          = typename _Mybase::_Mycont;
; 2688 :     using _Difference_type = typename _Mybase::_Difference_type;
; 2689 : 
; 2690 :     using _Reft           = _Vb_reference<_Alvbase_wrapped>;
; 2691 :     using const_reference = bool;
; 2692 : 
; 2693 :     using iterator_category = random_access_iterator_tag;
; 2694 :     using value_type        = bool;
; 2695 :     using difference_type   = typename _Mybase::difference_type;
; 2696 :     using pointer           = _Reft*;
; 2697 :     using reference         = _Reft;
; 2698 : 
; 2699 :     using _Mybase::_Mybase;
; 2700 : 
; 2701 :     _NODISCARD _CONSTEXPR20 reference operator*() const noexcept {
; 2702 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2703 :         const auto _Cont = static_cast<const _Mycont*>(this->_Getcont());
; 2704 :         _STL_VERIFY(_Cont, "cannot dereference value-initialized vector<bool> iterator");
; 2705 :         _STL_VERIFY(this->_Total_off(_Cont) < static_cast<_Difference_type>(_Cont->_Mysize),
; 2706 :             "vector<bool> iterator not dereferenceable");
; 2707 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2708 : 
; 2709 :         return _Reft(*this);
; 2710 :     }
; 2711 : 
; 2712 :     _CONSTEXPR20 _Vb_iterator& operator++() noexcept {
; 2713 :         _Mybase::operator++();
; 2714 :         return *this;
; 2715 :     }
; 2716 : 
; 2717 :     _CONSTEXPR20 _Vb_iterator operator++(int) noexcept {
; 2718 :         _Vb_iterator _Tmp = *this;
; 2719 :         _Mybase::operator++();
; 2720 :         return _Tmp;
; 2721 :     }
; 2722 : 
; 2723 :     _CONSTEXPR20 _Vb_iterator& operator--() noexcept {
; 2724 :         _Mybase::operator--();
; 2725 :         return *this;
; 2726 :     }
; 2727 : 
; 2728 :     _CONSTEXPR20 _Vb_iterator operator--(int) noexcept {
; 2729 :         _Vb_iterator _Tmp = *this;
; 2730 :         _Mybase::operator--();
; 2731 :         return _Tmp;
; 2732 :     }
; 2733 : 
; 2734 :     _CONSTEXPR20 _Vb_iterator& operator+=(const difference_type _Off) noexcept {
; 2735 :         _Mybase::operator+=(_Off);
; 2736 :         return *this;
; 2737 :     }
; 2738 : 
; 2739 :     _NODISCARD _CONSTEXPR20 _Vb_iterator operator+(const difference_type _Off) const noexcept {
; 2740 :         _Vb_iterator _Tmp = *this;
; 2741 :         _Tmp += _Off;
; 2742 :         return _Tmp;
; 2743 :     }
; 2744 : 
; 2745 :     _NODISCARD_FRIEND _CONSTEXPR20 _Vb_iterator operator+(const difference_type _Off, _Vb_iterator _Right) noexcept {
; 2746 :         _Right += _Off;
; 2747 :         return _Right;
; 2748 :     }
; 2749 : 
; 2750 :     _CONSTEXPR20 _Vb_iterator& operator-=(const difference_type _Off) noexcept {
; 2751 :         _Mybase::operator-=(_Off);
; 2752 :         return *this;
; 2753 :     }
; 2754 : 
; 2755 :     using _Mybase::operator-;
; 2756 : 
; 2757 :     _NODISCARD _CONSTEXPR20 _Vb_iterator operator-(const difference_type _Off) const noexcept {
; 2758 :         _Vb_iterator _Tmp = *this;
; 2759 :         _Tmp -= _Off;
; 2760 :         return _Tmp;
; 2761 :     }
; 2762 : 
; 2763 :     _NODISCARD _CONSTEXPR20 reference operator[](const difference_type _Off) const noexcept {
; 2764 :         return *(*this + _Off);
; 2765 :     }
; 2766 : 
; 2767 :     using _Prevent_inheriting_unwrap = _Vb_iterator;
; 2768 : };
; 2769 : 
; 2770 : template <class _Alloc>
; 2771 : class _Vb_val : public _Container_base {
; 2772 : public:
; 2773 :     using _Alvbase         = _Rebind_alloc_t<_Alloc, _Vbase>;
; 2774 :     using _Alvbase_traits  = allocator_traits<_Alvbase>;
; 2775 :     using _Vectype         = vector<_Vbase, _Alvbase>;
; 2776 :     using _Alvbase_wrapped = _Wrap_alloc<_Alvbase>;
; 2777 :     using size_type        = typename _Alvbase_traits::size_type;
; 2778 : 
; 2779 :     _CONSTEXPR20 _Vb_val() noexcept(is_nothrow_default_constructible_v<_Vectype>) : _Myvec(), _Mysize(0) {
; 2780 :         this->_Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alvbase, _Getal()));
; 2781 :     }
; 2782 : 
; 2783 :     _CONSTEXPR20 _Vb_val(const _Alloc& _Al) noexcept : _Myvec(static_cast<_Alvbase>(_Al)), _Mysize(0) {
; 2784 :         this->_Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alvbase, _Getal()));
; 2785 :     }
; 2786 : 
; 2787 :     _CONSTEXPR20 _Vb_val(size_type _Count, const bool& _Val)
; 2788 :         : _Myvec(_Nw(_Count), static_cast<_Vbase>(_Val ? -1 : 0)), _Mysize(0) {
; 2789 :         this->_Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alvbase, _Getal()));
; 2790 :     }
; 2791 : 
; 2792 :     _CONSTEXPR20 _Vb_val(size_type _Count, const bool& _Val, const _Alloc& _Al)
; 2793 :         : _Myvec(_Nw(_Count), static_cast<_Vbase>(_Val ? -1 : 0), static_cast<_Alvbase>(_Al)), _Mysize(0) {
; 2794 :         this->_Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alvbase, _Getal()));
; 2795 :     }
; 2796 : 
; 2797 :     _CONSTEXPR20 _Vb_val(const _Vb_val& _Right) : _Myvec(_Right._Myvec), _Mysize(_Right._Mysize) {
; 2798 :         this->_Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alvbase, _Getal()));
; 2799 :     }
; 2800 : 
; 2801 :     _CONSTEXPR20 _Vb_val(const _Vb_val& _Right, const _Alloc& _Al)
; 2802 :         : _Myvec(_Right._Myvec, static_cast<_Alvbase>(_Al)), _Mysize(_Right._Mysize) {
; 2803 :         this->_Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alvbase, _Getal()));
; 2804 :     }
; 2805 : 
; 2806 :     _CONSTEXPR20 _Vb_val(_Vb_val&& _Right) noexcept(is_nothrow_move_constructible_v<_Vectype>)
; 2807 :         : _Myvec(_STD move(_Right._Myvec)), _Mysize(_STD exchange(_Right._Mysize, size_type{0})) {
; 2808 :         this->_Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alvbase, _Getal()));
; 2809 :     }
; 2810 : 
; 2811 :     _CONSTEXPR20 _Vb_val(_Vb_val&& _Right, const _Alloc& _Al) noexcept(
; 2812 :         is_nothrow_constructible_v<_Vectype, _Vectype, _Alvbase>)
; 2813 :         : _Myvec(_STD move(_Right._Myvec), static_cast<_Alvbase>(_Al)), _Mysize(_Right._Mysize) {
; 2814 :         if (_Right._Myvec.empty()) {
; 2815 :             // we took _Right's buffer, so zero out size
; 2816 :             _Right._Mysize = 0;
; 2817 :         }
; 2818 : 
; 2819 :         this->_Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alvbase, _Getal()));
; 2820 :     }
; 2821 : 
; 2822 :     _CONSTEXPR20 ~_Vb_val() noexcept {
; 2823 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2824 :         this->_Orphan_all();
; 2825 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alvbase, this->_Getal());
; 2826 :         _Delete_plain_internal(_Alproxy, _STD exchange(this->_Myproxy, nullptr));
; 2827 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2828 :     }
; 2829 : 
; 2830 :     _CONSTEXPR20 _Alvbase& _Getal() noexcept {
; 2831 :         return _Myvec._Getal();
; 2832 :     }
; 2833 : 
; 2834 :     _CONSTEXPR20 const _Alvbase& _Getal() const noexcept {
; 2835 :         return _Myvec._Getal();
; 2836 :     }
; 2837 : 
; 2838 :     static _CONSTEXPR20 size_type _Nw(size_type _Count) noexcept {
; 2839 :         return (_Count + _VBITS - 1) / _VBITS;
; 2840 :     }
; 2841 : 
; 2842 :     _CONSTEXPR20 void _Emplace_back_unchecked(const _Vbase _Val) noexcept {
; 2843 :         _STL_INTERNAL_CHECK(_Myvec.size() < _Myvec.capacity());
; 2844 :         _Myvec._Emplace_back_with_unused_capacity(_Val);
; 2845 :     }
; 2846 : 
; 2847 :     _Vectype _Myvec; // base vector of words
; 2848 :     size_type _Mysize; // current length of sequence
; 2849 : };
; 2850 : 
; 2851 : template <class _Alloc>
; 2852 : class vector<bool, _Alloc> : public _Vb_val<_Alloc> {
; 2853 : public:
; 2854 :     static_assert(!_ENFORCE_MATCHING_ALLOCATORS || is_same_v<bool, typename _Alloc::value_type>,
; 2855 :         _MISMATCHED_ALLOCATOR_MESSAGE("vector<bool, Allocator>", "bool"));
; 2856 : 
; 2857 :     using _Mybase          = _Vb_val<_Alloc>;
; 2858 :     using _Alvbase_wrapped = typename _Mybase::_Alvbase_wrapped;
; 2859 :     using _Alvbase         = typename _Mybase::_Alvbase;
; 2860 :     using _Alvbase_traits  = typename _Mybase::_Alvbase_traits;
; 2861 : 
; 2862 :     using size_type       = typename _Alvbase_traits::size_type;
; 2863 :     using difference_type = typename _Alvbase_traits::difference_type;
; 2864 :     using allocator_type  = _Alloc;
; 2865 : 
; 2866 :     using reference       = _Vb_reference<_Alvbase_wrapped>;
; 2867 :     using const_reference = bool;
; 2868 :     using value_type      = bool;
; 2869 : 
; 2870 :     using _Reft          = reference;
; 2871 :     using iterator       = _Vb_iterator<_Alvbase_wrapped>;
; 2872 :     using const_iterator = _Vb_const_iterator<_Alvbase_wrapped>;
; 2873 : 
; 2874 :     using pointer                = iterator;
; 2875 :     using const_pointer          = const_iterator;
; 2876 :     using reverse_iterator       = _STD reverse_iterator<iterator>;
; 2877 :     using const_reverse_iterator = _STD reverse_iterator<const_iterator>;
; 2878 : 
; 2879 :     enum { _EEN_VBITS = _VBITS }; // helper for expression evaluator
; 2880 : 
; 2881 :     _CONSTEXPR20 vector() noexcept(is_nothrow_default_constructible_v<_Alloc>) : _Mybase(_Alloc()) {}
; 2882 : 
; 2883 :     _CONSTEXPR20 explicit vector(const _Alloc& _Al) noexcept : _Mybase(_Al) {}
; 2884 : 
; 2885 :     _CONSTEXPR20 explicit vector(_CRT_GUARDOVERFLOW size_type _Count, const _Alloc& _Al = _Alloc())
; 2886 :         : _Mybase(_Count, false, _Al) {
; 2887 :         _Trim(_Count);
; 2888 :     }
; 2889 : 
; 2890 :     _CONSTEXPR20 vector(_CRT_GUARDOVERFLOW size_type _Count, const bool& _Val, const _Alloc& _Al = _Alloc())
; 2891 :         : _Mybase(_Count, _Val, _Al) {
; 2892 :         _Trim(_Count);
; 2893 :     }
; 2894 : 
; 2895 :     _CONSTEXPR20 vector(const vector& _Right) : _Mybase(_Right) {}
; 2896 : 
; 2897 :     _CONSTEXPR20 vector(const vector& _Right, const _Identity_t<_Alloc>& _Al) : _Mybase(_Right, _Al) {}
; 2898 : 
; 2899 :     template <class _Iter, enable_if_t<_Is_iterator_v<_Iter>, int> = 0>
; 2900 :     _CONSTEXPR20 vector(_Iter _First, _Iter _Last, const _Alloc& _Al = _Alloc()) : _Mybase(_Al) {
; 2901 :         insert(begin(), _First, _Last);
; 2902 :     }
; 2903 : 
; 2904 : #if _HAS_CXX23 && defined(__cpp_lib_concepts) // TRANSITION, GH-395
; 2905 :     template <_Container_compatible_range<bool> _Rng>
; 2906 :     constexpr vector(from_range_t, _Rng&& _Range, const _Alloc& _Al = _Alloc()) : _Mybase(_Al) {
; 2907 :         if constexpr (_RANGES forward_range<_Rng> || _RANGES sized_range<_Rng>) {
; 2908 :             const auto _Length = _To_unsigned_like(_RANGES distance(_Range));
; 2909 :             const auto _Count  = _Convert_size<size_type>(_Length);
; 2910 :             _Assign_counted_range(_RANGES _Ubegin(_Range), _Count);
; 2911 :         } else {
; 2912 :             _Assign_uncounted_range(_RANGES _Ubegin(_Range), _RANGES _Uend(_Range));
; 2913 :         }
; 2914 :     }
; 2915 : #endif // _HAS_CXX23 && defined(__cpp_lib_concepts)
; 2916 : 
; 2917 :     _CONSTEXPR20 vector(vector&& _Right) noexcept : _Mybase(_STD move(_Right)) {
; 2918 :         this->_Swap_proxy_and_iterators(_Right);
; 2919 :     }
; 2920 : 
; 2921 :     _CONSTEXPR20 vector(vector&& _Right, const _Identity_t<_Alloc>& _Al) noexcept(
; 2922 :         is_nothrow_constructible_v<_Mybase, _Mybase, const _Alloc&>) // strengthened
; 2923 :         : _Mybase(_STD move(_Right), _Al) {
; 2924 :         if constexpr (!_Alvbase_traits::is_always_equal::value) {
; 2925 :             if (this->_Getal() != _Right._Getal()) {
; 2926 :                 return;
; 2927 :             }
; 2928 :         }
; 2929 : 
; 2930 :         this->_Swap_proxy_and_iterators(_Right);
; 2931 :     }
; 2932 : 
; 2933 :     _CONSTEXPR20 vector& operator=(vector&& _Right) noexcept(
; 2934 :         _Choose_pocma_v<_Alvbase> != _Pocma_values::_No_propagate_allocators) {
; 2935 :         if (this == _STD addressof(_Right)) {
; 2936 :             return *this;
; 2937 :         }
; 2938 : 
; 2939 : #if _ITERATOR_DEBUG_LEVEL == 0
; 2940 :         this->_Myvec  = _STD move(_Right._Myvec);
; 2941 :         this->_Mysize = _STD exchange(_Right._Mysize, size_type{0});
; 2942 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 0 / _ITERATOR_DEBUG_LEVEL != 0 vvv
; 2943 :         this->_Orphan_all();
; 2944 :         auto& _Al                 = this->_Getal();
; 2945 :         auto& _Right_al           = _Right._Getal();
; 2946 :         constexpr auto _Pocma_val = _Choose_pocma_v<_Alvbase>;
; 2947 :         if constexpr (_Pocma_val == _Pocma_values::_Propagate_allocators) {
; 2948 :             using _Alproxy_type = _Rebind_alloc_t<_Alvbase, _Container_proxy>;
; 2949 :             if (_Al != _Right_al) { // reload proxy
; 2950 :                 // intentionally slams into noexcept on OOM, TRANSITION, VSO-466800
; 2951 :                 _Alproxy_type _Oldal(_Al);
; 2952 :                 _Alproxy_type _Right_proxy_al(_Right_al);
; 2953 :                 _Container_proxy_ptr<_Alvbase> _Proxy(_Right_proxy_al, _Leave_proxy_unbound{});
; 2954 :                 this->_Myvec  = _STD move(_Right._Myvec);
; 2955 :                 this->_Mysize = _STD exchange(_Right._Mysize, size_type{0});
; 2956 :                 _Proxy._Bind(_Oldal, this);
; 2957 :                 this->_Swap_proxy_and_iterators(_Right);
; 2958 :                 return *this;
; 2959 :             }
; 2960 :         } else if constexpr (_Pocma_val == _Pocma_values::_No_propagate_allocators) {
; 2961 :             this->_Myvec  = _STD move(_Right._Myvec);
; 2962 :             this->_Mysize = _Right._Mysize;
; 2963 :             if (_Right._Myvec.empty()) {
; 2964 :                 // we took _Right's buffer, so zero out size
; 2965 :                 _Right._Mysize = 0;
; 2966 :             }
; 2967 : 
; 2968 :             if (_Al == _Right_al) {
; 2969 :                 this->_Swap_proxy_and_iterators(_Right);
; 2970 :             }
; 2971 :             return *this;
; 2972 :         }
; 2973 : 
; 2974 :         this->_Myvec  = _STD move(_Right._Myvec);
; 2975 :         this->_Mysize = _STD exchange(_Right._Mysize, size_type{0});
; 2976 :         this->_Swap_proxy_and_iterators(_Right);
; 2977 : 
; 2978 : #endif // _ITERATOR_DEBUG_LEVEL == 0
; 2979 :         return *this;
; 2980 :     }
; 2981 : 
; 2982 :     template <class... _Valty>
; 2983 :     _CONSTEXPR20 decltype(auto) emplace_back(_Valty&&... _Val) {
; 2984 :         bool _Tmp(_STD forward<_Valty>(_Val)...);
; 2985 :         push_back(_Tmp);
; 2986 : 
; 2987 : #if _HAS_CXX17
; 2988 :         return back();
; 2989 : #endif // _HAS_CXX17
; 2990 :     }
; 2991 : 
; 2992 :     template <class... _Valty>
; 2993 :     _CONSTEXPR20 iterator emplace(const_iterator _Where, _Valty&&... _Val) {
; 2994 :         bool _Tmp(_STD forward<_Valty>(_Val)...);
; 2995 :         return insert(_Where, _Tmp);
; 2996 :     }
; 2997 : 
; 2998 :     _CONSTEXPR20 vector(initializer_list<bool> _Ilist, const _Alloc& _Al = allocator_type()) : _Mybase(0, false, _Al) {
; 2999 :         insert(begin(), _Ilist.begin(), _Ilist.end());
; 3000 :     }
; 3001 : 
; 3002 :     _CONSTEXPR20 vector& operator=(initializer_list<bool> _Ilist) {
; 3003 :         assign(_Ilist.begin(), _Ilist.end());
; 3004 :         return *this;
; 3005 :     }
; 3006 : 
; 3007 :     _CONSTEXPR20 void assign(initializer_list<bool> _Ilist) {
; 3008 :         assign(_Ilist.begin(), _Ilist.end());
; 3009 :     }
; 3010 : 
; 3011 :     _CONSTEXPR20 iterator insert(const_iterator _Where, initializer_list<bool> _Ilist) {
; 3012 :         return insert(_Where, _Ilist.begin(), _Ilist.end());
; 3013 :     }
; 3014 : 
; 3015 :     _CONSTEXPR20 ~vector() noexcept {}
; 3016 : 
; 3017 :     _CONSTEXPR20 vector& operator=(const vector& _Right) {
; 3018 :         if (this == _STD addressof(_Right)) {
; 3019 :             return *this;
; 3020 :         }
; 3021 : 
; 3022 : #if _ITERATOR_DEBUG_LEVEL == 0
; 3023 :         this->_Myvec  = _Right._Myvec;
; 3024 :         this->_Mysize = _Right._Mysize;
; 3025 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 0 / _ITERATOR_DEBUG_LEVEL != 0 vvv
; 3026 :         this->_Orphan_all();
; 3027 :         auto& _Al       = this->_Getal();
; 3028 :         auto& _Right_al = _Right._Getal();
; 3029 :         if constexpr (_Choose_pocca_v<_Alvbase>) {
; 3030 :             if (_Al != _Right_al) {
; 3031 :                 // reload proxy
; 3032 :                 using _Alproxy_type = _Rebind_alloc_t<_Alvbase, _Container_proxy>;
; 3033 :                 _Alproxy_type _Oldal(_Al);
; 3034 :                 _Alproxy_type _Right_proxy_al(_Right_al);
; 3035 :                 _Container_proxy_ptr<_Alvbase> _Proxy(_Right_proxy_al, _Leave_proxy_unbound{});
; 3036 :                 this->_Myvec  = _Right._Myvec;
; 3037 :                 this->_Mysize = _Right._Mysize;
; 3038 :                 _Proxy._Bind(_Oldal, this);
; 3039 :                 return *this;
; 3040 :             }
; 3041 :         }
; 3042 : 
; 3043 :         this->_Myvec  = _Right._Myvec;
; 3044 :         this->_Mysize = _Right._Mysize;
; 3045 : #endif // _ITERATOR_DEBUG_LEVEL == 0
; 3046 : 
; 3047 :         return *this;
; 3048 :     }
; 3049 : 
; 3050 :     _CONSTEXPR20 void reserve(_CRT_GUARDOVERFLOW size_type _Count) {
; 3051 :         this->_Myvec.reserve(this->_Nw(_Count));
; 3052 :     }
; 3053 : 
; 3054 :     _NODISCARD _CONSTEXPR20 size_type capacity() const noexcept {
; 3055 :         return this->_Myvec.capacity() * _VBITS;
; 3056 :     }
; 3057 : 
; 3058 :     _NODISCARD _CONSTEXPR20 iterator begin() noexcept {
; 3059 :         return iterator(this->_Myvec.data(), this);
; 3060 :     }
; 3061 : 
; 3062 :     _NODISCARD _CONSTEXPR20 const_iterator begin() const noexcept {
; 3063 :         return const_iterator(this->_Myvec.data(), this);
; 3064 :     }
; 3065 : 
; 3066 :     _NODISCARD _CONSTEXPR20 iterator end() noexcept {
; 3067 :         return begin() + static_cast<difference_type>(this->_Mysize);
; 3068 :     }
; 3069 : 
; 3070 :     _NODISCARD _CONSTEXPR20 const_iterator end() const noexcept {
; 3071 :         return begin() + static_cast<difference_type>(this->_Mysize);
; 3072 :     }
; 3073 : 
; 3074 :     _NODISCARD _CONSTEXPR20 const_iterator cbegin() const noexcept {
; 3075 :         return begin();
; 3076 :     }
; 3077 : 
; 3078 :     _NODISCARD _CONSTEXPR20 const_iterator cend() const noexcept {
; 3079 :         return end();
; 3080 :     }
; 3081 : 
; 3082 :     _NODISCARD _CONSTEXPR20 const_reverse_iterator crbegin() const noexcept {
; 3083 :         return rbegin();
; 3084 :     }
; 3085 : 
; 3086 :     _NODISCARD _CONSTEXPR20 const_reverse_iterator crend() const noexcept {
; 3087 :         return rend();
; 3088 :     }
; 3089 : 
; 3090 :     _NODISCARD _CONSTEXPR20 iterator _Unchecked_begin() noexcept {
; 3091 :         return iterator(this->_Myvec.data(), this);
; 3092 :     }
; 3093 : 
; 3094 :     _NODISCARD _CONSTEXPR20 const_iterator _Unchecked_begin() const noexcept {
; 3095 :         return const_iterator(this->_Myvec.data(), this);
; 3096 :     }
; 3097 : 
; 3098 :     _NODISCARD _CONSTEXPR20 iterator _Unchecked_end() noexcept {
; 3099 :         return _Unchecked_begin() + static_cast<difference_type>(this->_Mysize);
; 3100 :     }
; 3101 : 
; 3102 :     _NODISCARD _CONSTEXPR20 const_iterator _Unchecked_end() const noexcept {
; 3103 :         return _Unchecked_begin() + static_cast<difference_type>(this->_Mysize);
; 3104 :     }
; 3105 : 
; 3106 :     _CONSTEXPR20 void shrink_to_fit() {
; 3107 :         if (this->_Myvec.capacity() != this->_Myvec.size()) {
; 3108 :             this->_Orphan_all();
; 3109 :             this->_Myvec.shrink_to_fit();
; 3110 :         }
; 3111 :     }
; 3112 : 
; 3113 :     _CONSTEXPR20 iterator _Make_iter(const_iterator _Where) noexcept {
; 3114 :         iterator _Tmp = begin();
; 3115 :         if (0 < this->_Mysize) {
; 3116 :             _Tmp += _Where - begin();
; 3117 :         }
; 3118 : 
; 3119 :         return _Tmp;
; 3120 :     }
; 3121 : 
; 3122 :     _NODISCARD _CONSTEXPR20 reverse_iterator rbegin() noexcept {
; 3123 :         return reverse_iterator(end());
; 3124 :     }
; 3125 : 
; 3126 :     _NODISCARD _CONSTEXPR20 const_reverse_iterator rbegin() const noexcept {
; 3127 :         return const_reverse_iterator(end());
; 3128 :     }
; 3129 : 
; 3130 :     _NODISCARD _CONSTEXPR20 reverse_iterator rend() noexcept {
; 3131 :         return reverse_iterator(begin());
; 3132 :     }
; 3133 : 
; 3134 :     _NODISCARD _CONSTEXPR20 const_reverse_iterator rend() const noexcept {
; 3135 :         return const_reverse_iterator(begin());
; 3136 :     }
; 3137 : 
; 3138 :     _CONSTEXPR20 void resize(_CRT_GUARDOVERFLOW size_type _Newsize, bool _Val = false) {
; 3139 :         if (size() < _Newsize) {
; 3140 :             _Insert_n(end(), _Newsize - size(), _Val);
; 3141 :         } else if (_Newsize < size()) {
; 3142 :             erase(begin() + static_cast<difference_type>(_Newsize), end());
; 3143 :         }
; 3144 :     }
; 3145 : 
; 3146 :     _NODISCARD _CONSTEXPR20 size_type size() const noexcept {
; 3147 :         return this->_Mysize;
; 3148 :     }
; 3149 : 
; 3150 :     _NODISCARD _CONSTEXPR20 size_type max_size() const noexcept {
; 3151 :         constexpr auto _Diff_max  = static_cast<size_type>((numeric_limits<difference_type>::max)());
; 3152 :         const size_type _Ints_max = this->_Myvec.max_size();
; 3153 :         if (_Ints_max > _Diff_max / _VBITS) { // max_size bound by difference_type limits
; 3154 :             return _Diff_max;
; 3155 :         }
; 3156 : 
; 3157 :         // max_size bound by underlying storage limits
; 3158 :         return _Ints_max * _VBITS;
; 3159 :     }
; 3160 : 
; 3161 :     _NODISCARD_EMPTY_MEMBER _CONSTEXPR20 bool empty() const noexcept {
; 3162 :         return this->_Mysize == 0;
; 3163 :     }
; 3164 : 
; 3165 :     _NODISCARD _CONSTEXPR20 allocator_type get_allocator() const noexcept {
; 3166 :         return static_cast<allocator_type>(this->_Myvec.get_allocator());
; 3167 :     }
; 3168 : 
; 3169 :     _NODISCARD _CONSTEXPR20 const_reference at(size_type _Off) const {
; 3170 :         if (size() <= _Off) {
; 3171 :             _Xran();
; 3172 :         }
; 3173 : 
; 3174 :         return (*this)[_Off];
; 3175 :     }
; 3176 : 
; 3177 :     _NODISCARD _CONSTEXPR20 reference at(size_type _Off) {
; 3178 :         if (size() <= _Off) {
; 3179 :             _Xran();
; 3180 :         }
; 3181 : 
; 3182 :         return (*this)[_Off];
; 3183 :     }
; 3184 : 
; 3185 :     _NODISCARD _CONSTEXPR20 const_reference operator[](size_type _Off) const noexcept /* strengthened */ {
; 3186 : #if _CONTAINER_DEBUG_LEVEL > 0
; 3187 :         _STL_VERIFY(_Off < this->_Mysize, "vector<bool> subscript out of range");
; 3188 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 3189 : 
; 3190 :         const_iterator _It = begin();
; 3191 :         _It._Advance(_Off);
; 3192 :         return *_It;
; 3193 :     }
; 3194 : 
; 3195 :     _NODISCARD _CONSTEXPR20 reference operator[](size_type _Off) noexcept /* strengthened */ {
; 3196 : #if _CONTAINER_DEBUG_LEVEL > 0
; 3197 :         _STL_VERIFY(_Off < this->_Mysize, "vector<bool> subscript out of range");
; 3198 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 3199 : 
; 3200 :         iterator _It = begin();
; 3201 :         _It._Advance(_Off);
; 3202 :         return *_It;
; 3203 :     }
; 3204 : 
; 3205 :     _NODISCARD _CONSTEXPR20 reference front() noexcept /* strengthened */ {
; 3206 : #if _CONTAINER_DEBUG_LEVEL > 0
; 3207 :         _STL_VERIFY(this->_Mysize != 0, "front() called on empty vector<bool>");
; 3208 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 3209 : 
; 3210 :         return *begin();
; 3211 :     }
; 3212 : 
; 3213 :     _NODISCARD _CONSTEXPR20 const_reference front() const noexcept /* strengthened */ {
; 3214 : #if _CONTAINER_DEBUG_LEVEL > 0
; 3215 :         _STL_VERIFY(this->_Mysize != 0, "front() called on empty vector<bool>");
; 3216 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 3217 : 
; 3218 :         return *begin();
; 3219 :     }
; 3220 : 
; 3221 :     _NODISCARD _CONSTEXPR20 reference back() noexcept /* strengthened */ {
; 3222 : #if _CONTAINER_DEBUG_LEVEL > 0
; 3223 :         _STL_VERIFY(this->_Mysize != 0, "back() called on empty vector<bool>");
; 3224 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 3225 : 
; 3226 :         return *(end() - 1);
; 3227 :     }
; 3228 : 
; 3229 :     _NODISCARD _CONSTEXPR20 const_reference back() const noexcept /* strengthened */ {
; 3230 : #if _CONTAINER_DEBUG_LEVEL > 0
; 3231 :         _STL_VERIFY(this->_Mysize != 0, "back() called on empty vector<bool>");
; 3232 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 3233 : 
; 3234 :         return *(end() - 1);
; 3235 :     }
; 3236 : 
; 3237 :     _CONSTEXPR20 void push_back(const bool& _Val) {
; 3238 :         insert(end(), _Val);
; 3239 :     }
; 3240 : 
; 3241 : #if _HAS_CXX23 && defined(__cpp_lib_concepts) // TRANSITION, GH-395
; 3242 :     template <_Container_compatible_range<bool> _Rng>
; 3243 :     constexpr void append_range(_Rng&& _Range) {
; 3244 :         insert_range(end(), _STD forward<_Rng>(_Range));
; 3245 :     }
; 3246 : #endif // _HAS_CXX23 && defined(__cpp_lib_concepts)
; 3247 : 
; 3248 :     _CONSTEXPR20 void pop_back() noexcept /* strengthened */ {
; 3249 :         erase(end() - 1);
; 3250 :     }
; 3251 : 
; 3252 :     template <class _Iter, enable_if_t<_Is_iterator_v<_Iter>, int> = 0>
; 3253 :     _CONSTEXPR20 void assign(_Iter _First, _Iter _Last) {
; 3254 :         clear();
; 3255 :         insert(begin(), _First, _Last);
; 3256 :     }
; 3257 : 
; 3258 : #if _HAS_CXX23 && defined(__cpp_lib_concepts) // TRANSITION, GH-395
; 3259 :     template <class _Iter>
; 3260 :     constexpr void _Assign_counted_range(_Iter _First, const size_type _Count) {
; 3261 :         _STL_INTERNAL_CHECK(this->_Myvec.empty());
; 3262 :         this->_Myvec.reserve(this->_Nw(_Count));
; 3263 :         _Vbase _Accum = 0;
; 3264 :         _Vbase _Mask  = 1;
; 3265 :         for (size_type _Idx = 0; _Idx < _Count; ++_Idx) {
; 3266 :             const bool _Tmp = *_First;
; 3267 :             ++_First;
; 3268 :             _Accum |= _Tmp ? _Mask : _Vbase{0};
; 3269 :             if ((_Mask <<= 1) == 0) {
; 3270 :                 this->_Emplace_back_unchecked(_Accum);
; 3271 :                 _Accum = 0;
; 3272 :                 _Mask  = 1;
; 3273 :             }
; 3274 :         }
; 3275 : 
; 3276 :         if (_Count % _VBITS != 0) {
; 3277 :             this->_Emplace_back_unchecked(_Accum);
; 3278 :         }
; 3279 :         this->_Mysize = _Count;
; 3280 :     }
; 3281 : 
; 3282 :     template <class _Iter, class _Sent>
; 3283 :     constexpr void _Assign_uncounted_range(_Iter _First, const _Sent _Last) {
; 3284 :         _STL_INTERNAL_CHECK(this->_Myvec.empty());
; 3285 :         size_type _Count = 0;
; 3286 :         _Vbase _Accum    = 0;
; 3287 :         _Vbase _Mask     = 1;
; 3288 :         for (; _First != _Last; ++_Count) {
; 3289 :             const bool _Tmp = *_First;
; 3290 :             ++_First;
; 3291 :             _Accum |= _Tmp ? _Mask : _Vbase{0};
; 3292 :             if ((_Mask <<= 1) == 0) {
; 3293 :                 this->_Myvec.push_back(_Accum);
; 3294 :                 _Accum = 0;
; 3295 :                 _Mask  = 1;
; 3296 :             }
; 3297 :         }
; 3298 : 
; 3299 :         if (_Count % _VBITS != 0) {
; 3300 :             this->_Myvec.push_back(_Accum);
; 3301 :         }
; 3302 :         this->_Mysize = _Count;
; 3303 :     }
; 3304 : 
; 3305 :     template <_Container_compatible_range<bool> _Rng>
; 3306 :     constexpr void assign_range(_Rng&& _Range) {
; 3307 :         clear();
; 3308 :         if constexpr (_RANGES forward_range<_Rng> || _RANGES sized_range<_Rng>) {
; 3309 :             const auto _Length = _To_unsigned_like(_RANGES distance(_Range));
; 3310 :             const auto _Count  = _Convert_size<size_type>(_Length);
; 3311 :             _Assign_counted_range(_RANGES _Ubegin(_Range), _Count);
; 3312 :         } else {
; 3313 :             _Assign_uncounted_range(_RANGES _Ubegin(_Range), _RANGES _Uend(_Range));
; 3314 :         }
; 3315 :     }
; 3316 : #endif // _HAS_CXX23 && defined(__cpp_lib_concepts)
; 3317 : 
; 3318 :     _CONSTEXPR20 void assign(_CRT_GUARDOVERFLOW size_type _Count, const bool& _Val) {
; 3319 :         clear();
; 3320 :         _Insert_n(begin(), _Count, _Val);
; 3321 :     }
; 3322 : 
; 3323 :     _CONSTEXPR20 iterator insert(const_iterator _Where, const bool& _Val) {
; 3324 :         return _Insert_n(_Where, size_type{1}, _Val);
; 3325 :     }
; 3326 : 
; 3327 :     _CONSTEXPR20 iterator insert(const_iterator _Where, _CRT_GUARDOVERFLOW size_type _Count, const bool& _Val) {
; 3328 :         return _Insert_n(_Where, _Count, _Val);
; 3329 :     }
; 3330 : 
; 3331 :     template <class _Iter, enable_if_t<_Is_iterator_v<_Iter>, int> = 0>
; 3332 :     _CONSTEXPR20 iterator insert(const_iterator _Where, _Iter _First, _Iter _Last) {
; 3333 :         const difference_type _Saved_offset = _Where - begin();
; 3334 :         _Adl_verify_range(_First, _Last);
; 3335 :         auto _UFirst      = _Get_unwrapped(_First);
; 3336 :         const auto _ULast = _Get_unwrapped(_Last);
; 3337 : 
; 3338 :         if constexpr (_Is_cpp17_fwd_iter_v<_Iter>) {
; 3339 :             const auto _Length = static_cast<size_t>(_STD distance(_UFirst, _ULast));
; 3340 :             const auto _Count  = _Convert_size<size_type>(_Length);
; 3341 :             const auto _Off    = static_cast<difference_type>(_Insert_x(_Where, _Count));
; 3342 :             _STD _Copy_unchecked(_UFirst, _ULast, begin() + _Off);
; 3343 : #ifdef __cpp_lib_concepts
; 3344 :         } else if constexpr (forward_iterator<_Iter>) {
; 3345 :             const auto _Length = _To_unsigned_like(_RANGES distance(_UFirst, _ULast));
; 3346 :             const auto _Count  = _Convert_size<size_type>(_Length);
; 3347 :             const auto _Off    = static_cast<difference_type>(_Insert_x(_Where, _Count));
; 3348 :             _STD _Copy_unchecked(_UFirst, _ULast, begin() + _Off);
; 3349 : #endif // __cpp_lib_concepts
; 3350 :         } else {
; 3351 :             const auto _Old_size = this->_Mysize;
; 3352 :             for (; _UFirst != _ULast; ++_UFirst) {
; 3353 :                 emplace_back(*_UFirst);
; 3354 :             }
; 3355 : #if _ITERATOR_DEBUG_LEVEL == 2
; 3356 :             _Orphan_range(static_cast<size_type>(_Saved_offset), _Old_size);
; 3357 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 3358 :             _STD rotate(begin() + _Saved_offset, begin() + static_cast<difference_type>(_Old_size), end());
; 3359 :         }
; 3360 : 
; 3361 :         return begin() + _Saved_offset;
; 3362 :     }
; 3363 : 
; 3364 : #if _HAS_CXX23 && defined(__cpp_lib_concepts) // TRANSITION, GH-395
; 3365 :     template <_Container_compatible_range<bool> _Rng>
; 3366 :     constexpr iterator insert_range(const_iterator _Where, _Rng&& _Range) {
; 3367 :         const difference_type _Old_off = _Where - begin();
; 3368 : 
; 3369 :         if constexpr (_RANGES forward_range<_Rng> || _RANGES sized_range<_Rng>) {
; 3370 :             const auto _Length = _To_unsigned_like(_RANGES distance(_Range));
; 3371 :             const auto _Count  = _Convert_size<size_type>(_Length);
; 3372 :             const auto _Off    = static_cast<difference_type>(_Insert_x(_Where, _Count));
; 3373 :             _Copy_n_unchecked4(_RANGES _Ubegin(_Range), _Count, begin() + _Off);
; 3374 :         } else {
; 3375 :             auto _UFirst         = _RANGES _Ubegin(_Range);
; 3376 :             const auto _ULast    = _RANGES _Uend(_Range);
; 3377 :             const auto _Old_size = this->_Mysize;
; 3378 :             for (; _UFirst != _ULast; ++_UFirst) {
; 3379 :                 emplace_back(*_UFirst);
; 3380 :             }
; 3381 : #if _ITERATOR_DEBUG_LEVEL == 2
; 3382 :             _Orphan_range(static_cast<size_type>(_Old_off), _Old_size);
; 3383 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 3384 :             _STD rotate(begin() + _Old_off, begin() + static_cast<difference_type>(_Old_size), end());
; 3385 :         }
; 3386 : 
; 3387 :         return begin() + _Old_off;
; 3388 :     }
; 3389 : #endif // _HAS_CXX23 && defined(__cpp_lib_concepts)
; 3390 : 
; 3391 :     _CONSTEXPR20 iterator erase(const_iterator _Where_arg) noexcept /* strengthened */ {
; 3392 :         iterator _Where      = _Make_iter(_Where_arg);
; 3393 :         difference_type _Off = _Where - begin();
; 3394 : 
; 3395 : #if _ITERATOR_DEBUG_LEVEL == 2
; 3396 :         _STL_VERIFY(end() > _Where, "vector<bool> erase iterator outside range");
; 3397 :         _STD copy(_Next_iter(_Where), end(), _Where);
; 3398 :         _Orphan_range(static_cast<size_type>(_Off), this->_Mysize);
; 3399 : 
; 3400 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 3401 :         _STD copy(_Next_iter(_Where), end(), _Where);
; 3402 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 3403 : 
; 3404 :         _Trim(this->_Mysize - 1);
; 3405 :         return begin() + _Off;
; 3406 :     }
; 3407 : 
; 3408 :     _CONSTEXPR20 iterator erase(const_iterator _First_arg, const_iterator _Last_arg) noexcept
; 3409 :     /* strengthened */ {
; 3410 :         iterator _First      = _Make_iter(_First_arg);
; 3411 :         iterator _Last       = _Make_iter(_Last_arg);
; 3412 :         difference_type _Off = _First - begin();
; 3413 : 
; 3414 :         if (_First != _Last) { // worth doing, copy down over hole
; 3415 : #if _ITERATOR_DEBUG_LEVEL == 2
; 3416 :             _STL_VERIFY(_Last >= _First && end() >= _Last, "vector<bool> erase iterator outside range");
; 3417 :             iterator _Next      = _STD copy(_Last, end(), _First);
; 3418 :             const auto _Newsize = static_cast<size_type>(_Next - begin());
; 3419 :             _Orphan_range(_Newsize, this->_Mysize);
; 3420 :             _Trim(_Newsize);
; 3421 : 
; 3422 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 3423 :             iterator _Next = _STD copy(_Last, end(), _First);
; 3424 :             _Trim(static_cast<size_type>(_Next - begin()));
; 3425 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 3426 :         }
; 3427 :         return begin() + _Off;
; 3428 :     }
; 3429 : 
; 3430 :     _CONSTEXPR20 void clear() noexcept {
; 3431 :         this->_Orphan_all();
; 3432 :         this->_Myvec.clear();
; 3433 :         this->_Mysize = 0;
; 3434 :     }
; 3435 : 
; 3436 :     _CONSTEXPR20 void flip() noexcept { // toggle all elements
; 3437 :         for (auto& _Elem : this->_Myvec) {
; 3438 :             _Elem = ~_Elem;
; 3439 :         }
; 3440 : 
; 3441 :         _Trim(this->_Mysize);
; 3442 :     }
; 3443 : 
; 3444 :     _CONSTEXPR20 void swap(vector& _Right) noexcept /* strengthened */ {
; 3445 :         if (this != _STD addressof(_Right)) {
; 3446 :             this->_Swap_proxy_and_iterators(_Right);
; 3447 :             this->_Myvec.swap(_Right._Myvec);
; 3448 :             _STD swap(this->_Mysize, _Right._Mysize);
; 3449 :         }
; 3450 :     }
; 3451 : 
; 3452 :     static _CONSTEXPR20 void swap(reference _Left, reference _Right) noexcept {
; 3453 :         bool _Val = _Left; // NOT _STD swap
; 3454 :         _Left     = _Right;
; 3455 :         _Right    = _Val;
; 3456 :     }
; 3457 : 
; 3458 :     friend hash<vector<bool, _Alloc>>;
; 3459 : 
; 3460 :     _CONSTEXPR20 iterator _Insert_n(const_iterator _Where, size_type _Count, const bool& _Val) {
; 3461 :         size_type _Off     = _Insert_x(_Where, _Count);
; 3462 :         const auto _Result = begin() + static_cast<difference_type>(_Off);
; 3463 :         _STD fill_n(_Result, _Count, _Val);
; 3464 :         return _Result;
; 3465 :     }
; 3466 : 
; 3467 :     _CONSTEXPR20 size_type _Insert_x(const_iterator _Where, size_type _Count) {
; 3468 :         const difference_type _Off = _Where - begin();
; 3469 : 
; 3470 : #if _ITERATOR_DEBUG_LEVEL == 2
; 3471 :         _STL_VERIFY(end() >= _Where, "vector<bool> insert iterator outside range");
; 3472 :         const bool _Realloc = capacity() - size() < _Count;
; 3473 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 3474 : 
; 3475 :         if (_Count != 0) {
; 3476 :             if (max_size() - size() < _Count) {
; 3477 :                 _Xlen(); // result too long
; 3478 :             }
; 3479 : 
; 3480 : #if _ITERATOR_DEBUG_LEVEL == 2
; 3481 :             _Orphan_range(static_cast<size_type>(_Realloc ? 0 : _Off), this->_Mysize);
; 3482 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 3483 :             this->_Myvec.resize(this->_Nw(size() + _Count), 0);
; 3484 :             if (empty()) {
; 3485 :                 this->_Mysize += _Count;
; 3486 :             } else { // make room and copy down suffix
; 3487 :                 iterator _Oldend = end();
; 3488 :                 this->_Mysize += _Count;
; 3489 :                 _STD copy_backward(begin() + _Off, _Oldend, end());
; 3490 :             }
; 3491 :         }
; 3492 : 
; 3493 :         return static_cast<size_type>(_Off);
; 3494 :     }
; 3495 : 
; 3496 : #if _ITERATOR_DEBUG_LEVEL == 2
; 3497 :     _CONSTEXPR20 void _Orphan_range_unlocked(size_type _Offlo, size_type _Offhi) const {
; 3498 :         const auto _Base = this->_Myvec.data();
; 3499 : 
; 3500 :         _Iterator_base12** _Pnext = &this->_Myproxy->_Myfirstiter;
; 3501 :         while (*_Pnext) { // test offset from beginning of vector
; 3502 :             const auto& _Pnextiter = static_cast<const_iterator&>(**_Pnext);
; 3503 :             const auto _Temp       = *_Pnext;
; 3504 :             if (!_Pnextiter._Myptr) { // orphan the iterator
; 3505 :                 _Temp->_Myproxy = nullptr;
; 3506 :                 *_Pnext         = _Temp->_Mynextiter;
; 3507 :                 continue;
; 3508 :             }
; 3509 :             const auto _Off =
; 3510 :                 static_cast<size_type>(const_iterator::_VBITS_DIFF * (_Pnextiter._Myptr - _Base)) + _Pnextiter._Myoff;
; 3511 :             if (_Off < _Offlo || _Offhi < _Off) {
; 3512 :                 _Pnext = &_Temp->_Mynextiter;
; 3513 :             } else { // orphan the iterator
; 3514 :                 _Temp->_Myproxy = nullptr;
; 3515 :                 *_Pnext         = _Temp->_Mynextiter;
; 3516 :             }
; 3517 :         }
; 3518 :     }
; 3519 : 
; 3520 :     void _Orphan_range_locked(size_type _Offlo, size_type _Offhi) const {
; 3521 :         _Lockit _Lock(_LOCK_DEBUG);
; 3522 :         _Orphan_range_unlocked(_Offlo, _Offhi);
; 3523 :     }
; 3524 : 
; 3525 :     _CONSTEXPR20 void _Orphan_range(size_type _Offlo, size_type _Offhi) const {
; 3526 : #if _HAS_CXX20
; 3527 :         if (_STD is_constant_evaluated()) {
; 3528 :             _Orphan_range_unlocked(_Offlo, _Offhi);
; 3529 :         } else
; 3530 : #endif // _HAS_CXX20
; 3531 :         {
; 3532 :             _Orphan_range_locked(_Offlo, _Offhi);
; 3533 :         }
; 3534 :     }
; 3535 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 3536 : 
; 3537 :     _CONSTEXPR20 void _Trim(size_type _Size) {
; 3538 :         if (max_size() < _Size) {
; 3539 :             _Xlen(); // result too long
; 3540 :         }
; 3541 : 
; 3542 :         const size_type _Words = this->_Nw(_Size);
; 3543 :         if (_Words < this->_Myvec.size()) {
; 3544 :             this->_Myvec.erase(this->_Myvec.begin() + static_cast<difference_type>(_Words), this->_Myvec.end());
; 3545 :         }
; 3546 : 
; 3547 :         this->_Mysize = _Size;
; 3548 :         _Size %= _VBITS;
; 3549 :         if (0 < _Size) {
; 3550 :             this->_Myvec[_Words - 1] &= (static_cast<_Vbase>(1) << _Size) - 1;
; 3551 :         }
; 3552 :     }
; 3553 : 
; 3554 :     [[noreturn]] void _Xlen() const {
; 3555 :         _Xlength_error("vector<bool> too long");
; 3556 :     }
; 3557 : 
; 3558 :     [[noreturn]] void _Xran() const {
; 3559 :         _Xout_of_range("invalid vector<bool> subscript");
; 3560 :     }
; 3561 : };
; 3562 : 
; 3563 : template <class _Alloc>
; 3564 : struct hash<vector<bool, _Alloc>> {
; 3565 :     using _ARGUMENT_TYPE_NAME _CXX17_DEPRECATE_ADAPTOR_TYPEDEFS = vector<bool, _Alloc>;
; 3566 :     using _RESULT_TYPE_NAME _CXX17_DEPRECATE_ADAPTOR_TYPEDEFS   = size_t;
; 3567 : 
; 3568 :     _NODISCARD size_t operator()(const vector<bool, _Alloc>& _Keyval) const noexcept {
; 3569 :         return _Hash_array_representation(_Keyval._Myvec.data(), _Keyval._Myvec.size());
; 3570 :     }
; 3571 : };
; 3572 : 
; 3573 : #if _HAS_CXX17
; 3574 : namespace pmr {
; 3575 :     _EXPORT_STD template <class _Ty>
; 3576 :     using vector = _STD vector<_Ty, polymorphic_allocator<_Ty>>;
; 3577 : } // namespace pmr
; 3578 : #endif // _HAS_CXX17
; 3579 : 
; 3580 : template <class _Alloc, bool _RequiresMutable>
; 3581 : _INLINE_VAR constexpr bool _Is_vb_iterator<_Vb_iterator<_Alloc>, _RequiresMutable> = true;
; 3582 : 
; 3583 : template <class _Alloc>
; 3584 : _INLINE_VAR constexpr bool _Is_vb_iterator<_Vb_const_iterator<_Alloc>, false> = true;
; 3585 : 
; 3586 : template <class _VbIt>
; 3587 : _CONSTEXPR20 void _Fill_vbool(_VbIt _First, const _VbIt _Last, const bool _Val) noexcept {
; 3588 :     // Set [_First, _Last) to _Val
; 3589 :     if (_First == _Last) {
; 3590 :         return;
; 3591 :     }
; 3592 : 
; 3593 :     _Vbase* _VbFirst      = const_cast<_Vbase*>(_First._Myptr);
; 3594 :     _Vbase* const _VbLast = const_cast<_Vbase*>(_Last._Myptr);
; 3595 : 
; 3596 :     const auto _FirstSourceMask = static_cast<_Vbase>(-1) << _First._Myoff;

	mov	ebx, -1					; ffffffffH
	mov	edx, ebx
	mov	QWORD PTR [rsp+80], rdi
	shl	edx, cl

; 3599 : 
; 3600 :     if (_VbFirst == _VbLast) {

	xor	edi, edi
	mov	r9d, edx
	not	r9d
	cmp	r8, r14
	jne	SHORT $LN11@fill_n

; 3601 :         // We already excluded _First == _Last, so here _Last._Myoff > 0 and the shift is safe
; 3602 :         const auto _LastSourceMask = static_cast<_Vbase>(-1) >> (_VBITS - _Last._Myoff);

	mov	ecx, 32					; 00000020H
	sub	cl, bpl
	shr	ebx, cl

; 3603 :         const auto _LastDestMask   = ~_LastSourceMask;

	mov	eax, ebx
	not	eax

; 3604 :         const auto _SourceMask     = _FirstSourceMask & _LastSourceMask;
; 3605 :         const auto _DestMask       = _FirstDestMask | _LastDestMask;

	or	eax, r9d

; 3606 :         *_VbFirst                  = (*_VbFirst & _DestMask) | (_FillVal & _SourceMask);

	and	eax, r10d
	test	r15b, r15b
	cmovne	edi, ebx
	and	edi, edx
	or	eax, edi
	mov	DWORD PTR [r8], eax

; 3607 :         return;

	jmp	SHORT $LN30@fill_n
$LN11@fill_n:

; 3608 :     }
; 3609 : 
; 3610 :     *_VbFirst = (*_VbFirst & _FirstDestMask) | (_FillVal & _FirstSourceMask);
; 3611 :     ++_VbFirst;

	lea	rcx, QWORD PTR [r8+4]
	test	r15b, r15b
	mov	eax, edi
	cmovne	eax, edx
	and	r10d, r9d
	or	eax, r10d
	mov	DWORD PTR [r8], eax

; 3612 : 
; 3613 : #if _HAS_CXX20
; 3614 :     if (_STD is_constant_evaluated()) {
; 3615 :         for (; _VbFirst != _VbLast; ++_VbFirst) {
; 3616 :             *_VbFirst = _FillVal;
; 3617 :         }
; 3618 :     } else
; 3619 : #endif // _HAS_CXX20
; 3620 :     {
; 3621 :         const auto _VbFirst_ch = reinterpret_cast<const char*>(_VbFirst);
; 3622 :         const auto _VbLast_ch  = reinterpret_cast<const char*>(_VbLast);
; 3623 :         const auto _Count_ch   = static_cast<size_t>(_VbLast_ch - _VbFirst_ch);
; 3624 :         const auto _ValChar    = static_cast<unsigned char>(_Val ? -1 : 0);

	movzx	eax, r15b
	mov	r8, r14
	sub	r8, rcx
	neg	al
	sbb	edx, edx
	movzx	edx, dl

; 3625 :         _CSTD memset(_VbFirst, _ValChar, _Count_ch);

	call	memset

; 3626 :         _VbFirst = _VbLast;
; 3627 :     }
; 3628 : 
; 3629 :     if (_Last._Myoff != 0) {

	test	rbp, rbp
	je	SHORT $LN30@fill_n

; 3630 :         const auto _LastSourceMask = static_cast<_Vbase>(-1) >> (_VBITS - _Last._Myoff);

	mov	ecx, 32					; 00000020H
	sub	cl, bpl
	shr	ebx, cl

; 3631 :         const auto _LastDestMask   = ~_LastSourceMask;
; 3632 :         *_VbFirst                  = (*_VbFirst & _LastDestMask) | (_FillVal & _LastSourceMask);

	test	r15b, r15b
	cmovne	edi, ebx
	not	ebx
	and	ebx, DWORD PTR [r14]
	or	edi, ebx
	mov	DWORD PTR [r14], edi
$LN30@fill_n:
	mov	rbx, QWORD PTR [rsp+64]
	mov	rdi, QWORD PTR [rsp+80]
$LN14@fill_n:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5079 :             return _Last;

	mov	r14, QWORD PTR [rsp+32]

; 5107 : }

	mov	rax, rsi
	mov	rbp, QWORD PTR [rsp+72]
	add	rsp, 40					; 00000028H
	pop	r15
	pop	rsi
	ret	0
$LN2@fill_n:

; 5080 :         } else {
; 5081 :             auto _UDest = _Get_unwrapped_n(_Dest, _Count);
; 5082 : #if _HAS_CXX20
; 5083 :             if (!_STD is_constant_evaluated())
; 5084 : #endif // _HAS_CXX20
; 5085 :             {
; 5086 :                 if constexpr (_Fill_memset_is_safe<decltype(_UDest), _Ty>) {
; 5087 :                     _Fill_memset(_UDest, _Val, static_cast<size_t>(_Count));
; 5088 :                     _Seek_wrapped(_Dest, _UDest + _Count);
; 5089 :                     return _Dest;
; 5090 :                 } else if constexpr (_Fill_zero_memset_is_safe<decltype(_UDest), _Ty>) {
; 5091 :                     if (_Is_all_bits_zero(_Val)) {
; 5092 :                         _Fill_zero_memset(_UDest, static_cast<size_t>(_Count));
; 5093 :                         _Seek_wrapped(_Dest, _UDest + _Count);
; 5094 :                         return _Dest;
; 5095 :                     }
; 5096 :                 }
; 5097 :             }
; 5098 : 
; 5099 :             for (; 0 < _Count; --_Count, (void) ++_UDest) {
; 5100 :                 *_UDest = _Val;
; 5101 :             }
; 5102 : 
; 5103 :             _Seek_wrapped(_Dest, _UDest);
; 5104 :         }
; 5105 :     }
; 5106 :     return _Dest;

	movaps	xmm0, XMMWORD PTR [rdx]

; 5107 : }

	mov	rax, rsi
	movups	XMMWORD PTR [rcx], xmm0
	add	rsp, 40					; 00000028H
	pop	r15
	pop	rsi
	ret	0
??$fill_n@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@_K_N@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@_KAEB_N@Z ENDP ; std::fill_n<std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >,unsigned __int64,bool>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$copy_backward@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z
_TEXT	SEGMENT
$T1 = 0
$T2 = 16
$T3 = 32
__$ReturnUdt$ = 64
_First$ = 72
_Last$ = 80
_Dest$ = 88
??$copy_backward@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z PROC ; std::copy_backward<std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >,std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > >, COMDAT

; 4875 : _CONSTEXPR20 _BidIt2 copy_backward(_BidIt1 _First, _BidIt1 _Last, _BidIt2 _Dest) {

$LN80:
	push	rbx
	sub	rsp, 48					; 00000030H

; 4876 :     // copy [_First, _Last) backwards to [..., _Dest)
; 4877 :     _Adl_verify_range(_First, _Last);
; 4878 :     const auto _UFirst = _Get_unwrapped(_First);
; 4879 :     const auto _ULast  = _Get_unwrapped(_Last);
; 4880 :     const auto _UDest  = _Get_unwrapped_n(_Dest, -_Idl_distance<_BidIt1>(_UFirst, _ULast));
; 4881 :     _Seek_wrapped(_Dest, _Copy_backward_unchecked(_UFirst, _ULast, _UDest));

	movaps	xmm0, XMMWORD PTR [r9]
	mov	rbx, rcx
	movaps	xmm1, XMMWORD PTR [r8]
	movdqa	XMMWORD PTR $T1[rsp], xmm0
	movaps	xmm0, XMMWORD PTR [rdx]
	mov	rdx, QWORD PTR $T1[rsp+8]
	mov	r8, QWORD PTR $T1[rsp]
	movdqa	XMMWORD PTR $T2[rsp], xmm0
	mov	r10, QWORD PTR $T2[rsp+8]
	mov	r11, QWORD PTR $T2[rsp]
	movdqa	XMMWORD PTR $T3[rsp], xmm1
	mov	rcx, QWORD PTR $T3[rsp+8]
	mov	r9, QWORD PTR $T3[rsp]
$LL14@copy_backw:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2599 :         return this->_Myptr == _Right._Myptr && this->_Myoff == _Right._Myoff;

	cmp	r11, r9
	jne	SHORT $LN19@copy_backw
	cmp	r10, rcx
	je	SHORT $LN69@copy_backw
$LN19@copy_backw:

; 2658 :         if (this->_Myoff != 0) {

	test	rcx, rcx
	je	SHORT $LN26@copy_backw

; 2659 :             --this->_Myoff;

	dec	rcx

; 2660 :         } else { // move to previous word

	jmp	SHORT $LN27@copy_backw
$LN26@copy_backw:

; 2661 :             this->_Myoff = _VBITS - 1;

	mov	ecx, 31

; 2662 :             --this->_Myptr;

	sub	r9, 4
$LN27@copy_backw:

; 2658 :         if (this->_Myoff != 0) {

	test	rdx, rdx
	je	SHORT $LN40@copy_backw

; 2659 :             --this->_Myoff;

	dec	rdx

; 2660 :         } else { // move to previous word

	jmp	SHORT $LN77@copy_backw
$LN40@copy_backw:

; 2661 :             this->_Myoff = _VBITS - 1;

	mov	edx, 31

; 2662 :             --this->_Myptr;

	sub	r8, 4
$LN77@copy_backw:

; 2388 :         : _Myptr(_Ptr), _Myoff(_Off) {

	mov	eax, 1
	mov	QWORD PTR $T1[rsp+8], rdx
	shl	eax, cl

; 2456 :         return (*_Getptr() & _Mask()) != 0;

	test	eax, DWORD PTR [r9]

; 2430 :         if (_Val) {

	mov	eax, DWORD PTR [r8]
	je	SHORT $LN56@copy_backw

; 2431 :             *const_cast<_Vbase*>(_Getptr()) |= _Mask();

	bts	eax, edx
	mov	DWORD PTR [r8], eax

; 2432 :         } else {

	jmp	SHORT $LL14@copy_backw
$LN56@copy_backw:

; 2433 :             *const_cast<_Vbase*>(_Getptr()) &= ~_Mask();

	btr	eax, edx
	mov	DWORD PTR [r8], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4869 :     }

	jmp	SHORT $LL14@copy_backw
$LN69@copy_backw:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2662 :             --this->_Myptr;

	mov	QWORD PTR $T1[rsp], r8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4882 :     return _Dest;

	mov	rax, rbx
	movaps	xmm0, XMMWORD PTR $T1[rsp]
	movups	XMMWORD PTR [rbx], xmm0

; 4883 : }

	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
??$copy_backward@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z ENDP ; std::copy_backward<std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >,std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Get_unwrapped@AEAV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@@std@@YA?A_TAEAV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@@Z
_TEXT	SEGMENT
_It$ = 8
??$_Get_unwrapped@AEAV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@@std@@YA?A_TAEAV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@@Z PROC ; std::_Get_unwrapped<std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > &>, COMDAT

; 1156 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1157 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1158 :         return _It + 0;
; 1159 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1160 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1161 :     } else {
; 1162 :         return static_cast<_Iter&&>(_It);

	mov	rax, rcx

; 1163 :     }
; 1164 : }

	ret	0
??$_Get_unwrapped@AEAV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@@std@@YA?A_TAEAV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@@Z ENDP ; std::_Get_unwrapped<std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Idl_distance@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?A_PAEBV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@0@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
??$_Idl_distance@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?A_PAEBV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@0@Z PROC ; std::_Idl_distance<std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >,std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2589 :         return static_cast<difference_type>(_Mybase::_VBITS_DIFF * (this->_Myptr - _Right._Myptr))

	mov	rax, QWORD PTR [rdx]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 2
	shl	rax, 5
	sub	rax, QWORD PTR [rcx+8]
	add	rax, QWORD PTR [rdx+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 1323 : }

	ret	0
??$_Idl_distance@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?A_PAEBV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@0@Z ENDP ; std::_Idl_distance<std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >,std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Get_unwrapped_n@AEAV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@_J@std@@YA?A_TAEAV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@_J@Z
_TEXT	SEGMENT
_It$ = 8
_Off$dead$ = 16
??$_Get_unwrapped_n@AEAV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@_J@std@@YA?A_TAEAV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@_J@Z PROC ; std::_Get_unwrapped_n<std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > &,__int64>, COMDAT

; 1222 :     if constexpr (is_pointer_v<decay_t<_Iter>>) {
; 1223 :         return _It + 0;
; 1224 :     } else if constexpr (_Unwrappable_for_offset_v<_Iter> && is_integral_v<_Diff>) {
; 1225 :         // ask an iterator to assert that the iterator moved _Off positions is valid, and unwrap
; 1226 :         using _IDiff     = _Iter_diff_t<_Remove_cvref_t<_Iter>>;
; 1227 :         using _CDiff     = common_type_t<_Diff, _IDiff>;
; 1228 :         const auto _COff = static_cast<_CDiff>(_Off);
; 1229 : 
; 1230 :         _STL_ASSERT(_COff <= static_cast<_CDiff>(_Max_possible_v<_IDiff>)
; 1231 :                         && (is_unsigned_v<_Diff> || static_cast<_CDiff>(_Min_possible_v<_IDiff>) <= _COff),
; 1232 :             "integer overflow");
; 1233 :         (void) _COff;
; 1234 : 
; 1235 :         _It._Verify_offset(static_cast<_IDiff>(_Off));
; 1236 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1237 :     } else if constexpr (_Unwrappable_for_unverified_v<_Iter>) {
; 1238 :         // iterator doesn't support offset-based asserts, or offset unknown; defer to unverified unwrap
; 1239 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1240 :     } else {
; 1241 :         // pass through iterator that doesn't participate in checking
; 1242 :         return static_cast<_Iter&&>(_It);

	mov	rax, rcx

; 1243 :     }
; 1244 : }

	ret	0
??$_Get_unwrapped_n@AEAV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@_J@std@@YA?A_TAEAV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@_J@Z ENDP ; std::_Get_unwrapped_n<std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > &,__int64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Resize@I@?$vector@IV?$allocator@I@std@@@std@@AEAAX_KAEBI@Z
_TEXT	SEGMENT
this$dead$ = 48
_Newsize$ = 56
_Val$ = 64
??$_Resize@I@?$vector@IV?$allocator@I@std@@@std@@AEAAX_KAEBI@Z PROC ; std::vector<unsigned int,std::allocator<unsigned int> >::_Resize<unsigned int>, COMDAT

; 1551 :     _CONSTEXPR20 void _Resize(const size_type _Newsize, const _Ty2& _Val) {

$LN8:
	sub	rsp, 40					; 00000028H

; 1552 :         // trim or append elements, provide strong guarantee
; 1553 :         auto& _Al           = _Getal();
; 1554 :         auto& _My_data      = _Mypair._Myval2;
; 1555 :         pointer& _Myfirst   = _My_data._Myfirst;
; 1556 :         pointer& _Mylast    = _My_data._Mylast;
; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	r10, QWORD PTR ?SubModelHovered@UICollisionCreator@@3V?$vector@_NV?$allocator@_N@std@@@std@@A+8
	mov	r9, QWORD PTR ?SubModelHovered@UICollisionCreator@@3V?$vector@_NV?$allocator@_N@std@@@std@@A
	mov	rcx, r10
	sub	rcx, r9
	sar	rcx, 2

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rdx, rcx
	jae	SHORT $LN2@Resize

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	lea	rax, QWORD PTR [r9+rdx*4]

; 1578 :             } else {
; 1579 :                 _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Ty2, _Value_init_tag>);
; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);
; 1581 :             }
; 1582 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1583 :             _Orphan_range(_Oldlast, _Oldlast);
; 1584 :         }
; 1585 : 
; 1586 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1587 :     }

	mov	QWORD PTR ?SubModelHovered@UICollisionCreator@@3V?$vector@_NV?$allocator@_N@std@@@std@@A+8, rax
	add	rsp, 40					; 00000028H
	ret	0
$LN2@Resize:

; 1560 :             _Orphan_range(_Newlast, _Mylast);
; 1561 :             _Destroy_range(_Newlast, _Mylast, _Al);
; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;
; 1564 :             return;
; 1565 :         }
; 1566 : 
; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN3@Resize

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR ?SubModelHovered@UICollisionCreator@@3V?$vector@_NV?$allocator@_N@std@@@std@@A+16
	sub	rax, r9
	sar	rax, 2

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	rdx, rax
	jbe	SHORT $LN4@Resize

; 1578 :             } else {
; 1579 :                 _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Ty2, _Value_init_tag>);
; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);
; 1581 :             }
; 1582 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1583 :             _Orphan_range(_Oldlast, _Oldlast);
; 1584 :         }
; 1585 : 
; 1586 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1587 :     }

	add	rsp, 40					; 00000028H

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	jmp	??$_Resize_reallocate@I@?$vector@IV?$allocator@I@std@@@std@@AEAAX_KAEBI@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Resize_reallocate<unsigned int>
$LN4@Resize:

; 1571 :                 return;
; 1572 :             }
; 1573 : 
; 1574 :             _ASAN_VECTOR_EXTEND_GUARD(_Newsize);
; 1575 :             const pointer _Oldlast = _Mylast;
; 1576 :             if constexpr (is_same_v<_Ty2, _Ty>) {
; 1577 :                 _Mylast = _Uninitialized_fill_n(_Oldlast, _Newsize - _Oldsize, _Val, _Al);

	sub	rdx, rcx
	mov	rcx, r10
	call	??$_Uninitialized_fill_n@V?$allocator@I@std@@@std@@YAPEAIPEAI_KAEBIAEAV?$allocator@I@0@@Z ; std::_Uninitialized_fill_n<std::allocator<unsigned int> >

; 1578 :             } else {
; 1579 :                 _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Ty2, _Value_init_tag>);
; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);
; 1581 :             }
; 1582 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1583 :             _Orphan_range(_Oldlast, _Oldlast);
; 1584 :         }
; 1585 : 
; 1586 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1587 :     }

	mov	QWORD PTR ?SubModelHovered@UICollisionCreator@@3V?$vector@_NV?$allocator@_N@std@@@std@@A+8, rax
$LN3@Resize:
	add	rsp, 40					; 00000028H
	ret	0
??$_Resize@I@?$vector@IV?$allocator@I@std@@@std@@AEAAX_KAEBI@Z ENDP ; std::vector<unsigned int,std::allocator<unsigned int> >::_Resize<unsigned int>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??D?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA?AV?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@1@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
??D?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA?AV?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@1@XZ PROC ; std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator*, COMDAT

; 2388 :         : _Myptr(_Ptr), _Myoff(_Off) {

	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rdx+8], rax

; 2702 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2703 :         const auto _Cont = static_cast<const _Mycont*>(this->_Getcont());
; 2704 :         _STL_VERIFY(_Cont, "cannot dereference value-initialized vector<bool> iterator");
; 2705 :         _STL_VERIFY(this->_Total_off(_Cont) < static_cast<_Difference_type>(_Cont->_Mysize),
; 2706 :             "vector<bool> iterator not dereferenceable");
; 2707 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2708 : 
; 2709 :         return _Reft(*this);

	mov	rax, rdx

; 2710 :     }

	ret	0
??D?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA?AV?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@1@XZ ENDP ; std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >, COMDAT

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	rax, rcx
	ret	0
??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@2@QEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@2@_K@Z
_TEXT	SEGMENT
_Al$dead$ = 8
_Ptr$ = 16
_Count$dead$ = 24
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@2@QEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >::deallocate, COMDAT

; 701  :     static _CONSTEXPR20 void deallocate(_Alloc& _Al, const pointer _Ptr, const size_type _Count) {

	mov	rcx, rdx

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 88					; 00000058H
	jmp	??3@YAXPEAX_K@Z				; operator delete
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@2@QEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??0?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@QEAA@XZ PROC ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> >::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> >, COMDAT

; 958  :     constexpr allocator() noexcept {}

	mov	rax, rcx
	ret	0
??0?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@QEAA@XZ ENDP ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> >::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??B?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
??B?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA_NXZ PROC ; std::_Vb_reference<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator bool, COMDAT

; 2456 :         return (*_Getptr() & _Mask()) != 0;

	mov	rax, QWORD PTR [rcx]

; 2478 :         return static_cast<_Vbase>(1) << this->_Myoff;

	mov	edx, 1
	mov	rcx, QWORD PTR [rcx+8]
	shl	edx, cl

; 2456 :         return (*_Getptr() & _Mask()) != 0;

	test	edx, DWORD PTR [rax]
	setne	al

; 2457 :     }

	ret	0
??B?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA_NXZ ENDP ; std::_Vb_reference<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator bool
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Mask@?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@IEBAIXZ
_TEXT	SEGMENT
this$ = 8
?_Mask@?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@IEBAIXZ PROC ; std::_Vb_reference<std::_Wrap_alloc<std::allocator<unsigned int> > >::_Mask, COMDAT

; 2478 :         return static_cast<_Vbase>(1) << this->_Myoff;

	mov	rcx, QWORD PTR [rcx+8]
	mov	eax, 1
	shl	eax, cl

; 2479 :     }

	ret	0
?_Mask@?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@IEBAIXZ ENDP ; std::_Vb_reference<std::_Wrap_alloc<std::allocator<unsigned int> > >::_Mask
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Getptr@?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBAPEBIXZ
_TEXT	SEGMENT
this$ = 8
?_Getptr@?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBAPEBIXZ PROC ; std::_Vb_reference<std::_Wrap_alloc<std::allocator<unsigned int> > >::_Getptr, COMDAT

; 2460 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2461 :         const auto _Cont = static_cast<const _Mycont*>(this->_Getcont());
; 2462 :         _STL_VERIFY(_Cont, "cannot dereference value-initialized vector<bool> iterator");
; 2463 :         _STL_VERIFY(this->_Total_off(_Cont) <= static_cast<_Difference_type>(_Cont->_Mysize),
; 2464 :             "vector<bool> iterator not dereferenceable");
; 2465 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2466 : 
; 2467 :         return this->_Myptr;

	mov	rax, QWORD PTR [rcx]

; 2468 :     }

	ret	0
?_Getptr@?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBAPEBIXZ ENDP ; std::_Vb_reference<std::_Wrap_alloc<std::allocator<unsigned int> > >::_Getptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@AEBV?$_Vb_iter_base@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??0?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@AEBV?$_Vb_iter_base@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@1@@Z PROC ; std::_Vb_reference<std::_Wrap_alloc<std::allocator<unsigned int> > >::_Vb_reference<std::_Wrap_alloc<std::allocator<unsigned int> > >, COMDAT

; 2388 :         : _Myptr(_Ptr), _Myoff(_Off) {

	mov	rax, QWORD PTR [rdx]

; 2423 :         : _Mybase(_Right._Myptr, _Right._Myoff, _Right._Getcont()) {}

	mov	r8, QWORD PTR [rdx+8]

; 2388 :         : _Myptr(_Ptr), _Myoff(_Off) {

	mov	QWORD PTR [rcx], rax

; 2423 :         : _Mybase(_Right._Myptr, _Right._Myoff, _Right._Getcont()) {}

	mov	rax, rcx

; 2388 :         : _Myptr(_Ptr), _Myoff(_Off) {

	mov	QWORD PTR [rcx+8], r8

; 2423 :         : _Mybase(_Right._Myptr, _Right._Myoff, _Right._Getcont()) {}

	ret	0
??0?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAA@AEBV?$_Vb_iter_base@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@1@@Z ENDP ; std::_Vb_reference<std::_Wrap_alloc<std::allocator<unsigned int> > >::_Vb_reference<std::_Wrap_alloc<std::allocator<unsigned int> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ PROC	; std::vector<char,std::allocator<char> >::vector<char,std::allocator<char> >, COMDAT

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax

; 611  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));
; 612  :     }

	mov	rax, rcx
	ret	0
??0?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ ENDP	; std::vector<char,std::allocator<char> >::vector<char,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Trim@?$vector@_NV?$allocator@_N@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
__$ArrayPad$ = 32
this$dead$ = 64
_Size$ = 72
?_Trim@?$vector@_NV?$allocator@_N@std@@@std@@QEAAX_K@Z PROC ; std::vector<bool,std::allocator<bool> >::_Trim, COMDAT

; 3537 :     _CONSTEXPR20 void _Trim(size_type _Size) {

$LN59:
	sub	rsp, 56					; 00000038H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 3538 :         if (max_size() < _Size) {

	mov	rax, 9223372036854775807		; 7fffffffffffffffH
	cmp	rdx, rax
	ja	SHORT $LN57@Trim

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rcx, QWORD PTR ?SubModelHovered@UICollisionCreator@@3V?$vector@_NV?$allocator@_N@std@@@std@@A+8

; 2839 :         return (_Count + _VBITS - 1) / _VBITS;

	lea	r8, QWORD PTR [rdx+31]

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	r9, QWORD PTR ?SubModelHovered@UICollisionCreator@@3V?$vector@_NV?$allocator@_N@std@@@std@@A
	mov	rax, rcx
	sub	rax, r9

; 2839 :         return (_Count + _VBITS - 1) / _VBITS;

	shr	r8, 5

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	sar	rax, 2

; 3540 :         }
; 3541 : 
; 3542 :         const size_type _Words = this->_Nw(_Size);
; 3543 :         if (_Words < this->_Myvec.size()) {

	cmp	r8, rax
	jae	SHORT $LN31@Trim

; 126  :         _Ptr += _Off;

	lea	rax, QWORD PTR [r9+r8*4]

; 1749 :         if (_Firstptr != _Lastptr) { // something to do, invalidate iterators

	cmp	rax, rcx
	je	SHORT $LN31@Trim

; 1750 :             _Orphan_range(_Firstptr, _Mylast);
; 1751 : 
; 1752 :             const pointer _Newlast = _STD _Move_unchecked(_Lastptr, _Mylast, _Firstptr);
; 1753 :             _Destroy_range(_Newlast, _Mylast, _Getal());
; 1754 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newlast - _Mylast)); // negative when destroying elements
; 1755 :             _Mylast = _Newlast;

	mov	QWORD PTR ?SubModelHovered@UICollisionCreator@@3V?$vector@_NV?$allocator@_N@std@@@std@@A+8, rax
$LN31@Trim:

; 3544 :             this->_Myvec.erase(this->_Myvec.begin() + static_cast<difference_type>(_Words), this->_Myvec.end());
; 3545 :         }
; 3546 : 
; 3547 :         this->_Mysize = _Size;

	mov	QWORD PTR ?SubModelHovered@UICollisionCreator@@3V?$vector@_NV?$allocator@_N@std@@@std@@A+24, rdx

; 3548 :         _Size %= _VBITS;

	and	edx, 31

; 3549 :         if (0 < _Size) {

	jbe	SHORT $LN4@Trim

; 3550 :             this->_Myvec[_Words - 1] &= (static_cast<_Vbase>(1) << _Size) - 1;

	mov	ecx, edx
	mov	eax, 1
	shl	eax, cl
	dec	eax
	and	DWORD PTR [r9+r8*4-4], eax
$LN4@Trim:

; 3551 :         }
; 3552 :     }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 56					; 00000038H
	ret	0
$LN57@Trim:

; 3539 :             _Xlen(); // result too long

	call	?_Xlen@?$vector@_NV?$allocator@_N@std@@@std@@QEBAXXZ ; std::vector<bool,std::allocator<bool> >::_Xlen
	int	3
$LN55@Trim:
?_Trim@?$vector@_NV?$allocator@_N@std@@@std@@QEAAX_K@Z ENDP ; std::vector<bool,std::allocator<bool> >::_Trim
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Make_iter@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@V?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@@Z
_TEXT	SEGMENT
this$dead$ = 48
__$ReturnUdt$ = 56
_Where$ = 64
?_Make_iter@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@V?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@@Z PROC ; std::vector<bool,std::allocator<bool> >::_Make_iter, COMDAT

; 3113 :     _CONSTEXPR20 iterator _Make_iter(const_iterator _Where) noexcept {

$LN27:
	sub	rsp, 40					; 00000028H
	xorps	xmm0, xmm0
	mov	r10, rdx
	movups	XMMWORD PTR [rdx], xmm0

; 2388 :         : _Myptr(_Ptr), _Myoff(_Off) {

	mov	rax, QWORD PTR ?SubModelHovered@UICollisionCreator@@3V?$vector@_NV?$allocator@_N@std@@@std@@A
	mov	QWORD PTR [rdx], rax

; 3114 :         iterator _Tmp = begin();
; 3115 :         if (0 < this->_Mysize) {

	cmp	QWORD PTR ?SubModelHovered@UICollisionCreator@@3V?$vector@_NV?$allocator@_N@std@@@std@@A+24, 0
	jbe	SHORT $LN24@Make_iter

; 2589 :         return static_cast<difference_type>(_Mybase::_VBITS_DIFF * (this->_Myptr - _Right._Myptr))

	mov	rdx, QWORD PTR [r8]

; 3116 :             _Tmp += _Where - begin();

	mov	rcx, r10

; 2589 :         return static_cast<difference_type>(_Mybase::_VBITS_DIFF * (this->_Myptr - _Right._Myptr))

	sub	rdx, QWORD PTR ?SubModelHovered@UICollisionCreator@@3V?$vector@_NV?$allocator@_N@std@@@std@@A
	sar	rdx, 2
	shl	rdx, 5
	add	rdx, QWORD PTR [r8+8]

; 3116 :             _Tmp += _Where - begin();

	call	??Y?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@_J@Z ; std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator+=
$LN24@Make_iter:

; 3117 :         }
; 3118 : 
; 3119 :         return _Tmp;
; 3120 :     }

	mov	rax, r10
	add	rsp, 40					; 00000028H
	ret	0
?_Make_iter@?$vector@_NV?$allocator@_N@std@@@std@@QEAA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@V?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@2@@Z ENDP ; std::vector<bool,std::allocator<bool> >::_Make_iter
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEBA?AV01@_J@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
_Off$ = 24
??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEBA?AV01@_J@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned int> > >::operator+, COMDAT

; 126  :         _Ptr += _Off;

	mov	rax, QWORD PTR [rcx]
	lea	rcx, QWORD PTR [rax+r8*4]

; 311  :         _Vector_iterator _Tmp = *this;
; 312  :         _Tmp += _Off;
; 313  :         return _Tmp;

	mov	rax, rdx

; 126  :         _Ptr += _Off;

	mov	QWORD PTR [rdx], rcx

; 314  :     }

	ret	0
??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEBA?AV01@_J@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned int> > >::operator+
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?end@?$vector@IV?$allocator@I@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?end@?$vector@IV?$allocator@I@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@XZ PROC ; std::vector<unsigned int,std::allocator<unsigned int> >::end, COMDAT

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rdx], rax

; 1805 :         auto& _My_data = _Mypair._Myval2;
; 1806 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

	mov	rax, rdx

; 1807 :     }

	ret	0
?end@?$vector@IV?$allocator@I@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@XZ ENDP ; std::vector<unsigned int,std::allocator<unsigned int> >::end
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEAA@PEAIPEBU_Container_base0@1@@Z
_TEXT	SEGMENT
this$ = 8
__param0$ = 16
__param1$dead$ = 24
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEAA@PEAIPEBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned int> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned int> > >, COMDAT

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	ret	0
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEAA@PEAIPEBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned int> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned int> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?begin@?$vector@IV?$allocator@I@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?begin@?$vector@IV?$allocator@I@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@XZ PROC ; std::vector<unsigned int,std::allocator<unsigned int> >::begin, COMDAT

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax

; 1795 :         auto& _My_data = _Mypair._Myval2;
; 1796 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

	mov	rax, rdx

; 1797 :     }

	ret	0
?begin@?$vector@IV?$allocator@I@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@XZ ENDP ; std::vector<unsigned int,std::allocator<unsigned int> >::begin
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?erase@?$vector@IV?$allocator@I@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@0@Z
_TEXT	SEGMENT
this$dead$ = 48
__$ReturnUdt$ = 56
_First$ = 64
_Last$ = 72
?erase@?$vector@IV?$allocator@I@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@0@Z PROC ; std::vector<unsigned int,std::allocator<unsigned int> >::erase, COMDAT

; 1737 :         is_nothrow_move_assignable_v<value_type>) /* strengthened */ {

$LN27:
	mov	QWORD PTR [rsp+24], rbx
	push	rsi
	sub	rsp, 32					; 00000020H
	mov	rbx, r8
	mov	rsi, rdx

; 1738 :         const pointer _Firstptr = _First._Ptr;
; 1739 :         const pointer _Lastptr  = _Last._Ptr;
; 1740 :         auto& _My_data          = _Mypair._Myval2;
; 1741 :         pointer& _Mylast        = _My_data._Mylast;
; 1742 : 
; 1743 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1744 :         _STL_VERIFY(_First._Getcont() == _STD addressof(_My_data) && _Last._Getcont() == _STD addressof(_My_data)
; 1745 :                         && _Firstptr >= _My_data._Myfirst && _Lastptr >= _Firstptr && _Mylast >= _Lastptr,
; 1746 :             "vector erase iterator outside range");
; 1747 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1748 : 
; 1749 :         if (_Firstptr != _Lastptr) { // something to do, invalidate iterators

	cmp	r8, r9
	je	SHORT $LN22@erase
	mov	QWORD PTR [rsp+48], rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rdx, r9
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1752 :             const pointer _Newlast = _STD _Move_unchecked(_Lastptr, _Mylast, _Firstptr);

	mov	rdi, QWORD PTR ?SubModelHovered@UICollisionCreator@@3V?$vector@_NV?$allocator@_N@std@@@std@@A+8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rcx, rbx
	sub	rdi, r9
	mov	r8, rdi
	call	memmove

; 4536 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

	lea	rcx, QWORD PTR [rdi+rbx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1759 :     }

	mov	rax, rsi
	mov	rdi, QWORD PTR [rsp+48]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4536 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

	mov	QWORD PTR ?SubModelHovered@UICollisionCreator@@3V?$vector@_NV?$allocator@_N@std@@@std@@A+8, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

	mov	QWORD PTR [rsi], rbx

; 1759 :     }

	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rsi
	ret	0
$LN22@erase:

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

	mov	QWORD PTR [rdx], rbx

; 1759 :     }

	mov	rax, rsi
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rsi
	ret	0
?erase@?$vector@IV?$allocator@I@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@2@0@Z ENDP ; std::vector<unsigned int,std::allocator<unsigned int> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEAAX_K@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned int> > >::__autoclassinit2, COMDAT
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	ret	0
?__autoclassinit2@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEAAX_K@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned int> > >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEAAAEAV01@_J@Z
_TEXT	SEGMENT
this$ = 8
_Off$ = 16
??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEAAAEAV01@_J@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned int> > >::operator+=, COMDAT

; 126  :         _Ptr += _Off;

	lea	rax, QWORD PTR [rdx*4]
	add	QWORD PTR [rcx], rax

; 306  :         _Mybase::operator+=(_Off);
; 307  :         return *this;

	mov	rax, rcx

; 308  :     }

	ret	0
??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEAAAEAV01@_J@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned int> > >::operator+=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEAA@PEAIPEBU_Container_base0@1@@Z
_TEXT	SEGMENT
this$ = 8
_Parg$ = 16
_Pvector$dead$ = 24
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEAA@PEAIPEBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned int> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned int> > >, COMDAT

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

	mov	QWORD PTR [rcx], rdx

; 44   :         this->_Adopt(_Pvector);
; 45   :     }

	mov	rax, rcx
	ret	0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEAA@PEAIPEBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned int> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned int> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEAAAEAV01@_J@Z
_TEXT	SEGMENT
this$ = 8
_Off$ = 16
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEAAAEAV01@_J@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned int> > >::operator+=, COMDAT

; 125  :         _Verify_offset(_Off);
; 126  :         _Ptr += _Off;

	lea	rax, QWORD PTR [rdx*4]
	add	QWORD PTR [rcx], rax

; 127  :         return *this;

	mov	rax, rcx

; 128  :     }

	ret	0
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEAAAEAV01@_J@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned int> > >::operator+=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEBAX_J@Z
_TEXT	SEGMENT
this$dead$ = 8
_Off$dead$ = 16
?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEBAX_J@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned int> > >::_Verify_offset, COMDAT

; 108  : #if _ITERATOR_DEBUG_LEVEL == 0
; 109  :         (void) _Off;
; 110  : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 0 / _ITERATOR_DEBUG_LEVEL != 0 vvv
; 111  :         const auto _Mycont = static_cast<const _Myvec*>(this->_Getcont());
; 112  :         _STL_VERIFY(_Off == 0 || _Ptr, "cannot seek value-initialized vector iterator");
; 113  :         _STL_VERIFY(_Off == 0 || _Mycont, "cannot seek invalidated vector iterator");
; 114  :         if (_Off < 0) {
; 115  :             _STL_VERIFY(_Off >= _Mycont->_Myfirst - _Ptr, "cannot seek vector iterator before begin");
; 116  :         }
; 117  : 
; 118  :         if (_Off > 0) {
; 119  :             _STL_VERIFY(_Off <= _Mycont->_Mylast - _Ptr, "cannot seek vector iterator after end");
; 120  :         }
; 121  : #endif // _ITERATOR_DEBUG_LEVEL == 0
; 122  :     }

	ret	0
?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@QEBAX_J@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned int> > >::_Verify_offset
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@PEBD@std@@YA$$QEAPEBDAEAPEBD@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@PEBD@std@@YA$$QEAPEBDAEAPEBD@Z PROC		; std::forward<char const *>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@PEBD@std@@YA$$QEAPEBDAEAPEBD@Z ENDP		; std::forward<char const *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@AEAY0P@$$CBD@std@@YAAEAY0P@$$CBDAEAY0P@$$CBD@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAY0P@$$CBD@std@@YAAEAY0P@$$CBDAEAY0P@$$CBD@Z PROC ; std::forward<char const (&)[15]>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@AEAY0P@$$CBD@std@@YAAEAY0P@$$CBDAEAY0P@$$CBD@Z ENDP ; std::forward<char const (&)[15]>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@YAAEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@0@AEBQEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@YAAEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@0@AEBQEAU10@@Z PROC ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * const &>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@YAAEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@0@AEBQEAU10@@Z ENDP ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$to_address@D@std@@YAPEADQEAD@Z
_TEXT	SEGMENT
_Val$ = 8
??$to_address@D@std@@YAPEADQEAD@Z PROC			; std::to_address<char>, COMDAT

; 328  :     static_assert(!is_function_v<_Ty>, "N4950 [pointer.conversion]/1: Mandates: T is not a function type.");
; 329  :     return _Val;

	mov	rax, rcx

; 330  : }

	ret	0
??$to_address@D@std@@YAPEADQEAD@Z ENDP			; std::to_address<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$addressof@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@0@AEAPEAU10@@Z PROC ; std::addressof<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *>, COMDAT

; 1607 :     return __builtin_addressof(_Val);

	mov	rax, rcx

; 1608 : }

	ret	0
??$addressof@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@0@AEAPEAU10@@Z ENDP ; std::addressof<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@AEBQEAU12@$0A@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@0@QEAPEAU10@AEBQEAU10@@Z
_TEXT	SEGMENT
_Location$ = 8
<_Args_0>$ = 16
??$construct_at@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@AEBQEAU12@$0A@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@0@QEAPEAU10@AEBQEAU10@@Z PROC ; std::construct_at<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * const &,0>, COMDAT

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx

; 242  : }

	ret	0
??$construct_at@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@std@@AEBQEAU12@$0A@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@PEAX@0@QEAPEAU10@AEBQEAU10@@Z ENDP ; std::construct_at<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void *> * const &,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@0@@Z
_TEXT	SEGMENT
_Location$ = 48
??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@0@@Z PROC ; std::destroy_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >, COMDAT

; 314  : _CONSTEXPR20 void destroy_at(_Ty* const _Location) noexcept /* strengthened */ {

$LN16:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	add	rcx, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 323  : }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@0@@Z ENDP ; std::destroy_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Fill_vbool@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@@std@@YAXV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@_N@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Val$ = 64
??$_Fill_vbool@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@@std@@YAXV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@_N@Z PROC ; std::_Fill_vbool<std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > >, COMDAT

; 3587 : _CONSTEXPR20 void _Fill_vbool(_VbIt _First, const _VbIt _Last, const bool _Val) noexcept {

$LN29:
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	push	r14
	sub	rsp, 32					; 00000020H

; 2599 :         return this->_Myptr == _Right._Myptr && this->_Myoff == _Right._Myoff;

	mov	r9, QWORD PTR [rcx]

; 3587 : _CONSTEXPR20 void _Fill_vbool(_VbIt _First, const _VbIt _Last, const bool _Val) noexcept {

	movzx	ebp, r8b

; 2599 :         return this->_Myptr == _Right._Myptr && this->_Myoff == _Right._Myoff;

	mov	rsi, QWORD PTR [rdx]

; 3587 : _CONSTEXPR20 void _Fill_vbool(_VbIt _First, const _VbIt _Last, const bool _Val) noexcept {

	mov	r14, rdx

; 2599 :         return this->_Myptr == _Right._Myptr && this->_Myoff == _Right._Myoff;

	cmp	r9, rsi
	jne	SHORT $LN21@Fill_vbool
	mov	rax, QWORD PTR [rdx+8]
	cmp	QWORD PTR [rcx+8], rax
	je	$LN9@Fill_vbool
$LN21@Fill_vbool:

; 3588 :     // Set [_First, _Last) to _Val
; 3589 :     if (_First == _Last) {
; 3590 :         return;
; 3591 :     }
; 3592 : 
; 3593 :     _Vbase* _VbFirst      = const_cast<_Vbase*>(_First._Myptr);
; 3594 :     _Vbase* const _VbLast = const_cast<_Vbase*>(_Last._Myptr);
; 3595 : 
; 3596 :     const auto _FirstSourceMask = static_cast<_Vbase>(-1) << _First._Myoff;

	mov	rcx, QWORD PTR [rcx+8]

; 3597 :     const auto _FirstDestMask   = ~_FirstSourceMask;
; 3598 :     const auto _FillVal         = static_cast<_Vbase>(_Val ? -1 : 0);

	mov	r10d, DWORD PTR [r9]
	mov	QWORD PTR [rsp+48], rbx
	mov	ebx, -1					; ffffffffH
	mov	edx, ebx
	mov	QWORD PTR [rsp+56], rdi
	shl	edx, cl

; 3599 : 
; 3600 :     if (_VbFirst == _VbLast) {

	xor	edi, edi
	mov	r8d, edx
	not	r8d
	cmp	r9, rsi
	jne	SHORT $LN6@Fill_vbool

; 3601 :         // We already excluded _First == _Last, so here _Last._Myoff > 0 and the shift is safe
; 3602 :         const auto _LastSourceMask = static_cast<_Vbase>(-1) >> (_VBITS - _Last._Myoff);

	mov	ecx, 32					; 00000020H
	sub	cl, BYTE PTR [r14+8]
	shr	ebx, cl

; 3603 :         const auto _LastDestMask   = ~_LastSourceMask;

	mov	eax, ebx
	not	eax

; 3604 :         const auto _SourceMask     = _FirstSourceMask & _LastSourceMask;
; 3605 :         const auto _DestMask       = _FirstDestMask | _LastDestMask;

	or	eax, r8d

; 3606 :         *_VbFirst                  = (*_VbFirst & _DestMask) | (_FillVal & _SourceMask);

	and	eax, r10d
	test	bpl, bpl
	cmovne	edi, ebx
	and	edi, edx
	or	eax, edi
	mov	DWORD PTR [r9], eax

; 3607 :         return;

	jmp	SHORT $LN26@Fill_vbool
$LN6@Fill_vbool:

; 3608 :     }
; 3609 : 
; 3610 :     *_VbFirst = (*_VbFirst & _FirstDestMask) | (_FillVal & _FirstSourceMask);

	test	bpl, bpl
	mov	eax, edi
	cmovne	eax, edx
	and	r10d, r8d
	or	eax, r10d

; 3611 :     ++_VbFirst;

	mov	r8, rsi
	mov	DWORD PTR [r9], eax
	add	r9, 4
	sub	r8, r9

; 3612 : 
; 3613 : #if _HAS_CXX20
; 3614 :     if (_STD is_constant_evaluated()) {
; 3615 :         for (; _VbFirst != _VbLast; ++_VbFirst) {
; 3616 :             *_VbFirst = _FillVal;
; 3617 :         }
; 3618 :     } else
; 3619 : #endif // _HAS_CXX20
; 3620 :     {
; 3621 :         const auto _VbFirst_ch = reinterpret_cast<const char*>(_VbFirst);
; 3622 :         const auto _VbLast_ch  = reinterpret_cast<const char*>(_VbLast);
; 3623 :         const auto _Count_ch   = static_cast<size_t>(_VbLast_ch - _VbFirst_ch);
; 3624 :         const auto _ValChar    = static_cast<unsigned char>(_Val ? -1 : 0);

	movzx	eax, bpl
	neg	al

; 3625 :         _CSTD memset(_VbFirst, _ValChar, _Count_ch);

	mov	rcx, r9
	sbb	edx, edx
	movzx	edx, dl
	call	memset

; 3626 :         _VbFirst = _VbLast;
; 3627 :     }
; 3628 : 
; 3629 :     if (_Last._Myoff != 0) {

	mov	rax, QWORD PTR [r14+8]
	test	rax, rax
	je	SHORT $LN26@Fill_vbool

; 3630 :         const auto _LastSourceMask = static_cast<_Vbase>(-1) >> (_VBITS - _Last._Myoff);

	mov	ecx, 32					; 00000020H
	sub	cl, al
	shr	ebx, cl

; 3631 :         const auto _LastDestMask   = ~_LastSourceMask;
; 3632 :         *_VbFirst                  = (*_VbFirst & _LastDestMask) | (_FillVal & _LastSourceMask);

	test	bpl, bpl
	cmovne	edi, ebx
	not	ebx
	and	ebx, DWORD PTR [rsi]
	or	edi, ebx
	mov	DWORD PTR [rsi], edi
$LN26@Fill_vbool:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rdi, QWORD PTR [rsp+56]
$LN9@Fill_vbool:

; 3633 :     }
; 3634 : }

	mov	rbp, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	r14
	ret	0
??$_Fill_vbool@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@@std@@YAXV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@_N@Z ENDP ; std::_Fill_vbool<std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??8?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??8?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA_NAEBV01@@Z PROC ; std::_Vb_const_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator==, COMDAT

; 2598 :         _Compat(_Right);
; 2599 :         return this->_Myptr == _Right._Myptr && this->_Myoff == _Right._Myoff;

	mov	rax, QWORD PTR [rdx]
	cmp	QWORD PTR [rcx], rax
	jne	SHORT $LN3@operator
	mov	rax, QWORD PTR [rdx+8]
	cmp	QWORD PTR [rcx+8], rax
	jne	SHORT $LN3@operator
	mov	al, 1

; 2600 :     }

	ret	0
$LN3@operator:

; 2598 :         _Compat(_Right);
; 2599 :         return this->_Myptr == _Right._Myptr && this->_Myoff == _Right._Myoff;

	xor	al, al

; 2600 :     }

	ret	0
??8?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA_NAEBV01@@Z ENDP ; std::_Vb_const_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator==
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Adl_verify_range@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@0@Z
_TEXT	SEGMENT
_First$dead$ = 8
_Last$dead$ = 16
??$_Adl_verify_range@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@0@Z PROC ; std::_Adl_verify_range<std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >,std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > >, COMDAT

; 1133 :     // check that [_First, _Last) forms an iterator range
; 1134 :     if constexpr (_Range_verifiable_v<_Iter, _Sentinel>) {
; 1135 :         _Verify_range(_First, _Last);
; 1136 :     }
; 1137 : }

	ret	0
??$_Adl_verify_range@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@0@Z ENDP ; std::_Adl_verify_range<std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >,std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Copy_backward_unchecked@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 64
_First$ = 72
_Last$ = 80
_Dest$ = 88
??$_Copy_backward_unchecked@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z PROC ; std::_Copy_backward_unchecked<std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >,std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > >, COMDAT

; 4856 : _NODISCARD _CONSTEXPR20 _BidIt2 _Copy_backward_unchecked(_BidIt1 _First, _BidIt1 _Last, _BidIt2 _Dest) {

$LN57:
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rsi, rcx

; 4867 :     while (_First != _Last) {

	mov	rcx, rbp
	mov	rdx, r8
	mov	rdi, r9
	mov	r11, r8
	call	??8?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vb_const_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator==
	test	al, al
	jne	$LN3@Copy_backw
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2725 :         return *this;

	mov	r9, QWORD PTR [r8]
	mov	r8, QWORD PTR [rdi+8]
	mov	r10, QWORD PTR [rdi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4867 :     while (_First != _Last) {

	mov	QWORD PTR [rsp+72], rbx
$LL2@Copy_backw:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2658 :         if (this->_Myoff != 0) {

	mov	rax, QWORD PTR [r11+8]
	test	rax, rax
	je	SHORT $LN10@Copy_backw

; 2659 :             --this->_Myoff;

	lea	rcx, QWORD PTR [rax-1]

; 2660 :         } else { // move to previous word

	jmp	SHORT $LN11@Copy_backw
$LN10@Copy_backw:

; 2661 :             this->_Myoff = _VBITS - 1;
; 2662 :             --this->_Myptr;

	add	r9, -4
	mov	ecx, 31
	mov	QWORD PTR [r11], r9
$LN11@Copy_backw:

; 2658 :         if (this->_Myoff != 0) {

	mov	QWORD PTR [r11+8], rcx
	lea	rdx, QWORD PTR [rdi+8]
	test	r8, r8
	je	SHORT $LN24@Copy_backw

; 2659 :             --this->_Myoff;

	dec	r8
	mov	rax, r8

; 2660 :         } else { // move to previous word

	jmp	SHORT $LN25@Copy_backw
$LN24@Copy_backw:

; 2661 :             this->_Myoff = _VBITS - 1;
; 2662 :             --this->_Myptr;

	add	r10, -4
	mov	eax, 31
	mov	QWORD PTR [rdi], r10
	mov	r8d, eax
$LN25@Copy_backw:

; 2388 :         : _Myptr(_Ptr), _Myoff(_Off) {

	mov	QWORD PTR [rdx], rax
	mov	eax, 1

; 2456 :         return (*_Getptr() & _Mask()) != 0;

	mov	edx, DWORD PTR [r10]

; 2388 :         : _Myptr(_Ptr), _Myoff(_Off) {

	shl	eax, cl

; 2456 :         return (*_Getptr() & _Mask()) != 0;

	test	eax, DWORD PTR [r9]

; 2430 :         if (_Val) {

	je	SHORT $LN40@Copy_backw

; 2431 :             *const_cast<_Vbase*>(_Getptr()) |= _Mask();

	bts	edx, r8d

; 2432 :         } else {

	jmp	SHORT $LN41@Copy_backw
$LN40@Copy_backw:

; 2433 :             *const_cast<_Vbase*>(_Getptr()) &= ~_Mask();

	btr	edx, r8d
$LN41@Copy_backw:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4867 :     while (_First != _Last) {

	mov	DWORD PTR [r10], edx
	mov	rcx, rbp
	mov	rdx, r11
	call	??8?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vb_const_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator==
	test	al, al
	je	SHORT $LL2@Copy_backw
	mov	rbx, QWORD PTR [rsp+72]
$LN3@Copy_backw:

; 4868 :         *--_Dest = *--_Last;
; 4869 :     }
; 4870 : 
; 4871 :     return _Dest;

	movaps	xmm0, XMMWORD PTR [rdi]
	mov	rax, rsi
	movups	XMMWORD PTR [rsi], xmm0

; 4872 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
??$_Copy_backward_unchecked@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z ENDP ; std::_Copy_backward_unchecked<std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >,std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Seek_wrapped@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YAXAEAV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@$$QEAV10@@Z
_TEXT	SEGMENT
_It$ = 8
_UIt$ = 16
??$_Seek_wrapped@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YAXAEAV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@$$QEAV10@@Z PROC ; std::_Seek_wrapped<std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >,std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > >, COMDAT

; 1256 :     if constexpr (_Wrapped_seekable_v<_Iter, _UIter>) {
; 1257 :         _It._Seek_to(_STD forward<_UIter>(_UIt));
; 1258 :     } else {
; 1259 :         _It = _STD forward<_UIter>(_UIt);

	movups	xmm0, XMMWORD PTR [rdx]
	movaps	XMMWORD PTR [rcx], xmm0

; 1260 :     }
; 1261 : }

	ret	0
??$_Seek_wrapped@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YAXAEAV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@$$QEAV10@@Z ENDP ; std::_Seek_wrapped<std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >,std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Resize_reallocate@I@?$vector@IV?$allocator@I@std@@@std@@AEAAX_KAEBI@Z
_TEXT	SEGMENT
this$dead$ = 64
_Newsize$ = 72
_Val$ = 80
??$_Resize_reallocate@I@?$vector@IV?$allocator@I@std@@@std@@AEAAX_KAEBI@Z PROC ; std::vector<unsigned int,std::allocator<unsigned int> >::_Resize_reallocate<unsigned int>, COMDAT

; 1511 :     _CONSTEXPR20 void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

$LN66:
	push	rbx
	push	rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 1512 :         if (_Newsize > max_size()) {

	mov	rbx, 4611686018427387903		; 3fffffffffffffffH
	mov	rdi, r8
	mov	rsi, rdx
	cmp	rdx, rbx
	ja	$LN64@Resize_rea

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	rcx, QWORD PTR ?SubModelHovered@UICollisionCreator@@3V?$vector@_NV?$allocator@_N@std@@@std@@A+16

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rax, rbx

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	sub	rcx, QWORD PTR ?SubModelHovered@UICollisionCreator@@3V?$vector@_NV?$allocator@_N@std@@@std@@A
	mov	QWORD PTR [rsp+64], rbp

; 1514 :         }
; 1515 : 
; 1516 :         auto& _Al         = _Getal();
; 1517 :         auto& _My_data    = _Mypair._Myval2;
; 1518 :         pointer& _Myfirst = _My_data._Myfirst;
; 1519 :         pointer& _Mylast  = _My_data._Mylast;
; 1520 : 
; 1521 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rbp, QWORD PTR ?SubModelHovered@UICollisionCreator@@3V?$vector@_NV?$allocator@_N@std@@@std@@A+8
	sub	rbp, QWORD PTR ?SubModelHovered@UICollisionCreator@@3V?$vector@_NV?$allocator@_N@std@@@std@@A

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	sar	rcx, 2

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rdx, rcx

; 1514 :         }
; 1515 : 
; 1516 :         auto& _Al         = _Getal();
; 1517 :         auto& _My_data    = _Mypair._Myval2;
; 1518 :         pointer& _Myfirst = _My_data._Myfirst;
; 1519 :         pointer& _Mylast  = _My_data._Mylast;
; 1520 : 
; 1521 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	sar	rbp, 2

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	shr	rdx, 1
	sub	rax, rdx
	mov	QWORD PTR [rsp+80], r14
	cmp	rcx, rax
	ja	SHORT $LN11@Resize_rea

; 1967 :             return _Max; // geometric growth would overflow
; 1968 :         }
; 1969 : 
; 1970 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	lea	rbx, QWORD PTR [rdx+rcx]

; 1971 : 
; 1972 :         if (_Geometric < _Newsize) {

	cmp	rbx, rsi
	cmovb	rbx, rsi
$LN11@Resize_rea:

; 1522 :         const size_type _Newcapacity = _Calculate_growth(_Newsize);
; 1523 : 
; 1524 :         const pointer _Newvec         = _Al.allocate(_Newcapacity);

	mov	rdx, rbx
	call	?allocate@?$allocator@I@std@@QEAAPEAI_K@Z ; std::allocator<unsigned int>::allocate

; 1526 :         pointer _Appended_last        = _Appended_first;
; 1527 : 
; 1528 :         _TRY_BEGIN
; 1529 :         if constexpr (is_same_v<_Ty2, _Ty>) {
; 1530 :             _Appended_last = _Uninitialized_fill_n(_Appended_first, _Newsize - _Oldsize, _Val, _Al);

	mov	rdx, rsi
	mov	r14, rax
	sub	rdx, rbp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5027 :         return _CSTD memcmp(&_Val, &_Zero, sizeof(_Ty)) == 0;

	cmp	DWORD PTR [rdi], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1525 :         const pointer _Appended_first = _Newvec + _Oldsize;

	lea	rcx, QWORD PTR [rax+rbp*4]

; 1526 :         pointer _Appended_last        = _Appended_first;
; 1527 : 
; 1528 :         _TRY_BEGIN
; 1529 :         if constexpr (is_same_v<_Ty2, _Ty>) {
; 1530 :             _Appended_last = _Uninitialized_fill_n(_Appended_first, _Newsize - _Oldsize, _Val, _Al);

	mov	rbp, QWORD PTR [rsp+64]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5027 :         return _CSTD memcmp(&_Val, &_Zero, sizeof(_Ty)) == 0;

	jne	SHORT $LN20@Resize_rea

; 5016 :     _CSTD memset(_To_address(_Dest), 0, _Count * sizeof(_Iter_value_t<_CtgIt>));

	lea	r8, QWORD PTR [rdx*4]
	xor	edx, edx
	call	memset
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1972 :                 return _First + _Count;

	jmp	SHORT $LN17@Resize_rea
$LN20@Resize_rea:

; 1973 :             }
; 1974 :         }
; 1975 :     }
; 1976 : 
; 1977 :     _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 1978 :     for (; 0 < _Count; --_Count) {

	test	rdx, rdx
	je	SHORT $LN17@Resize_rea
$LL18@Resize_rea:

; 1802 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	eax, DWORD PTR [rdi]
	mov	DWORD PTR [rcx], eax

; 1803 :         ++_Last;

	lea	rcx, QWORD PTR [rcx+4]

; 1978 :     for (; 0 < _Count; --_Count) {

	sub	rdx, 1
	jne	SHORT $LL18@Resize_rea
$LN17@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1537 :             _Uninitialized_move(_Myfirst, _Mylast, _Newvec, _Al);

	mov	rdx, QWORD PTR ?SubModelHovered@UICollisionCreator@@3V?$vector@_NV?$allocator@_N@std@@@std@@A
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rcx, r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1932 :     const auto _ULast = _Get_unwrapped(_Last);

	mov	r8, QWORD PTR ?SubModelHovered@UICollisionCreator@@3V?$vector@_NV?$allocator@_N@std@@@std@@A+8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	sub	r8, rdx

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	call	memmove
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1547 :         _Change_array(_Newvec, _Newsize, _Newcapacity);

	mov	r9, rbx
	lea	rcx, OFFSET FLAT:?SubModelHovered@UICollisionCreator@@3V?$vector@_NV?$allocator@_N@std@@@std@@A ; UICollisionCreator::SubModelHovered
	mov	r8, rsi
	mov	rdx, r14
	mov	r14, QWORD PTR [rsp+80]

; 1548 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	pop	rsi
	pop	rbx

; 1547 :         _Change_array(_Newvec, _Newsize, _Newcapacity);

	jmp	?_Change_array@?$vector@IV?$allocator@I@std@@@std@@AEAAXQEAI_K1@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Change_array
$LN64@Resize_rea:

; 1513 :             _Xlength();

	call	?_Xlength@?$vector@IV?$allocator@I@std@@@std@@CAXXZ ; std::vector<unsigned int,std::allocator<unsigned int> >::_Xlength
	int	3
$LN62@Resize_rea:
??$_Resize_reallocate@I@?$vector@IV?$allocator@I@std@@@std@@AEAAX_KAEBI@Z ENDP ; std::vector<unsigned int,std::allocator<unsigned int> >::_Resize_reallocate<unsigned int>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Uninitialized_fill_n@V?$allocator@I@std@@@std@@YAPEAIPEAI_KAEBIAEAV?$allocator@I@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Count$ = 56
_Val$ = 64
_Al$dead$ = 72
??$_Uninitialized_fill_n@V?$allocator@I@std@@@std@@YAPEAIPEAI_KAEBIAEAV?$allocator@I@0@@Z PROC ; std::_Uninitialized_fill_n<std::allocator<unsigned int> >, COMDAT

; 1954 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, const typename _Alloc::value_type& _Val, _Alloc& _Al) {

$LN28:
	push	rbx
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5027 :         return _CSTD memcmp(&_Val, &_Zero, sizeof(_Ty)) == 0;

	cmp	DWORD PTR [r8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1954 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, const typename _Alloc::value_type& _Val, _Alloc& _Al) {

	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5027 :         return _CSTD memcmp(&_Val, &_Zero, sizeof(_Ty)) == 0;

	jne	SHORT $LN6@Uninitiali
	mov	QWORD PTR [rsp+64], rdi

; 5016 :     _CSTD memset(_To_address(_Dest), 0, _Count * sizeof(_Iter_value_t<_CtgIt>));

	lea	rdi, QWORD PTR [rdx*4]
	mov	r8, rdi
	xor	edx, edx
	call	memset
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1972 :                 return _First + _Count;

	lea	rax, QWORD PTR [rdi+rbx]
	mov	rdi, QWORD PTR [rsp+64]

; 1983 : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN6@Uninitiali:

; 1973 :             }
; 1974 :         }
; 1975 :     }
; 1976 : 
; 1977 :     _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 1978 :     for (; 0 < _Count; --_Count) {

	test	rdx, rdx
	je	SHORT $LN3@Uninitiali
	npad	6
$LL4@Uninitiali:

; 1802 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	eax, DWORD PTR [r8]
	mov	DWORD PTR [rbx], eax

; 1803 :         ++_Last;

	add	rbx, 4

; 1973 :             }
; 1974 :         }
; 1975 :     }
; 1976 : 
; 1977 :     _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 1978 :     for (; 0 < _Count; --_Count) {

	sub	rdx, 1
	jne	SHORT $LL4@Uninitiali
$LN3@Uninitiali:

; 1979 :         _Backout._Emplace_back(_Val);
; 1980 :     }
; 1981 : 
; 1982 :     return _Backout._Release();

	mov	rax, rbx

; 1983 : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$_Uninitialized_fill_n@V?$allocator@I@std@@@std@@YAPEAIPEAI_KAEBIAEAV?$allocator@I@0@@Z ENDP ; std::_Uninitialized_fill_n<std::allocator<unsigned int> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$copy@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z
_TEXT	SEGMENT
$T1 = 0
$T2 = 16
$T3 = 32
__$ReturnUdt$ = 64
_First$ = 72
_Last$ = 80
_Dest$ = 88
??$copy@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z PROC ; std::copy<std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >,std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > >, COMDAT

; 4619 : _CONSTEXPR20 _OutIt copy(_InIt _First, _InIt _Last, _OutIt _Dest) { // copy [_First, _Last) to [_Dest, ...)

$LN82:
	push	rbx
	sub	rsp, 48					; 00000030H

; 4620 :     _Adl_verify_range(_First, _Last);
; 4621 :     const auto _UFirst = _Get_unwrapped(_First);
; 4622 :     const auto _ULast  = _Get_unwrapped(_Last);
; 4623 :     const auto _UDest  = _Get_unwrapped_n(_Dest, _Idl_distance<_InIt>(_UFirst, _ULast));
; 4624 :     _Seek_wrapped(_Dest, _STD _Copy_unchecked(_UFirst, _ULast, _UDest));

	movaps	xmm0, XMMWORD PTR [r9]
	mov	rbx, rcx
	movaps	xmm1, XMMWORD PTR [r8]
	movdqa	XMMWORD PTR $T1[rsp], xmm0
	movaps	xmm0, XMMWORD PTR [rdx]
	mov	rdx, QWORD PTR $T1[rsp+8]
	mov	r8, QWORD PTR $T1[rsp]
	movdqa	XMMWORD PTR $T3[rsp], xmm0
	mov	rcx, QWORD PTR $T3[rsp+8]
	mov	r9, QWORD PTR $T3[rsp]
	movdqa	XMMWORD PTR $T2[rsp], xmm1
	mov	r10, QWORD PTR $T2[rsp+8]
	mov	r11, QWORD PTR $T2[rsp]
$LL32@copy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2599 :         return this->_Myptr == _Right._Myptr && this->_Myoff == _Right._Myoff;

	cmp	r9, r11
	jne	SHORT $LN36@copy
	cmp	rcx, r10
	je	SHORT $LN70@copy
$LN36@copy:

; 2388 :         : _Myptr(_Ptr), _Myoff(_Off) {

	mov	eax, 1
	shl	eax, cl

; 2456 :         return (*_Getptr() & _Mask()) != 0;

	test	eax, DWORD PTR [r9]

; 2430 :         if (_Val) {

	mov	eax, DWORD PTR [r8]
	je	SHORT $LN57@copy

; 2431 :             *const_cast<_Vbase*>(_Getptr()) |= _Mask();

	bts	eax, edx

; 2432 :         } else {

	jmp	SHORT $LN78@copy
$LN57@copy:

; 2433 :             *const_cast<_Vbase*>(_Getptr()) &= ~_Mask();

	btr	eax, edx
$LN78@copy:

; 2674 :         if (this->_Myoff < _VBITS - 1) {

	mov	DWORD PTR [r8], eax
	cmp	rdx, 31
	jae	SHORT $LN23@copy

; 2675 :             ++this->_Myoff;

	inc	rdx

; 2676 :         } else { // move to next word

	jmp	SHORT $LN79@copy
$LN23@copy:

; 2677 :             this->_Myoff = 0;

	xor	edx, edx

; 2678 :             ++this->_Myptr;

	add	r8, 4
$LN79@copy:

; 2674 :         if (this->_Myoff < _VBITS - 1) {

	mov	QWORD PTR $T1[rsp+8], rdx
	cmp	rcx, 31
	jae	SHORT $LN31@copy

; 2675 :             ++this->_Myoff;

	inc	rcx

; 2676 :         } else { // move to next word

	jmp	SHORT $LL32@copy
$LN31@copy:

; 2677 :             this->_Myoff = 0;

	xor	ecx, ecx

; 2678 :             ++this->_Myptr;

	add	r9, 4
	jmp	SHORT $LL32@copy
$LN70@copy:
	mov	QWORD PTR $T1[rsp], r8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4625 :     return _Dest;

	mov	rax, rbx
	movaps	xmm0, XMMWORD PTR $T1[rsp]
	movups	XMMWORD PTR [rbx], xmm0

; 4626 : }

	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
??$copy@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z ENDP ; std::copy<std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >,std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_Vector_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_Vector_val<std::_Simple_types<char> >,1><>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1515 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	rax, rcx
	ret	0
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_Vector_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_Vector_val<std::_Simple_types<char> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$addressof@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@I@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@I@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_Vector_val<std::_Simple_types<unsigned int> > >, COMDAT

; 1607 :     return __builtin_addressof(_Val);

	mov	rax, rcx

; 1608 : }

	ret	0
??$addressof@V?$_Vector_val@U?$_Simple_types@I@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@I@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_Vector_val<std::_Simple_types<unsigned int> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Move_unchecked@PEAIPEAI@std@@YAPEAIPEAI00@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
??$_Move_unchecked@PEAIPEAI@std@@YAPEAIPEAI00@Z PROC	; std::_Move_unchecked<unsigned int *,unsigned int *>, COMDAT

; 4886 : _CONSTEXPR20 _OutIt _Move_unchecked(_InIt _First, _InIt _Last, _OutIt _Dest) {

$LN16:
	mov	QWORD PTR [rsp+32], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, r8

; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	sub	rbx, rcx

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rdx, rcx
	mov	r8, rbx
	mov	rcx, rdi
	call	memmove

; 4535 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4536 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

	lea	rax, QWORD PTR [rdi+rbx]

; 4887 :     // move [_First, _Last) to [_Dest, ...)
; 4888 :     // note: _Move_unchecked has callers other than the move family
; 4889 :     if constexpr (_Iter_move_cat<_InIt, _OutIt>::_Bitcopy_assignable) {
; 4890 : #if _HAS_CXX20
; 4891 :         if (!_STD is_constant_evaluated())
; 4892 : #endif // _HAS_CXX20
; 4893 :         {
; 4894 :             return _Copy_memmove(_First, _Last, _Dest);
; 4895 :         }
; 4896 :     }
; 4897 : 
; 4898 :     for (; _First != _Last; ++_Dest, (void) ++_First) {
; 4899 :         *_Dest = _STD move(*_First);
; 4900 :     }
; 4901 : 
; 4902 :     return _Dest;
; 4903 : }

	mov	rbx, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Move_unchecked@PEAIPEAI@std@@YAPEAIPEAI00@Z ENDP	; std::_Move_unchecked<unsigned int *,unsigned int *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$dead$ = 56
??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@QEAAPEAXI@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`scalar deleting destructor', COMDAT
$LN14:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	add	rcx, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rbx
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@QEAAPEAXI@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??F?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 8
??F?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@XZ PROC ; std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator--, COMDAT

; 2658 :         if (this->_Myoff != 0) {

	mov	rax, QWORD PTR [rcx+8]
	test	rax, rax
	je	SHORT $LN6@operator

; 2659 :             --this->_Myoff;

	dec	rax

; 2724 :         _Mybase::operator--();
; 2725 :         return *this;

	mov	QWORD PTR [rcx+8], rax

; 2726 :     }

	mov	rax, rcx
	ret	0
$LN6@operator:

; 2662 :             --this->_Myptr;

	add	QWORD PTR [rcx], -4

; 2726 :     }

	mov	rax, rcx
	mov	QWORD PTR [rcx+8], 31
	ret	0
??F?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@XZ ENDP ; std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator--
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??E?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 8
??E?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@XZ PROC ; std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator++, COMDAT

; 2674 :         if (this->_Myoff < _VBITS - 1) {

	mov	rax, QWORD PTR [rcx+8]
	cmp	rax, 31
	jae	SHORT $LN6@operator

; 2675 :             ++this->_Myoff;

	inc	rax

; 2713 :         _Mybase::operator++();
; 2714 :         return *this;

	mov	QWORD PTR [rcx+8], rax

; 2715 :     }

	mov	rax, rcx
	ret	0
$LN6@operator:

; 2678 :             ++this->_Myptr;

	add	QWORD PTR [rcx], 4

; 2715 :     }

	mov	rax, rcx
	mov	QWORD PTR [rcx+8], 0
	ret	0
??E?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@XZ ENDP ; std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Vector_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<char> >::_Vector_val<std::_Simple_types<char> >, COMDAT

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
	mov	rax, rcx
	ret	0
??0?$_Vector_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<char> >::_Vector_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Xlength@?$vector@DV?$allocator@D@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@DV?$allocator@D@std@@@std@@CAXXZ PROC ; std::vector<char,std::allocator<char> >::_Xlength, COMDAT

; 2137 :     [[noreturn]] static void _Xlength() {

$LN4:
	sub	rsp, 40					; 00000028H

; 2138 :         _Xlength_error("vector too long");

	lea	rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN3@Xlength:
?_Xlength@?$vector@DV?$allocator@D@std@@@std@@CAXXZ ENDP ; std::vector<char,std::allocator<char> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Change_array@?$vector@DV?$allocator@D@std@@@std@@AEAAXQEAD_K1@Z
_TEXT	SEGMENT
this$ = 48
_Newvec$ = 56
_Newsize$ = 64
_Newcapacity$ = 72
?_Change_array@?$vector@DV?$allocator@D@std@@@std@@AEAAXQEAD_K1@Z PROC ; std::vector<char,std::allocator<char> >::_Change_array, COMDAT

; 2013 :     _CONSTEXPR20 void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

$LN30:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rsi, r9

; 2014 :         // orphan all iterators, discard old array, acquire new array
; 2015 :         auto& _Al         = _Getal();
; 2016 :         auto& _My_data    = _Mypair._Myval2;
; 2017 :         pointer& _Myfirst = _My_data._Myfirst;
; 2018 :         pointer& _Mylast  = _My_data._Mylast;
; 2019 :         pointer& _Myend   = _My_data._Myend;
; 2020 : 
; 2021 :         _My_data._Orphan_all();
; 2022 : 
; 2023 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	mov	rbp, r8
	mov	rdi, rdx
	test	rcx, rcx
	je	SHORT $LN8@Change_arr

; 2024 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2025 :             _ASAN_VECTOR_REMOVE;
; 2026 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN20@Change_arr

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN17@Change_arr

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN20@Change_arr:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN8@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2030 :         _Mylast  = _Newvec + _Newsize;

	lea	rax, QWORD PTR [rdi+rbp]
	mov	QWORD PTR [rbx], rdi

; 2033 :     }

	mov	rbp, QWORD PTR [rsp+64]
	mov	QWORD PTR [rbx+8], rax
	lea	rax, QWORD PTR [rdi+rsi]
	mov	rsi, QWORD PTR [rsp+72]
	mov	QWORD PTR [rbx+16], rax
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN17@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN27@Change_arr:
?_Change_array@?$vector@DV?$allocator@D@std@@@std@@AEAAXQEAD_K1@Z ENDP ; std::vector<char,std::allocator<char> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Calculate_growth@?$vector@DV?$allocator@D@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
this$ = 8
_Newsize$ = 16
?_Calculate_growth@?$vector@DV?$allocator@D@std@@@std@@AEBA_K_K@Z PROC ; std::vector<char,std::allocator<char> >::_Calculate_growth, COMDAT

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	r8, QWORD PTR [rcx+16]

; 1962 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1963 :         const size_type _Oldcapacity = capacity();
; 1964 :         const auto _Max              = max_size();
; 1965 : 
; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rax, 9223372036854775807		; 7fffffffffffffffH

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	sub	r8, QWORD PTR [rcx]

; 1962 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1963 :         const size_type _Oldcapacity = capacity();
; 1964 :         const auto _Max              = max_size();
; 1965 : 
; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rcx, rax
	mov	r9, r8
	shr	r9, 1
	sub	rcx, r9
	cmp	r8, rcx
	ja	SHORT $LN1@Calculate_

; 1967 :             return _Max; // geometric growth would overflow
; 1968 :         }
; 1969 : 
; 1970 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	lea	rax, QWORD PTR [r9+r8]

; 1971 : 
; 1972 :         if (_Geometric < _Newsize) {

	cmp	rax, rdx
	cmovb	rax, rdx
$LN1@Calculate_:

; 1973 :             return _Newsize; // geometric growth would be insufficient
; 1974 :         }
; 1975 : 
; 1976 :         return _Geometric; // geometric growth is sufficient
; 1977 :     }

	ret	0
?_Calculate_growth@?$vector@DV?$allocator@D@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<char,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?max_size@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$dead$ = 8
?max_size@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ PROC ; std::vector<char,std::allocator<char> >::max_size, COMDAT

; 1873 :         return (_STD min)(

	mov	rax, 9223372036854775807		; 7fffffffffffffffH

; 1874 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1875 :     }

	ret	0
?max_size@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ ENDP ; std::vector<char,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??4?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@AEBV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??4?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@AEBV01@@Z PROC ; std::_Vb_reference<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator=, COMDAT

; 2425 :     _CONSTEXPR20 _Vb_reference& operator=(const _Vb_reference& _Right) noexcept {

$LN19:
	mov	QWORD PTR [rsp+8], rbx

; 2456 :         return (*_Getptr() & _Mask()) != 0;

	mov	r11, QWORD PTR [rcx]

; 2425 :     _CONSTEXPR20 _Vb_reference& operator=(const _Vb_reference& _Right) noexcept {

	mov	r10, rcx

; 2456 :         return (*_Getptr() & _Mask()) != 0;

	mov	rax, QWORD PTR [rdx]

; 2478 :         return static_cast<_Vbase>(1) << this->_Myoff;

	mov	r8d, 1

; 2456 :         return (*_Getptr() & _Mask()) != 0;

	mov	ebx, DWORD PTR [rcx+8]

; 2478 :         return static_cast<_Vbase>(1) << this->_Myoff;

	mov	rcx, QWORD PTR [rdx+8]

; 2456 :         return (*_Getptr() & _Mask()) != 0;

	mov	r9d, DWORD PTR [r11]

; 2478 :         return static_cast<_Vbase>(1) << this->_Myoff;

	shl	r8d, cl

; 2456 :         return (*_Getptr() & _Mask()) != 0;

	test	r8d, DWORD PTR [rax]

; 2430 :         if (_Val) {

	mov	rax, r10
	je	SHORT $LN8@operator

; 2431 :             *const_cast<_Vbase*>(_Getptr()) |= _Mask();

	bts	r9d, ebx

; 2426 :         return *this = static_cast<bool>(_Right);
; 2427 :     }

	mov	DWORD PTR [r11], r9d
	mov	rbx, QWORD PTR [rsp+8]
	ret	0
$LN8@operator:

; 2433 :             *const_cast<_Vbase*>(_Getptr()) &= ~_Mask();

	btr	r9d, ebx

; 2426 :         return *this = static_cast<bool>(_Right);
; 2427 :     }

	mov	DWORD PTR [r11], r9d
	mov	rbx, QWORD PTR [rsp+8]
	ret	0
??4?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@AEBV01@@Z ENDP ; std::_Vb_reference<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??F?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 8
??F?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@XZ PROC ; std::_Vb_const_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator--, COMDAT

; 2658 :         if (this->_Myoff != 0) {

	mov	rax, QWORD PTR [rcx+8]
	test	rax, rax
	je	SHORT $LN4@operator

; 2659 :             --this->_Myoff;

	dec	rax

; 2528 :         _Dec();
; 2529 :         return *this;

	mov	QWORD PTR [rcx+8], rax

; 2530 :     }

	mov	rax, rcx
	ret	0
$LN4@operator:

; 2662 :             --this->_Myptr;

	add	QWORD PTR [rcx], -4

; 2530 :     }

	mov	rax, rcx
	mov	QWORD PTR [rcx+8], 31
	ret	0
??F?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@XZ ENDP ; std::_Vb_const_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator--
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??E?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 8
??E?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@XZ PROC ; std::_Vb_const_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator++, COMDAT

; 2674 :         if (this->_Myoff < _VBITS - 1) {

	mov	rax, QWORD PTR [rcx+8]
	cmp	rax, 31
	jae	SHORT $LN4@operator

; 2675 :             ++this->_Myoff;

	inc	rax

; 2517 :         _Inc();
; 2518 :         return *this;

	mov	QWORD PTR [rcx+8], rax

; 2519 :     }

	mov	rax, rcx
	ret	0
$LN4@operator:

; 2678 :             ++this->_Myptr;

	add	QWORD PTR [rcx], 4

; 2519 :     }

	mov	rax, rcx
	mov	QWORD PTR [rcx+8], 0
	ret	0
??E?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@XZ ENDP ; std::_Vb_const_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Getal@?$vector@DV?$allocator@D@std@@@std@@AEBAAEBV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@DV?$allocator@D@std@@@std@@AEBAAEBV?$allocator@D@2@XZ PROC ; std::vector<char,std::allocator<char> >::_Getal, COMDAT

; 2185 :         return _Mypair._Get_first();

	mov	rax, rcx

; 2186 :     }

	ret	0
?_Getal@?$vector@DV?$allocator@D@std@@@std@@AEBAAEBV?$allocator@D@2@XZ ENDP ; std::vector<char,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?capacity@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?capacity@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ PROC ; std::vector<char,std::allocator<char> >::capacity, COMDAT

; 1878 :         auto& _My_data = _Mypair._Myval2;
; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	rax, QWORD PTR [rcx+16]
	sub	rax, QWORD PTR [rcx]

; 1880 :     }

	ret	0
?capacity@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ ENDP ; std::vector<char,std::allocator<char> >::capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??4?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@_N@Z
_TEXT	SEGMENT
this$ = 8
_Val$ = 16
??4?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@_N@Z PROC ; std::_Vb_reference<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator=, COMDAT

; 2429 :     _CONSTEXPR20 _Vb_reference& operator=(bool _Val) noexcept {

	mov	r8, QWORD PTR [rcx]
	mov	r9d, DWORD PTR [rcx+8]
	mov	eax, DWORD PTR [r8]

; 2430 :         if (_Val) {

	test	dl, dl
	je	SHORT $LN2@operator

; 2431 :             *const_cast<_Vbase*>(_Getptr()) |= _Mask();

	bts	eax, r9d

; 2434 :         }
; 2435 : 
; 2436 :         return *this;
; 2437 :     }

	mov	DWORD PTR [r8], eax
	mov	rax, rcx
	ret	0
$LN2@operator:

; 2432 :         } else {
; 2433 :             *const_cast<_Vbase*>(_Getptr()) &= ~_Mask();

	btr	eax, r9d

; 2434 :         }
; 2435 : 
; 2436 :         return *this;
; 2437 :     }

	mov	DWORD PTR [r8], eax
	mov	rax, rcx
	ret	0
??4?$_Vb_reference@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAAEAV01@_N@Z ENDP ; std::_Vb_reference<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Inc@?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?_Inc@?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAXXZ PROC ; std::_Vb_const_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::_Inc, COMDAT

; 2667 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2668 :         const auto _Cont = static_cast<const _Mycont*>(this->_Getcont());
; 2669 :         _STL_VERIFY(_Cont, "cannot increment value-initialized vector<bool> iterator");
; 2670 :         _STL_VERIFY(this->_Total_off(_Cont) < static_cast<_Difference_type>(_Cont->_Mysize),
; 2671 :             "cannot increment vector<bool> end iterator");
; 2672 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2673 : 
; 2674 :         if (this->_Myoff < _VBITS - 1) {

	mov	rax, QWORD PTR [rcx+8]
	cmp	rax, 31
	jae	SHORT $LN2@Inc

; 2675 :             ++this->_Myoff;

	inc	rax

; 2679 :         }
; 2680 :     }

	mov	QWORD PTR [rcx+8], rax
	ret	0
$LN2@Inc:

; 2676 :         } else { // move to next word
; 2677 :             this->_Myoff = 0;
; 2678 :             ++this->_Myptr;

	add	QWORD PTR [rcx], 4

; 2679 :         }
; 2680 :     }

	mov	QWORD PTR [rcx+8], 0
	ret	0
?_Inc@?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAXXZ ENDP ; std::_Vb_const_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::_Inc
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Dec@?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?_Dec@?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAXXZ PROC ; std::_Vb_const_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::_Dec, COMDAT

; 2652 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2653 :         const auto _Cont = static_cast<const _Mycont*>(this->_Getcont());
; 2654 :         _STL_VERIFY(_Cont, "cannot decrement value-initialized vector<bool> iterator");
; 2655 :         _STL_VERIFY(this->_Total_off(_Cont) > 0, "cannot decrement vector<bool> begin iterator");
; 2656 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2657 : 
; 2658 :         if (this->_Myoff != 0) {

	mov	rax, QWORD PTR [rcx+8]
	test	rax, rax
	je	SHORT $LN2@Dec

; 2659 :             --this->_Myoff;

	dec	rax

; 2663 :         }
; 2664 :     }

	mov	QWORD PTR [rcx+8], rax
	ret	0
$LN2@Dec:

; 2660 :         } else { // move to previous word
; 2661 :             this->_Myoff = _VBITS - 1;
; 2662 :             --this->_Myptr;

	add	QWORD PTR [rcx], -4

; 2663 :         }
; 2664 :     }

	mov	QWORD PTR [rcx+8], 31
	ret	0
?_Dec@?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEAAXXZ ENDP ; std::_Vb_const_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::_Dec
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_Vector_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 1527 :         return *this;

	mov	rax, rcx

; 1528 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_Vector_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Copy_memmove@PEADPEAD@std@@YAPEADPEAD00@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
??$_Copy_memmove@PEADPEAD@std@@YAPEADPEAD00@Z PROC	; std::_Copy_memmove<char *,char *>, COMDAT

; 4526 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

$LN4:
	mov	QWORD PTR [rsp+32], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, r8

; 4527 :     auto _FirstPtr              = _To_address(_First);
; 4528 :     auto _LastPtr               = _To_address(_Last);
; 4529 :     auto _DestPtr               = _To_address(_Dest);
; 4530 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4531 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4532 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	sub	rbx, rcx

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rdx, rcx
	mov	r8, rbx
	mov	rcx, rdi
	call	memmove

; 4535 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4536 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

	lea	rax, QWORD PTR [rdi+rbx]

; 4537 :     } else {
; 4538 :         return _Dest + (_LastPtr - _FirstPtr);
; 4539 :     }
; 4540 : }

	mov	rbx, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Copy_memmove@PEADPEAD@std@@YAPEADPEAD00@Z ENDP	; std::_Copy_memmove<char *,char *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$construct@DD@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@QEAD$$QEAD@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@DD@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@QEAD$$QEAD@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::construct<char,char>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	movzx	eax, BYTE PTR [r8]
	mov	BYTE PTR [rdx], al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 721  :     }

	ret	0
??$construct@DD@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAXAEAV?$allocator@D@1@QEAD$$QEAD@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::construct<char,char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEADV?$allocator@D@std@@@std@@YAPEADQEAD0PEADAEAV?$allocator@D@0@@Z
_TEXT	SEGMENT
_First$ = 64
_Last$ = 72
_Dest$ = 80
_Al$dead$ = 88
??$_Uninitialized_move@PEADV?$allocator@D@std@@@std@@YAPEADQEAD0PEADAEAV?$allocator@D@0@@Z PROC ; std::_Uninitialized_move<char *,std::allocator<char> >, COMDAT

; 1927 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN23:
	push	rbx
	push	rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rsi, r8
	mov	rdi, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	mov	r8, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1927 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	sub	r8, rcx

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rdx, rcx
	mov	rcx, rsi
	call	memmove
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1940 :             return _Dest + (_ULast - _UFirst);

	sub	rsi, rbx
	lea	rax, QWORD PTR [rdi+rsi]

; 1941 :         }
; 1942 :     }
; 1943 : 
; 1944 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1945 :     for (; _UFirst != _ULast; ++_UFirst) {
; 1946 :         _Backout._Emplace_back(_STD move(*_UFirst));
; 1947 :     }
; 1948 : 
; 1949 :     return _Backout._Release();
; 1950 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	pop	rsi
	pop	rbx
	ret	0
??$_Uninitialized_move@PEADV?$allocator@D@std@@@std@@YAPEADQEAD0PEADAEAV?$allocator@D@0@@Z ENDP ; std::_Uninitialized_move<char *,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@@std@@YA$$QEAV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@@std@@YA$$QEAV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@AEAV10@@Z PROC ; std::forward<std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > >, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@@std@@YA$$QEAV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@AEAV10@@Z ENDP ; std::forward<std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Is_all_bits_zero@I@std@@YA_NAEBI@Z
_TEXT	SEGMENT
_Val$ = 8
??$_Is_all_bits_zero@I@std@@YA_NAEBI@Z PROC		; std::_Is_all_bits_zero<unsigned int>, COMDAT

; 5021 :     // checks if scalar type has all bits set to zero
; 5022 :     _STL_INTERNAL_STATIC_ASSERT(is_scalar_v<_Ty> && !is_member_pointer_v<_Ty>);
; 5023 :     if constexpr (is_same_v<_Ty, nullptr_t>) {
; 5024 :         return true;
; 5025 :     } else {
; 5026 :         constexpr _Ty _Zero{};
; 5027 :         return _CSTD memcmp(&_Val, &_Zero, sizeof(_Ty)) == 0;

	cmp	DWORD PTR [rcx], 0
	sete	al

; 5028 :     }
; 5029 : }

	ret	0
??$_Is_all_bits_zero@I@std@@YA_NAEBI@Z ENDP		; std::_Is_all_bits_zero<unsigned int>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Fill_zero_memset@PEAI@std@@YAXPEAI_K@Z
_TEXT	SEGMENT
_Dest$ = 8
_Count$ = 16
??$_Fill_zero_memset@PEAI@std@@YAXPEAI_K@Z PROC		; std::_Fill_zero_memset<unsigned int *>, COMDAT

; 5016 :     _CSTD memset(_To_address(_Dest), 0, _Count * sizeof(_Iter_value_t<_CtgIt>));

	lea	r8, QWORD PTR [rdx*4]
	xor	edx, edx
	jmp	memset
??$_Fill_zero_memset@PEAI@std@@YAXPEAI_K@Z ENDP		; std::_Fill_zero_memset<unsigned int *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Emplace_back@AEBI@?$_Uninitialized_backout_al@V?$allocator@I@std@@@std@@QEAAXAEBI@Z
_TEXT	SEGMENT
this$ = 8
<_Vals_0>$ = 16
??$_Emplace_back@AEBI@?$_Uninitialized_backout_al@V?$allocator@I@std@@@std@@QEAAXAEBI@Z PROC ; std::_Uninitialized_backout_al<std::allocator<unsigned int> >::_Emplace_back<unsigned int const &>, COMDAT

; 1802 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	r8, QWORD PTR [rcx+8]
	mov	eax, DWORD PTR [rdx]
	mov	DWORD PTR [r8], eax

; 1803 :         ++_Last;

	add	QWORD PTR [rcx+8], 4

; 1804 :     }

	ret	0
??$_Emplace_back@AEBI@?$_Uninitialized_backout_al@V?$allocator@I@std@@@std@@QEAAXAEBI@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<unsigned int> >::_Emplace_back<unsigned int const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Copy_unchecked@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
??$_Copy_unchecked@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z PROC ; std::_Copy_unchecked<std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >,std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >,std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > >, COMDAT

; 4589 : _CONSTEXPR20 _OutIt _Copy_unchecked(_InIt _First, _Sent _Last, _OutIt _Dest) {

$LN59:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	push	rsi
	sub	rsp, 32					; 00000020H
	mov	r10, rdx
	mov	rbp, rcx

; 4611 :     for (; _First != _Last; ++_Dest, (void) ++_First) {

	mov	rcx, r10
	mov	rdx, r8
	mov	rbx, r9
	mov	rsi, r8
	call	??8?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vb_const_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator==
	test	al, al
	jne	$LN3@Copy_unche
	mov	r9, QWORD PTR [r10+8]
	mov	r8, QWORD PTR [rbx+8]
	mov	QWORD PTR [rsp+48], rdi
	npad	5
$LL20@Copy_unche:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2388 :         : _Myptr(_Ptr), _Myoff(_Off) {

	mov	rdi, QWORD PTR [r10]
	mov	rcx, r9
	mov	r11, QWORD PTR [rbx]
	mov	eax, 1
	shl	eax, cl

; 2456 :         return (*_Getptr() & _Mask()) != 0;

	mov	edx, DWORD PTR [r11]
	test	eax, DWORD PTR [rdi]

; 2430 :         if (_Val) {

	je	SHORT $LN41@Copy_unche

; 2431 :             *const_cast<_Vbase*>(_Getptr()) |= _Mask();

	bts	edx, r8d

; 2432 :         } else {

	jmp	SHORT $LN42@Copy_unche
$LN41@Copy_unche:

; 2433 :             *const_cast<_Vbase*>(_Getptr()) &= ~_Mask();

	btr	edx, r8d
$LN42@Copy_unche:

; 2674 :         if (this->_Myoff < _VBITS - 1) {

	mov	DWORD PTR [r11], edx
	cmp	r8, 31
	jae	SHORT $LN11@Copy_unche

; 2675 :             ++this->_Myoff;

	inc	r8

; 2676 :         } else { // move to next word

	jmp	SHORT $LN12@Copy_unche
$LN11@Copy_unche:

; 2677 :             this->_Myoff = 0;
; 2678 :             ++this->_Myptr;

	lea	rax, QWORD PTR [r11+4]
	xor	r8d, r8d
	mov	QWORD PTR [rbx], rax
$LN12@Copy_unche:

; 2674 :         if (this->_Myoff < _VBITS - 1) {

	cmp	r9, 31
	jae	SHORT $LN19@Copy_unche

; 2675 :             ++this->_Myoff;

	inc	r9

; 2676 :         } else { // move to next word

	jmp	SHORT $LN49@Copy_unche
$LN19@Copy_unche:

; 2677 :             this->_Myoff = 0;
; 2678 :             ++this->_Myptr;

	lea	rax, QWORD PTR [rdi+4]
	xor	r9d, r9d
	mov	QWORD PTR [r10], rax
$LN49@Copy_unche:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4611 :     for (; _First != _Last; ++_Dest, (void) ++_First) {

	mov	rdx, rsi
	mov	QWORD PTR [r10+8], r9
	mov	rcx, r10
	call	??8?$_Vb_const_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vb_const_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >::operator==
	test	al, al
	je	SHORT $LL20@Copy_unche
	mov	rdi, QWORD PTR [rsp+48]
	mov	QWORD PTR [rbx+8], r8
$LN3@Copy_unche:

; 4612 :         *_Dest = *_First;
; 4613 :     }
; 4614 : 
; 4615 :     return _Dest;

	movaps	xmm0, XMMWORD PTR [rbx]
	mov	rax, rbp

; 4616 : }

	mov	rbx, QWORD PTR [rsp+56]
	movups	XMMWORD PTR [rbp], xmm0
	mov	rbp, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rsi
	ret	0
??$_Copy_unchecked@V?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@V12@V12@@std@@YA?AV?$_Vb_iterator@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@@0@V10@00@Z ENDP ; std::_Copy_unchecked<std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >,std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > >,std::_Vb_iterator<std::_Wrap_alloc<std::allocator<unsigned int> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@D@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@D@std@@@std@@QEAAX_K@Z PROC ; std::_Uninitialized_backout_al<std::allocator<char> >::__autoclassinit2, COMDAT
	xorps	xmm0, xmm0
	xor	eax, eax
	movups	XMMWORD PTR [rcx], xmm0
	mov	QWORD PTR [rcx+16], rax
	ret	0
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@D@std@@@std@@QEAAX_K@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<char> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@D@std@@@std@@QEAAPEADXZ
_TEXT	SEGMENT
this$ = 8
?_Release@?$_Uninitialized_backout_al@V?$allocator@D@std@@@std@@QEAAPEADXZ PROC ; std::_Uninitialized_backout_al<std::allocator<char> >::_Release, COMDAT

; 1807 :         _First = _Last;

	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rcx], rax

; 1808 :         return _Last;
; 1809 :     }

	ret	0
?_Release@?$_Uninitialized_backout_al@V?$allocator@D@std@@@std@@QEAAPEADXZ ENDP ; std::_Uninitialized_backout_al<std::allocator<char> >::_Release
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Uninitialized_backout_al@V?$allocator@D@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<char> >::~_Uninitialized_backout_al<std::allocator<char> >, COMDAT

; 1797 :         _Destroy_range(_First, _Last, _Al);
; 1798 :     }

	ret	0
??1?$_Uninitialized_backout_al@V?$allocator@D@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<char> >::~_Uninitialized_backout_al<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@D@std@@@std@@QEAA@PEADAEAV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 8
_Dest$ = 16
_Al_$ = 24
??0?$_Uninitialized_backout_al@V?$allocator@D@std@@@std@@QEAA@PEADAEAV?$allocator@D@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<char> >::_Uninitialized_backout_al<std::allocator<char> >, COMDAT

; 1791 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], rdx
	mov	QWORD PTR [rcx+16], r8
	ret	0
??0?$_Uninitialized_backout_al@V?$allocator@D@std@@@std@@QEAA@PEADAEAV?$allocator@D@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<char> >::_Uninitialized_backout_al<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@DD$0A@@std@@YAPEADQEAD$$QEAD@Z
_TEXT	SEGMENT
_Location$ = 8
<_Args_0>$ = 16
??$construct_at@DD$0A@@std@@YAPEADQEAD$$QEAD@Z PROC	; std::construct_at<char,char,0>, COMDAT

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	movzx	eax, BYTE PTR [rdx]
	mov	BYTE PTR [rcx], al
	mov	rax, rcx

; 242  : }

	ret	0
??$construct_at@DD$0A@@std@@YAPEADQEAD$$QEAD@Z ENDP	; std::construct_at<char,char,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Emplace_back@D@?$_Uninitialized_backout_al@V?$allocator@D@std@@@std@@QEAAX$$QEAD@Z
_TEXT	SEGMENT
this$ = 8
<_Vals_0>$ = 16
??$_Emplace_back@D@?$_Uninitialized_backout_al@V?$allocator@D@std@@@std@@QEAAX$$QEAD@Z PROC ; std::_Uninitialized_backout_al<std::allocator<char> >::_Emplace_back<char>, COMDAT

; 1802 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	r8, QWORD PTR [rcx+8]
	movzx	eax, BYTE PTR [rdx]
	mov	BYTE PTR [r8], al

; 1803 :         ++_Last;

	inc	QWORD PTR [rcx+8]

; 1804 :     }

	ret	0
??$_Emplace_back@D@?$_Uninitialized_backout_al@V?$allocator@D@std@@@std@@QEAAX$$QEAD@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<char> >::_Emplace_back<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@AEBQEBD@std@@YAAEBQEBDAEBQEBD@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEBQEBD@std@@YAAEBQEBDAEBQEBD@Z PROC		; std::forward<char const * const &>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@AEBQEBD@std@@YAAEBQEBDAEBQEBD@Z ENDP		; std::forward<char const * const &>
_TEXT	ENDS
END

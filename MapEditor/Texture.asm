; Listing generated by Microsoft (R) Optimizing Compiler Version 19.37.32822.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??0Texture@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@HHIIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; Texture::Texture
PUBLIC	?ActivateTextureUnit@Texture@@QEAAXXZ		; Texture::ActivateTextureUnit
PUBLIC	?Bind@Texture@@QEAAXXZ				; Texture::Bind
PUBLIC	?texUnit@Texture@@QEAAXAEAVShader@@PEBDI@Z	; Texture::texUnit
PUBLIC	?Delete@Texture@@QEAAXXZ			; Texture::Delete
PUBLIC	??0Texture@@QEAA@PEAVTextureToGo@@IIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Texture::Texture
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Texture@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@HHIIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DD imagerel $LN60
	DD	imagerel $LN60+441
	DD	imagerel $unwind$??0Texture@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@HHIIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?texUnit@Texture@@QEAAXAEAVShader@@PEBDI@Z DD imagerel $LN4
	DD	imagerel $LN4+44
	DD	imagerel $unwind$?texUnit@Texture@@QEAAXAEAVShader@@PEBDI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Texture@@QEAA@PEAVTextureToGo@@IIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN25
	DD	imagerel $LN25+208
	DD	imagerel $unwind$??0Texture@@QEAA@PEAVTextureToGo@@IIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0Texture@@QEAA@PEAVTextureToGo@@IIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 08H
	DB	0d0H
	DB	04H
	DB	'2'
	DB	06H
	DB	'.'
	DB	04H
	DB	'8'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0Texture@@QEAA@PEAVTextureToGo@@IIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 06H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	081H
	DB	02H
	DB	03eH
	DD	imagerel ?dtor$1@?0???0Texture@@QEAA@PEAVTextureToGo@@IIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DB	02cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0b0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0Texture@@QEAA@PEAVTextureToGo@@IIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0Texture@@QEAA@PEAVTextureToGo@@IIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	imagerel $ip2state$??0Texture@@QEAA@PEAVTextureToGo@@IIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Texture@@QEAA@PEAVTextureToGo@@IIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 092719H
	DD	01e3415H
	DD	0160115H
	DD	0e00cf00eH
	DD	06009700aH
	DD	05008H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??0Texture@@QEAA@PEAVTextureToGo@@IIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	0aaH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?texUnit@Texture@@QEAAXAEAVShader@@PEBDI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0Texture@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@HHIIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DB 06H
	DB	0f0H
	DB	06H
	DB	'U', 03H
	DB	02H
	DB	0a6H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0Texture@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@HHIIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DB 06H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0c0H
	DB	034H
	DD	imagerel ??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ
	DB	0b0H
	DB	036H
	DD	imagerel ?dtor$2@?0???0Texture@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@HHIIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0Texture@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@HHIIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0Texture@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@HHIIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
	DD	imagerel $ip2state$??0Texture@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@HHIIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Texture@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@HHIIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DD 071c19H
	DD	0f009e20dH
	DD	07005e007H
	DD	050036004H
	DD	03002H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??0Texture@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@HHIIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
	DD	06aH
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Texture.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Texture.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Texture.cpp
;	COMDAT ??0Texture@@QEAA@PEAVTextureToGo@@IIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
this$GSCopy$ = 80
$T1 = 88
$T2 = 104
TexSampler$GSCopy$ = 160
__$ArrayPad$ = 168
this$ = 224
TxtToGo$ = 232
ValueType$dead$ = 240
texType$dead$ = 248
slot$dead$ = 256
format$dead$ = 264
pixelType$dead$ = 272
TexSampler$ = 280
??0Texture@@QEAA@PEAVTextureToGo@@IIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Texture::Texture, COMDAT

; 116  : {

$LN25:
	mov	r11, rsp
	mov	QWORD PTR [r11+24], rbx
	push	rbp
	push	rsi
	push	rdi
	push	r14
	push	r15
	sub	rsp, 176				; 000000b0H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbp, rdx
	mov	r15, rcx

; 115  : Texture::Texture(TextureToGo* TxtToGo, GLenum ValueType, GLenum texType, GLenum slot, GLenum format, GLenum pixelType, std::string TexSampler)

	mov	QWORD PTR this$GSCopy$[rsp], rcx
	mov	r14, QWORD PTR TexSampler$[rsp]
	mov	QWORD PTR [r11-56], r14
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR [rcx+8], xmm0

; 4821 :         _My_data._Mysize = 0;

	mov	QWORD PTR [rcx+24], 0

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR [rcx+32], 15

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR [rcx+8], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Texture.cpp

; 117  : 	this->Texture::Texture(TxtToGo->GetPixels(), TxtToGo->GetWidth(), TxtToGo->GetHeight(), ValueType, texType, slot, format, pixelType, TexSampler);

	lea	rax, QWORD PTR [r11-88]
	mov	QWORD PTR [r11-128], rax
	mov	rdx, r14
	lea	rcx, QWORD PTR [r11-88]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rsi, rax
	movzx	ebx, WORD PTR [rbp+34]
	movzx	edi, WORD PTR [rbp+32]
	lea	rdx, QWORD PTR [rbp+8]
	lea	rcx, QWORD PTR $T2[rsp]
	call	??0?$vector@EV?$allocator@E@std@@@std@@QEAA@AEBV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::vector<unsigned char,std::allocator<unsigned char> >
	npad	1
	mov	QWORD PTR [rsp+72], rsi
	mov	r9d, ebx
	mov	r8d, edi
	mov	rdx, rax
	mov	rcx, r15
	call	??0Texture@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@HHIIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; Texture::Texture
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, r14
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Texture.cpp

; 118  : }

	mov	rax, r15
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+240]
	add	rsp, 176				; 000000b0H
	pop	r15
	pop	r14
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
??0Texture@@QEAA@PEAVTextureToGo@@IIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Texture::Texture
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$GSCopy$ = 80
$T1 = 88
$T2 = 104
TexSampler$GSCopy$ = 160
__$ArrayPad$ = 168
this$ = 224
TxtToGo$ = 232
ValueType$dead$ = 240
texType$dead$ = 248
slot$dead$ = 256
format$dead$ = 264
pixelType$dead$ = 272
TexSampler$ = 280
?dtor$0@?0???0Texture@@QEAA@PEAVTextureToGo@@IIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `Texture::Texture'::`1'::dtor$0
	mov	rcx, QWORD PTR TexSampler$GSCopy$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0???0Texture@@QEAA@PEAVTextureToGo@@IIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `Texture::Texture'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$GSCopy$ = 80
$T1 = 88
$T2 = 104
TexSampler$GSCopy$ = 160
__$ArrayPad$ = 168
this$ = 224
TxtToGo$ = 232
ValueType$dead$ = 240
texType$dead$ = 248
slot$dead$ = 256
format$dead$ = 264
pixelType$dead$ = 272
TexSampler$ = 280
?dtor$1@?0???0Texture@@QEAA@PEAVTextureToGo@@IIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `Texture::Texture'::`1'::dtor$1
	mov	rcx, QWORD PTR this$GSCopy$[rdx]
	add	rcx, 8
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0???0Texture@@QEAA@PEAVTextureToGo@@IIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `Texture::Texture'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$GSCopy$ = 80
$T1 = 88
$T2 = 104
TexSampler$GSCopy$ = 160
__$ArrayPad$ = 168
this$ = 224
TxtToGo$ = 232
ValueType$dead$ = 240
texType$dead$ = 248
slot$dead$ = 256
format$dead$ = 264
pixelType$dead$ = 272
TexSampler$ = 280
?dtor$2@?0???0Texture@@QEAA@PEAVTextureToGo@@IIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `Texture::Texture'::`1'::dtor$2
	mov	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$2@?0???0Texture@@QEAA@PEAVTextureToGo@@IIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `Texture::Texture'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Texture.cpp
;	COMDAT ?Delete@Texture@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?Delete@Texture@@QEAAXXZ PROC				; Texture::Delete, COMDAT

; 145  : 	glDeleteTextures(1, &ID);

	mov	rdx, rcx
	mov	ecx, 1
	rex_jmp	QWORD PTR glad_glDeleteTextures
?Delete@Texture@@QEAAXXZ ENDP				; Texture::Delete
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Texture.cpp
;	COMDAT ?texUnit@Texture@@QEAAXAEAVShader@@PEBDI@Z
_TEXT	SEGMENT
this$dead$ = 48
shader$dead$ = 56
uniform$ = 64
unit$ = 72
?texUnit@Texture@@QEAAXAEAVShader@@PEBDI@Z PROC		; Texture::texUnit, COMDAT

; 121  : {

$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H

; 122  : 	// Gets the location of the uniform
; 123  : 	GLuint texUni = glGetUniformLocation(shader.ID, uniform);

	mov	rax, QWORD PTR glad_glGetUniformLocation
	mov	rdx, r8
	mov	ecx, DWORD PTR ds:0
	mov	ebx, r9d
	call	rax

; 124  : 	// Sets the value of the uniform
; 125  : 	glUniform1i(texUni, unit);

	mov	edx, ebx
	mov	ecx, eax

; 126  : }

	add	rsp, 32					; 00000020H
	pop	rbx

; 124  : 	// Sets the value of the uniform
; 125  : 	glUniform1i(texUni, unit);

	rex_jmp	QWORD PTR glad_glUniform1i
?texUnit@Texture@@QEAAXAEAVShader@@PEBDI@Z ENDP		; Texture::texUnit
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Texture.cpp
;	COMDAT ?Bind@Texture@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?Bind@Texture@@QEAAXXZ PROC				; Texture::Bind, COMDAT

; 130  : 	glBindTexture(type, ID);

	mov	edx, DWORD PTR [rcx]
	mov	ecx, DWORD PTR [rcx+4]
	rex_jmp	QWORD PTR glad_glBindTexture
?Bind@Texture@@QEAAXXZ ENDP				; Texture::Bind
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Texture.cpp
;	COMDAT ?ActivateTextureUnit@Texture@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?ActivateTextureUnit@Texture@@QEAAXXZ PROC		; Texture::ActivateTextureUnit, COMDAT

; 135  : 	glActiveTexture(Slot);

	mov	ecx, DWORD PTR [rcx+40]
	rex_jmp	QWORD PTR glad_glActiveTexture
?ActivateTextureUnit@Texture@@QEAAXXZ ENDP		; Texture::ActivateTextureUnit
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Texture.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Texture.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Texture.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Texture.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Texture.cpp
;	COMDAT ??0Texture@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@HHIIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
this$GSCopy$ = 80
Pixels$GSCopy$ = 88
TexSampler$GSCopy$ = 96
__$ArrayPad$ = 104
this$ = 176
Pixels$ = 184
Width$ = 192
Height$ = 200
ValueType$dead$ = 208
texType$dead$ = 216
slot$dead$ = 224
format$dead$ = 232
pixelType$dead$ = 240
TexSampler$ = 248
??0Texture@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@HHIIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; Texture::Texture, COMDAT

; 46   : {

$LN60:
	push	rbx
	push	rbp
	push	rsi
	push	rdi
	push	r14
	push	r15
	sub	rsp, 120				; 00000078H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	r14d, r9d
	mov	ebp, r8d
	mov	rdi, rdx
	mov	rsi, rcx

; 45   : Texture::Texture(std::vector<unsigned char> Pixels, int Width, int Height, GLenum ValueType, GLenum texType, GLenum slot, GLenum format, GLenum pixelType, std::string TexSampler)

	mov	QWORD PTR this$GSCopy$[rsp], rcx
	mov	QWORD PTR Pixels$GSCopy$[rsp], rdx
	mov	rbx, QWORD PTR TexSampler$[rsp]
	mov	QWORD PTR TexSampler$GSCopy$[rsp], rbx

; 46   : {

	add	rcx, 8
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR [rcx], xmm0

; 4821 :         _My_data._Mysize = 0;

	xor	r15d, r15d
	mov	QWORD PTR [rcx+16], r15

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR [rcx+24], 15

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR [rcx], r15b
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Texture.cpp

; 48   : 	type = texType;

	mov	DWORD PTR [rsi+4], 3553			; 00000de1H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3156 :         if (this == _STD addressof(_Right)) {

	cmp	rcx, rbx
	je	SHORT $LN19@Texture

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rdx, rbx

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rbx+24], 16
	jb	SHORT $LN23@Texture

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rdx, QWORD PTR [rbx]
$LN23@Texture:

; 3192 :         assign(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

	mov	r8, QWORD PTR [rbx+16]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN19@Texture:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Texture.cpp

; 50   : 	Slot = slot;

	mov	DWORD PTR [rsi+40], r15d

; 51   : 
; 52   : 	// Generates an OpenGL texture object
; 53   : 	glGenTextures(1, &ID);

	mov	rdx, rsi
	mov	ecx, 1
	call	QWORD PTR glad_glGenTextures

; 54   : 	// Assigns the texture to a Texture Unit
; 55   : 	glActiveTexture(slot);

	xor	ecx, ecx
	call	QWORD PTR glad_glActiveTexture

; 56   : 	glBindTexture(texType, ID);

	mov	edx, DWORD PTR [rsi]
	mov	ecx, 3553				; 00000de1H
	call	QWORD PTR glad_glBindTexture

; 57   : 
; 58   : 	// Configures the type of algorithm that is used to make the image smaller or bigger
; 59   : 	glTexParameteri(texType, GL_TEXTURE_MIN_FILTER, GL_NEAREST_MIPMAP_LINEAR);

	mov	edx, 10241				; 00002801H
	mov	ecx, 3553				; 00000de1H
	mov	r8d, 9986				; 00002702H
	call	QWORD PTR glad_glTexParameteri

; 60   : 	glTexParameteri(texType, GL_TEXTURE_MAG_FILTER, GL_NEAREST);

	mov	edx, 10240				; 00002800H
	mov	ecx, 3553				; 00000de1H
	mov	r8d, 9728				; 00002600H
	call	QWORD PTR glad_glTexParameteri

; 61   : 
; 62   : 	// Configures the way the texture repeats (if it does at all)
; 63   : 	glTexParameteri(texType, GL_TEXTURE_WRAP_S, GL_REPEAT);

	mov	edx, 10242				; 00002802H
	mov	ecx, 3553				; 00000de1H
	mov	r8d, 10497				; 00002901H
	call	QWORD PTR glad_glTexParameteri

; 64   : 	glTexParameteri(texType, GL_TEXTURE_WRAP_T, GL_REPEAT);

	mov	edx, 10243				; 00002803H
	mov	ecx, 3553				; 00000de1H
	mov	r8d, 10497				; 00002901H
	call	QWORD PTR glad_glTexParameteri

; 65   : 
; 66   : 	// Extra lines in case you choose to use GL_CLAMP_TO_BORDER
; 67   : 	// float flatColor[] = {1.0f, 1.0f, 1.0f, 1.0f};
; 68   : 	// glTexParameterfv(GL_TEXTURE_2D, GL_TEXTURE_BORDER_COLOR, flatColor);
; 69   : 
; 70   : 	// Assigns the image to the OpenGL Texture object
; 71   : 	glTexImage2D(texType, 0, ValueType, Width, Height, 0, format, pixelType, Pixels.data());

	mov	rax, QWORD PTR [rdi]
	mov	QWORD PTR [rsp+64], rax
	mov	DWORD PTR [rsp+56], 5121		; 00001401H
	mov	DWORD PTR [rsp+48], 6408		; 00001908H
	mov	DWORD PTR [rsp+40], r15d
	mov	DWORD PTR [rsp+32], r14d
	mov	r9d, ebp
	xor	edx, edx
	mov	ecx, 3553				; 00000de1H
	mov	r8d, 6408				; 00001908H
	call	QWORD PTR glad_glTexImage2D

; 72   : 	// Generates MipMaps
; 73   : 	glGenerateMipmap(texType);

	mov	ecx, 3553				; 00000de1H
	call	QWORD PTR glad_glGenerateMipmap

; 74   : 
; 75   : 	// Unbinds the OpenGL Texture object so that it can't accidentally be modified
; 76   : 	glBindTexture(texType, 0);

	xor	edx, edx
	mov	ecx, 3553				; 00000de1H
	call	QWORD PTR glad_glBindTexture
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rdi]
	test	rcx, rcx
	je	SHORT $LN30@Texture

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rdi+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN48@Texture

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN45@Texture

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN48@Texture:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	mov	QWORD PTR [rdi], r15

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rdi+8], r15

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rdi+16], r15
$LN30@Texture:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rbx
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Texture.cpp

; 77   : }

	mov	rax, rsi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 120				; 00000078H
	pop	r15
	pop	r14
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
$LN45@Texture:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	npad	1
$LN57@Texture:
??0Texture@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@HHIIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; Texture::Texture
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$GSCopy$ = 80
Pixels$GSCopy$ = 88
TexSampler$GSCopy$ = 96
__$ArrayPad$ = 104
this$ = 176
Pixels$ = 184
Width$ = 192
Height$ = 200
ValueType$dead$ = 208
texType$dead$ = 216
slot$dead$ = 224
format$dead$ = 232
pixelType$dead$ = 240
TexSampler$ = 248
?dtor$0@?0???0Texture@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@HHIIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA PROC ; `Texture::Texture'::`1'::dtor$0
	mov	rcx, QWORD PTR TexSampler$GSCopy$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0???0Texture@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@HHIIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA ENDP ; `Texture::Texture'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$GSCopy$ = 80
Pixels$GSCopy$ = 88
TexSampler$GSCopy$ = 96
__$ArrayPad$ = 104
this$ = 176
Pixels$ = 184
Width$ = 192
Height$ = 200
ValueType$dead$ = 208
texType$dead$ = 216
slot$dead$ = 224
format$dead$ = 232
pixelType$dead$ = 240
TexSampler$ = 248
?dtor$1@?0???0Texture@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@HHIIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA PROC ; `Texture::Texture'::`1'::dtor$1
	mov	rcx, QWORD PTR Pixels$GSCopy$[rdx]
	jmp	??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::~vector<unsigned char,std::allocator<unsigned char> >
?dtor$1@?0???0Texture@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@HHIIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA ENDP ; `Texture::Texture'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$GSCopy$ = 80
Pixels$GSCopy$ = 88
TexSampler$GSCopy$ = 96
__$ArrayPad$ = 104
this$ = 176
Pixels$ = 184
Width$ = 192
Height$ = 200
ValueType$dead$ = 208
texType$dead$ = 216
slot$dead$ = 224
format$dead$ = 232
pixelType$dead$ = 240
TexSampler$ = 248
?dtor$2@?0???0Texture@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@HHIIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA PROC ; `Texture::Texture'::`1'::dtor$2
	mov	rcx, QWORD PTR this$GSCopy$[rdx]
	add	rcx, 8
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$2@?0???0Texture@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@HHIIIIIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA ENDP ; `Texture::Texture'::`1'::dtor$2
text$x	ENDS
END

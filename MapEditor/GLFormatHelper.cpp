#include "GLFormatHelper.h"

std::unordered_map<TextureFormat::Format, GLenum> GLFormatHelper::InternalFormatList =
{
    { TextureFormat::Format::BC1_UNORM, GL_COMPRESSED_RGBA_S3TC_DXT1_EXT },
    { TextureFormat::Format::BC1_UNORM_SRGB, GL_COMPRESSED_RGBA_S3TC_DXT1_EXT },
    { TextureFormat::Format::BC2_UNORM, GL_COMPRESSED_RGBA_S3TC_DXT3_EXT },
    { TextureFormat::Format::BC2_UNORM_SRGB, GL_COMPRESSED_RGBA_S3TC_DXT3_EXT },
    { TextureFormat::Format::BC3_UNORM, GL_COMPRESSED_RGBA_S3TC_DXT5_EXT },
    { TextureFormat::Format::BC3_UNORM_SRGB, GL_COMPRESSED_RGBA_S3TC_DXT5_EXT },
    { TextureFormat::Format::BC4_UNORM, GL_COMPRESSED_RED_RGTC1 },
    { TextureFormat::Format::BC4_SNORM, GL_COMPRESSED_SIGNED_RED_RGTC1 },
    { TextureFormat::Format::BC5_UNORM, GL_COMPRESSED_RG_RGTC2 },
    { TextureFormat::Format::BC5_SNORM, GL_COMPRESSED_SIGNED_RG_RGTC2 },
    { TextureFormat::Format::BC6H_UF16, GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT },
    { TextureFormat::Format::BC6H_SF16, GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT },
    { TextureFormat::Format::BC7_UNORM, GL_COMPRESSED_RGBA_BPTC_UNORM },
    { TextureFormat::Format::BC7_UNORM_SRGB, GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM },
    { TextureFormat::Format::ASTC_4x4_UNORM, GL_COMPRESSED_RGBA_ASTC_4x4_KHR },
    { TextureFormat::Format::ASTC_4x4_SRGB, GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR },
	{ TextureFormat::Format::ASTC_5x4_UNORM, GL_COMPRESSED_RGBA_ASTC_5x4_KHR },
	{ TextureFormat::Format::ASTC_5x4_SRGB, GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR },
	{ TextureFormat::Format::ASTC_5x5_UNORM, GL_COMPRESSED_RGBA_ASTC_5x5_KHR },
	{ TextureFormat::Format::ASTC_5x5_SRGB, GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR },
	{ TextureFormat::Format::ASTC_6x5_UNORM, GL_COMPRESSED_RGBA_ASTC_6x5_KHR },
	{ TextureFormat::Format::ASTC_6x5_SRGB, GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR },
	{ TextureFormat::Format::ASTC_6x6_UNORM, GL_COMPRESSED_RGBA_ASTC_6x6_KHR },
	{ TextureFormat::Format::ASTC_6x6_SRGB, GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR },
	{ TextureFormat::Format::ASTC_8x5_UNORM, GL_COMPRESSED_RGBA_ASTC_8x5_KHR },
	{ TextureFormat::Format::ASTC_8x5_SRGB, GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR },
	{ TextureFormat::Format::ASTC_8x6_UNORM, GL_COMPRESSED_RGBA_ASTC_8x6_KHR },
	{ TextureFormat::Format::ASTC_8x6_SRGB, GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR },
	{ TextureFormat::Format::ASTC_8x8_UNORM, GL_COMPRESSED_RGBA_ASTC_8x8_KHR },
	{ TextureFormat::Format::ASTC_8x8_SRGB, GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR },
	{ TextureFormat::Format::ASTC_10x5_UNORM, GL_COMPRESSED_RGBA_ASTC_10x5_KHR },
	{ TextureFormat::Format::ASTC_10x5_SRGB, GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR },
	{ TextureFormat::Format::ASTC_10x6_UNORM, GL_COMPRESSED_RGBA_ASTC_10x6_KHR },
	{ TextureFormat::Format::ASTC_10x6_SRGB, GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR },
	{ TextureFormat::Format::ASTC_10x8_UNORM, GL_COMPRESSED_RGBA_ASTC_10x8_KHR },
	{ TextureFormat::Format::ASTC_10x8_SRGB, GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR },
	{ TextureFormat::Format::ASTC_10x10_UNORM, GL_COMPRESSED_RGBA_ASTC_10x10_KHR },
	{ TextureFormat::Format::ASTC_10x10_SRGB, GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR },
	{ TextureFormat::Format::ASTC_12x10_UNORM, GL_COMPRESSED_RGBA_ASTC_12x10_KHR },
	{ TextureFormat::Format::ASTC_12x10_SRGB, GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR },
	{ TextureFormat::Format::ASTC_12x12_UNORM, GL_COMPRESSED_RGBA_ASTC_12x12_KHR },
	{ TextureFormat::Format::ASTC_12x12_SRGB, GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR }
};

std::unordered_map<GLenum, int32_t> GLFormatHelper::BlockSizeByFormat =
{
    { GL_COMPRESSED_RGBA_S3TC_DXT1_EXT, 8 },
    { GL_COMPRESSED_RGBA_S3TC_DXT3_EXT, 16 },
    { GL_COMPRESSED_RGBA_S3TC_DXT5_EXT, 16 },
    { GL_COMPRESSED_RED_RGTC1_EXT, 8 },
    { GL_COMPRESSED_SIGNED_RED_RGTC1, 8 },
    { GL_COMPRESSED_RG_RGTC2, 16 },
    { GL_COMPRESSED_SIGNED_RG_RGTC2, 16 },
    { GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT, 16 },
    { GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT, 16 },
    { GL_COMPRESSED_RGBA_BPTC_UNORM, 16 },
    { GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM, 16 },
    { GL_COMPRESSED_RGBA_ASTC_4x4_KHR, 16 },
    { GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR, 16 },
    { GL_COMPRESSED_RGBA_ASTC_5x4_KHR, 16 },
    { GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR, 16 },
    { GL_COMPRESSED_RGBA_ASTC_5x5_KHR, 16 },
    { GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR, 16 },
    { GL_COMPRESSED_RGBA_ASTC_6x5_KHR, 16 },
    { GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR, 16 },
    { GL_COMPRESSED_RGBA_ASTC_6x6_KHR, 16 },
    { GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR, 16 },
    { GL_COMPRESSED_RGBA_ASTC_8x5_KHR, 16 },
    { GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR, 16 },
    { GL_COMPRESSED_RGBA_ASTC_8x6_KHR, 16 },
    { GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR, 16 },
    { GL_COMPRESSED_RGBA_ASTC_8x8_KHR, 16 },
    { GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR, 16 },
    { GL_COMPRESSED_RGBA_ASTC_10x5_KHR, 16 },
    { GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR, 16 },
    { GL_COMPRESSED_RGBA_ASTC_10x6_KHR, 16 },
    { GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR, 16 },
    { GL_COMPRESSED_RGBA_ASTC_10x8_KHR, 16 },
    { GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR, 16 },
    { GL_COMPRESSED_RGBA_ASTC_10x10_KHR, 16 },
    { GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR, 16 },
    { GL_COMPRESSED_RGBA_ASTC_12x10_KHR, 16 },
    { GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR, 16 },
    { GL_COMPRESSED_RGBA_ASTC_12x12_KHR, 16 },
    { GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR, 16 },
};

std::unordered_map<std::string, GLenum> GLFormatHelper::mAlphaTestFunctions
{
    {"gequal", GL_GEQUAL},
    {"always", GL_ALWAYS},
    {"never", GL_NEVER},
    {"less", GL_LESS},
    {"equal", GL_EQUAL},
    {"lequal", GL_LEQUAL},
    {"greater", GL_GREATER},
    {"notequal", GL_NOTEQUAL}
};
; Listing generated by Microsoft (R) Optimizing Compiler Version 19.37.32822.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_C@_04KLNIMCCE@EPRF@				; `string'
PUBLIC	??_C@_09HJOLKJNN@Pref?5save@			; `string'
PUBLIC	??_C@_0CE@NBEGJJLL@Wrong?5version?0?5expected?51?0?5but?5@ ; `string'
PUBLIC	??_C@_0BH@FHNDLKOA@EditorPreferenceLoader@	; `string'
PUBLIC	??_C@_0BL@DKDJEEML@Wrong?5magic?0?5expected?5EPRF@ ; `string'
PUBLIC	??_C@_04LNEDGKNE@Pref@				; `string'
PUBLIC	?WindowInformation@PreferencesConfig@@3UWindowInformationStruct@1@A ; PreferencesConfig::WindowInformation
PUBLIC	?FrameCount@PreferencesConfig@@3IA		; PreferencesConfig::FrameCount
	ALIGN	4

?FrameCount@PreferencesConfig@@3IA DD 01H DUP (?)	; PreferencesConfig::FrameCount
_BSS	ENDS
;	COMDAT ??_C@_04LNEDGKNE@Pref@
CONST	SEGMENT
??_C@_04LNEDGKNE@Pref@ DB 'Pref', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@DKDJEEML@Wrong?5magic?0?5expected?5EPRF@
CONST	SEGMENT
??_C@_0BL@DKDJEEML@Wrong?5magic?0?5expected?5EPRF@ DB 'Wrong magic, expec'
	DB	'ted EPRF', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@FHNDLKOA@EditorPreferenceLoader@
CONST	SEGMENT
??_C@_0BH@FHNDLKOA@EditorPreferenceLoader@ DB 'EditorPreferenceLoader', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@NBEGJJLL@Wrong?5version?0?5expected?51?0?5but?5@
CONST	SEGMENT
??_C@_0CE@NBEGJJLL@Wrong?5version?0?5expected?51?0?5but?5@ DB 'Wrong vers'
	DB	'ion, expected 1, but got ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09HJOLKJNN@Pref?5save@
CONST	SEGMENT
??_C@_09HJOLKJNN@Pref?5save@ DB 'Pref save', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04KLNIMCCE@EPRF@
CONST	SEGMENT
??_C@_04KLNIMCCE@EPRF@ DB 'EPRF', 00H			; `string'
?WindowInformation@PreferencesConfig@@3UWindowInformationStruct@1@A DB 01H ; PreferencesConfig::WindowInformation
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@2@QEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo>,void *> > >::deallocate
PUBLIC	??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@1@PEAU01@@Z ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo>,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo>,void *> > >
PUBLIC	??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@1@PEAU01@@Z ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo>,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo>,void *> > >
PUBLIC	??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@AEAPEAU12@@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@0@AEAPEAU10@0@Z ; std::exchange<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo>,void *> * &>
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo>,void *> > >
PUBLIC	?_Orphan_ptr@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo> > >::_Orphan_ptr
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@@std@@@2@$0A@@std@@@std@@QEAAXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BfresFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BfresFile> >,0> >::clear
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@2@$0A@@std@@@std@@QEAAXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,TextureToGo,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo> >,0> >::clear
PUBLIC	?Frame@PreferencesConfig@@YAXXZ			; PreferencesConfig::Frame
PUBLIC	?WindowInformationChanged@PreferencesConfig@@YA_NXZ ; PreferencesConfig::WindowInformationChanged
PUBLIC	?UpdateWindowInformation@PreferencesConfig@@YAXXZ ; PreferencesConfig::UpdateWindowInformation
PUBLIC	?Save@PreferencesConfig@@YAXXZ			; PreferencesConfig::Save
PUBLIC	?Load@PreferencesConfig@@YAXXZ			; PreferencesConfig::Load
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@1@PEAU01@@Z DD imagerel $LN56
	DD	imagerel $LN56+36
	DD	imagerel $unwind$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@1@PEAU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@1@@Z DD imagerel $LN67
	DD	imagerel $LN67+24
	DD	imagerel $unwind$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@1@@Z DD imagerel $LN67+24
	DD	imagerel $LN67+86
	DD	imagerel $chain$0$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@1@@Z DD imagerel $LN67+86
	DD	imagerel $LN67+94
	DD	imagerel $chain$1$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@@std@@@2@$0A@@std@@@std@@QEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+64
	DD	imagerel $unwind$?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@@std@@@2@$0A@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@2@$0A@@std@@@std@@QEAAXXZ DD imagerel $LN70
	DD	imagerel $LN70+27
	DD	imagerel $unwind$?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@2@$0A@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@2@$0A@@std@@@std@@QEAAXXZ DD imagerel $LN70+27
	DD	imagerel $LN70+94
	DD	imagerel $chain$0$?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@2@$0A@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@2@$0A@@std@@@std@@QEAAXXZ DD imagerel $LN70+94
	DD	imagerel $LN70+127
	DD	imagerel $chain$1$?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@2@$0A@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Frame@PreferencesConfig@@YAXXZ DD imagerel $LN21
	DD	imagerel $LN21+82
	DD	imagerel $unwind$?Frame@PreferencesConfig@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?Frame@PreferencesConfig@@YAXXZ DD imagerel $LN21+82
	DD	imagerel $LN21+234
	DD	imagerel $chain$0$?Frame@PreferencesConfig@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?Frame@PreferencesConfig@@YAXXZ DD imagerel $LN21+234
	DD	imagerel $LN21+239
	DD	imagerel $chain$1$?Frame@PreferencesConfig@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Save@PreferencesConfig@@YAXXZ DD imagerel $LN1054
	DD	imagerel $LN1054+2993
	DD	imagerel $unwind$?Save@PreferencesConfig@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Load@PreferencesConfig@@YAXXZ DD imagerel $LN1179
	DD	imagerel $LN1179+3661
	DD	imagerel $unwind$?Load@PreferencesConfig@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$13@?0??Load@PreferencesConfig@@YAXXZ@4HA DD imagerel ?dtor$13@?0??Load@PreferencesConfig@@YAXXZ@4HA
	DD	imagerel ?dtor$13@?0??Load@PreferencesConfig@@YAXXZ@4HA+41
	DD	imagerel $unwind$?dtor$13@?0??Load@PreferencesConfig@@YAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$15@?0??Load@PreferencesConfig@@YAXXZ@4HA DD imagerel ?dtor$15@?0??Load@PreferencesConfig@@YAXXZ@4HA
	DD	imagerel ?dtor$15@?0??Load@PreferencesConfig@@YAXXZ@4HA+41
	DD	imagerel $unwind$?dtor$15@?0??Load@PreferencesConfig@@YAXXZ@4HA
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$15@?0??Load@PreferencesConfig@@YAXXZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$13@?0??Load@PreferencesConfig@@YAXXZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?Load@PreferencesConfig@@YAXXZ DB '4'
	DB	01H, 02H
	DB	00H
	DB	'*'
	DB	02H
	DB	0a2H
	DB	06H
	DB	'A', 04H
	DB	08H
	DB	0d1H, 03H
	DB	0cH
	DB	08eH
	DB	0eH
	DB	'L'
	DB	0cH
	DB	01aH
	DB	08H
	DB	0b5H, 03H
	DB	00H
	DB	0a9H, 08H
	DB	010H
	DB	0a5H, 04H
	DB	012H
	DB	'P'
	DB	010H
	DB	0b1H, 03H
	DB	014H
	DB	09H, 02H
	DB	010H
	DB	0ccH
	DB	016H
	DB	09dH, 02H
	DB	018H
	DB	01cH
	DB	016H
	DB	0a5H, 08H
	DB	08H
	DB	'X'
	DB	01aH
	DB	'^'
	DB	01cH
	DB	01cH
	DB	01aH
	DB	')', 03H
	DB	08H
	DB	'T'
	DB	0aH
	DB	' '
	DB	08H
	DB	0a0H
	DB	010H
	DB	0cH
	DB	06H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?Load@PreferencesConfig@@YAXXZ DB 01cH
	DB	0aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0e0H
	DB	032H
	DD	imagerel ??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
	DB	041H
	DB	0aH
	DB	072H
	DD	imagerel ??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
	DB	041H
	DB	0aH
	DB	03aH
	DD	imagerel ??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ
	DB	01H
	DB	09H
	DB	03cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	041H
	DB	02H
	DB	072H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0e0H
	DB	034H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	081H
	DB	02H
	DB	0daH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	061H
	DB	09H
	DB	03cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0a1H
	DB	02H
	DB	076H
	DD	imagerel ?dtor$13@?0??Load@PreferencesConfig@@YAXXZ@4HA
	DB	02eH
	DD	imagerel ?dtor$15@?0??Load@PreferencesConfig@@YAXXZ@4HA
	DB	02aH
	DD	imagerel ??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@@std@@QEAA@XZ
	DB	041H
	DB	03H
	DB	0a5H
	DB	03H
	DD	imagerel ??1BfresFile@@QEAA@XZ
	DB	081H
	DB	05H
	DB	042H
	DD	imagerel ??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@@std@@QEAA@XZ
	DB	041H
	DB	03H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?Load@PreferencesConfig@@YAXXZ DB 028H
	DD	imagerel $stateUnwindMap$?Load@PreferencesConfig@@YAXXZ
	DD	imagerel $ip2state$?Load@PreferencesConfig@@YAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Load@PreferencesConfig@@YAXXZ DD 0113f19H
	DD	03b782eH
	DD	03c682aH
	DD	0827426H
	DD	0816426H
	DD	0803426H
	DD	07a0126H
	DD	0e016f018H
	DD	0c012d014H
	DD	05010H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?Load@PreferencesConfig@@YAXXZ
	DD	03aaH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?Save@PreferencesConfig@@YAXXZ DB '('
	DB	0b4H
	DB	02H
	DB	'%', 0eH
	DB	04H
	DB	'.'
	DB	06H
	DB	'h'
	DB	02H
	DB	01dH, 04H
	DB	08H
	DB	'*'
	DB	0aH
	DB	'h'
	DB	02H
	DB	'q', 04H
	DB	0cH
	DB	'*'
	DB	0eH
	DB	'h'
	DB	02H
	DB	'!', 04H
	DB	010H
	DB	'*'
	DB	012H
	DB	'h'
	DB	02H
	DB	0dH, 06H
	DB	014H
	DB	084H
	DB	018H
	DB	'!', 03H
	DB	01aH
	DB	'P'
	DB	018H
	DB	'*'
	DB	02H
	DB	01dH, 02H
	DB	00H
	DB	'L'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?Save@PreferencesConfig@@YAXXZ DB 01aH
	DB	0aH
	DD	imagerel ??1BinaryVectorWriter@@QEAA@XZ
	DB	061H
	DB	03H
	DB	03aH
	DD	imagerel ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	0d0H
	DB	06aH
	DD	imagerel ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	0d0H
	DB	09aH
	DD	imagerel ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	0f0H
	DB	0caH
	DD	imagerel ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	0f0H
	DB	0faH
	DD	imagerel ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	061H
	DB	02H
	DB	065H
	DB	02H
	DD	imagerel ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	061H
	DB	02H
	DB	0e5H
	DB	02H
	DD	imagerel ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	0e1H
	DB	02H
	DB	065H
	DB	03H
	DD	imagerel ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	0e1H
	DB	02H
	DB	0e5H
	DB	03H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0e1H
	DB	02H
	DB	042H
	DD	imagerel ??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
	DB	01H
	DB	04H
	DB	0d5H
	DB	04H
	DD	imagerel ??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
	DB	01H
	DB	04H
	DB	044H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0c0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?Save@PreferencesConfig@@YAXXZ DB 028H
	DD	imagerel $stateUnwindMap$?Save@PreferencesConfig@@YAXXZ
	DD	imagerel $ip2state$?Save@PreferencesConfig@@YAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Save@PreferencesConfig@@YAXXZ DD 0d3819H
	DD	04c7427H
	DD	04b6427H
	DD	04a3427H
	DD	0440127H
	DD	0e016f018H
	DD	0c012d014H
	DD	05010H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?Save@PreferencesConfig@@YAXXZ
	DD	0212H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?Frame@PreferencesConfig@@YAXXZ DD 021H
	DD	imagerel $LN21
	DD	imagerel $LN21+82
	DD	imagerel $unwind$?Frame@PreferencesConfig@@YAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?Frame@PreferencesConfig@@YAXXZ DD 020521H
	DD	043405H
	DD	imagerel $LN21
	DD	imagerel $LN21+82
	DD	imagerel $unwind$?Frame@PreferencesConfig@@YAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Frame@PreferencesConfig@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@2@$0A@@std@@@std@@QEAAXXZ DD 021H
	DD	imagerel $LN70
	DD	imagerel $LN70+27
	DD	imagerel $unwind$?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@2@$0A@@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@2@$0A@@std@@@std@@QEAAXXZ DD 020521H
	DD	067405H
	DD	imagerel $LN70
	DD	imagerel $LN70+27
	DD	imagerel $unwind$?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@2@$0A@@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@2@$0A@@std@@@std@@QEAAXXZ DD 040a01H
	DD	07340aH
	DD	06006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@@std@@@2@$0A@@std@@@std@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@1@@Z DD 021H
	DD	imagerel $LN67
	DD	imagerel $LN67+24
	DD	imagerel $unwind$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@1@@Z DD 020521H
	DD	0b7405H
	DD	imagerel $LN67
	DD	imagerel $LN67+24
	DD	imagerel $unwind$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@1@@Z DD 040801H
	DD	060043208H
	DD	030025003H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@1@PEAU01@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\fstream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\iosfwd
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\iosfwd
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\iosfwd
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\fstream
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
;	COMDAT ?Load@PreferencesConfig@@YAXXZ
_TEXT	SEGMENT
tv6538 = 64
G$1$ = 65
B$1$ = 66
A$1$ = 67
$T7 = 72
$T8 = 72
$T9 = 72
$T10 = 72
$T11 = 72
$T12 = 72
$T13 = 104
$T14 = 112
$T15 = 112
$T16 = 112
$T17 = 112
$T18 = 112
$T19 = 112
$T20 = 144
i$1$ = 152
$T21 = 160
$T22 = 160
$T23 = 168
$T24 = 176
$T25 = 176
$T26 = 176
$T27 = 208
$T28 = 208
$T29 = 352
$T30 = 352
$T31 = 464
Bytes$ = 576
Name$32 = 600
FileSize$ = 632
File$ = 656
magic$ = 928
__$ArrayPad$ = 936
?Load@PreferencesConfig@@YAXXZ PROC			; PreferencesConfig::Load, COMDAT

; 22   : {

$LN1179:
	mov	rax, rsp
	mov	QWORD PTR [rax+8], rbx
	mov	QWORD PTR [rax+16], rsi
	mov	QWORD PTR [rax+24], rdi
	push	rbp
	push	r12
	push	r13
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rax-760]
	sub	rsp, 976				; 000003d0H
	movaps	XMMWORD PTR [rax-56], xmm6
	movaps	XMMWORD PTR [rax-72], xmm7
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-256], rax
	xor	r13d, r13d
	mov	r15d, r13d
	mov	DWORD PTR $T13[rsp], r13d
	xor	edx, edx
	mov	r8d, 272				; 00000110H
	lea	rcx, QWORD PTR File$[rbp-256]
	call	memset
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T12[rsp], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T12[rsp+16], r13

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T12[rsp+24], r13

; 2540 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	lea	r8d, QWORD PTR [r13+16]
	lea	rdx, OFFSET FLAT:??_C@_0BB@FHJLLGCJ@Preferences?4eprf@
	lea	rcx, QWORD PTR $T12[rsp]
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 23   : 	std::ifstream File(Editor::GetWorkingDirFile("Preferences.eprf"), std::ios::binary);

	lea	rdx, QWORD PTR $T12[rsp]
	lea	rcx, QWORD PTR $T19[rsp]
	call	?GetWorkingDirFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z ; Editor::GetWorkingDirFile
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rax+24], 16
	jb	SHORT $LN58@Load

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR [rax]
$LN58@Load:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\fstream

; 43   :         : basic_ifstream(_Str.c_str(), _Mode, _Prot) {} // _Prot is an extension

	mov	r8d, 32					; 00000020H
	mov	rdx, rax
	lea	rcx, QWORD PTR File$[rbp-256]
	call	??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z ; std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >
	mov	rax, QWORD PTR File$[rbp-256]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	r12, OFFSET FLAT:??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
	mov	QWORD PTR File$[rbp+rcx-256], r12
	mov	rax, QWORD PTR File$[rbp-256]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	edx, DWORD PTR [rcx-176]
	mov	DWORD PTR File$[rbp+rcx-260], edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T19[rbp-232]
	cmp	rdx, 16
	jb	SHORT $LN74@Load

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T19[rsp]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN86@Load

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN86@Load
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN86@Load:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN74@Load:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqu	XMMWORD PTR $T19[rbp-240], xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T19[rsp], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 24   : 	File.seekg(0, std::ios_base::end);

	xor	edx, edx
	lea	r8d, QWORD PTR [rdx+2]
	lea	rcx, QWORD PTR File$[rbp-256]
	call	QWORD PTR __imp_?seekg@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@_JH@Z

; 25   : 	std::streampos FileSize = File.tellg();

	lea	rdx, QWORD PTR FileSize$[rbp-256]
	lea	rcx, QWORD PTR File$[rbp-256]
	call	QWORD PTR __imp_?tellg@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA?AV?$fpos@U_Mbstatet@@@2@XZ
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\iosfwd

; 68   :         return _Myoff + _Fpos;

	mov	rdi, QWORD PTR FileSize$[rbp-248]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	movdqu	XMMWORD PTR Bytes$[rbp-256], xmm0
	mov	QWORD PTR Bytes$[rbp-240], r13

; 2065 :         if (_Count != 0) {

	mov	rax, 9223372036854775807		; 7fffffffffffffffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\iosfwd

; 68   :         return _Myoff + _Fpos;

	add	rdi, QWORD PTR FileSize$[rbp-256]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2065 :         if (_Count != 0) {

	je	SHORT $LN159@Load

; 2006 :         if (_Newcapacity > max_size()) {

	cmp	rdi, rax
	ja	$LN1176@Load
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdi, 4096				; 00001000H
	jb	SHORT $LN115@Load

; 139  :     const size_t _Block_size = _Non_user_size + _Bytes;

	lea	rcx, QWORD PTR [rdi+39]

; 140  :     if (_Block_size <= _Bytes) {

	cmp	rcx, rdi
	jbe	$LN1177@Load

; 87   :         return ::operator new(_Bytes);

	call	??2@YAPEAX_K@Z				; operator new
	mov	rcx, rax

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	test	rax, rax
	je	$LN581@Load

; 146  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	add	rax, 39					; 00000027H
	and	rax, -32				; ffffffffffffffe0H

; 147  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rax-8], rcx

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

	jmp	SHORT $LN113@Load
$LN115@Load:

; 87   :         return ::operator new(_Bytes);

	mov	rcx, rdi
	call	??2@YAPEAX_K@Z				; operator new
$LN113@Load:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1990 :         _Myfirst           = _Newvec;

	mov	QWORD PTR Bytes$[rbp-256], rax

; 1991 :         _Mylast            = _Newvec;
; 1992 :         _Myend             = _Newvec + _Newcapacity;

	lea	rbx, QWORD PTR [rax+rdi]
	mov	QWORD PTR Bytes$[rbp-240], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2020 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

	mov	r8, rdi
	xor	edx, edx
	mov	rcx, rax
	call	memset
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2069 :                 _My_data._Mylast = _Uninitialized_value_construct_n(_My_data._Myfirst, _Count, _Al);

	mov	QWORD PTR Bytes$[rbp-248], rbx
$LN159@Load:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 27   : 	File.seekg(0, std::ios_base::beg);

	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR File$[rbp-256]
	call	QWORD PTR __imp_?seekg@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@_JH@Z
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\iosfwd

; 68   :         return _Myoff + _Fpos;

	mov	r8, QWORD PTR FileSize$[rbp-248]
	add	r8, QWORD PTR FileSize$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 28   : 	File.read(reinterpret_cast<char*>(Bytes.data()), FileSize);

	mov	rdx, QWORD PTR Bytes$[rbp-256]
	lea	rcx, QWORD PTR File$[rbp-256]
	call	QWORD PTR __imp_?read@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@PEAD_J@Z
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\fstream

; 193  :         if (!_Filebuffer.close()) {

	lea	rcx, QWORD PTR File$[rbp-240]
	call	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
	test	rax, rax
	jne	SHORT $LL165@Load

; 194  :             _Myios::setstate(ios_base::failbit);

	mov	rax, QWORD PTR File$[rbp-256]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	rax, QWORD PTR File$[rbp-256]
	add	rcx, rax
	xor	r8d, r8d
	lea	edx, QWORD PTR [r8+2]
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
	npad	3
$LL165@Load:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp

; 38   : 		Data[i] = this->m_Bytes[this->m_Offset];

	mov	rdi, QWORD PTR Bytes$[rbp-256]
	movzx	eax, BYTE PTR [rdi]
	mov	BYTE PTR magic$[rbp-256], al
	movzx	eax, BYTE PTR [rdi+1]
	mov	BYTE PTR magic$[rbp-255], al
	movzx	eax, BYTE PTR [rdi+2]
	mov	BYTE PTR magic$[rbp-254], al
	movzx	eax, BYTE PTR [rdi+3]
	mov	BYTE PTR magic$[rbp-253], al
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 35   : 	magic[4] = '\0';

	mov	BYTE PTR magic$[rbp-252], 0

; 36   : 	if (strcmp(magic, "EPRF") != 0) {

	mov	rcx, r13
	lea	rdx, QWORD PTR magic$[rbp-256]
	lea	r8, OFFSET FLAT:??_C@_04KLNIMCCE@EPRF@
	npad	10
$LL1168@Load:
	movzx	eax, BYTE PTR [rdx+rcx]
	inc	rcx
	cmp	al, BYTE PTR [r8+rcx-1]
	jne	$LN1169@Load
	cmp	rcx, 5
	jne	SHORT $LL1168@Load
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp

; 45   : 	return this->m_Bytes[this->m_Offset];

	movzx	eax, BYTE PTR [rdi+4]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 42   : 	if (Version != 0x01) {

	cmp	al, 1
	je	$LN6@Load

; 43   : 		Logger::Error("EditorPreferenceLoader", "Wrong version, expected 1, but got " + std::to_string((int)Version));

	lea	rbx, QWORD PTR $T10[rsp]
	mov	QWORD PTR $T22[rbp-256], rbx
	mov	edx, eax
	lea	rcx, QWORD PTR $T17[rsp]
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3537 :         return insert(_Off, _Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	mov	r9d, 35					; 00000023H
	lea	r8, OFFSET FLAT:??_C@_0CE@NBEGJJLL@Wrong?5version?0?5expected?51?0?5but?5@
	mov	rcx, rax
	call	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KQEBD0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
	xorps	xmm0, xmm0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T10[rsp], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T10[rsp+16], r13

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T10[rsp+24], r13

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR [rax]
	movups	XMMWORD PTR $T10[rsp], xmm0
	movups	xmm1, XMMWORD PTR [rax+16]
	movups	XMMWORD PTR $T10[rsp+16], xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 43   : 		Logger::Error("EditorPreferenceLoader", "Wrong version, expected 1, but got " + std::to_string((int)Version));

	mov	QWORD PTR [rax+16], r13
	mov	QWORD PTR [rax+24], 15
	mov	BYTE PTR [rax], 0
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T26[rbp-256], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T26[rbp-240], r13

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T26[rbp-232], r13

; 2540 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	mov	r8d, 22
	lea	rdx, OFFSET FLAT:??_C@_0BH@FHNDLKOA@EditorPreferenceLoader@
	lea	rcx, QWORD PTR $T26[rbp-256]
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
	npad	1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 43   : 		Logger::Error("EditorPreferenceLoader", "Wrong version, expected 1, but got " + std::to_string((int)Version));

	mov	rdx, rbx
	lea	rcx, QWORD PTR $T26[rbp-256]
	call	?Error@Logger@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; Logger::Error
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T17[rbp-232]
	cmp	rdx, 16
	jb	SHORT $LN935@Load

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T17[rsp]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN947@Load

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN947@Load
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN947@Load:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
	npad	1
$LN935@Load:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR Bytes$[rbp-256]
	test	rcx, rcx
	je	SHORT $LN766@Load

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR Bytes$[rbp-240]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN784@Load

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	$LN581@Load
$LN784@Load:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 84   : }

	call	??3@YAXPEAX_K@Z				; operator delete
	xorps	xmm0, xmm0
	movdqu	XMMWORD PTR Bytes$[rbp-256], xmm0
	mov	QWORD PTR Bytes$[rbp-240], r13
$LN766@Load:
	mov	rax, QWORD PTR File$[rbp-256]
	movsxd	rcx, DWORD PTR [rax+4]
	mov	QWORD PTR File$[rbp+rcx-256], r12
	mov	rax, QWORD PTR File$[rbp-256]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	edx, DWORD PTR [rcx-176]
	mov	DWORD PTR File$[rbp+rcx-260], edx
	lea	rcx, QWORD PTR File$[rbp-240]
	call	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
	lea	rcx, QWORD PTR File$[rbp-232]
	call	QWORD PTR __imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UEAA@XZ
	lea	rcx, QWORD PTR File$[rbp-80]
	call	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
	mov	rcx, QWORD PTR __$ArrayPad$[rbp-256]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+976]
	mov	rbx, QWORD PTR [r11+48]
	mov	rsi, QWORD PTR [r11+56]
	mov	rdi, QWORD PTR [r11+64]
	movaps	xmm6, XMMWORD PTR [r11-16]
	movaps	xmm7, XMMWORD PTR [r11-32]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rbp
	ret	0
$LN6@Load:

; 44   : 		return;
; 45   : 	}
; 46   : 
; 47   : 	UIAINBEditor::Open = (bool)Reader.ReadUInt8();

	cmp	BYTE PTR [rdi+5], 0
	setne	bl
	mov	BYTE PTR ?Open@UIAINBEditor@@3_NA, bl	; UIAINBEditor::Open

; 48   : 	UITools::Open = (bool)Reader.ReadUInt8();

	cmp	BYTE PTR [rdi+6], 0
	setne	r11b
	mov	BYTE PTR ?Open@UITools@@3_NA, r11b	; UITools::Open

; 49   : 	UIProperties::Open = (bool)Reader.ReadUInt8();

	cmp	BYTE PTR [rdi+7], 0
	setne	r10b
	mov	BYTE PTR ?Open@UIProperties@@3_NA, r10b	; UIProperties::Open

; 50   : 	UIOutliner::Open = (bool)Reader.ReadUInt8();

	cmp	BYTE PTR [rdi+8], 0
	setne	r9b
	mov	BYTE PTR ?Open@UIOutliner@@3_NA, r9b	; UIOutliner::Open

; 51   : 	UIMSBTEditor::Open = (bool)Reader.ReadUInt8();

	cmp	BYTE PTR [rdi+9], 0
	setne	r8b
	mov	BYTE PTR ?Open@UIMSBTEditor@@3_NA, r8b	; UIMSBTEditor::Open

; 52   : 	UIMapView::Open = (bool)Reader.ReadUInt8();

	cmp	BYTE PTR [rdi+10], 0
	setne	dl
	mov	BYTE PTR ?Open@UIMapView@@3_NA, dl	; UIMapView::Open

; 53   : 	UIConsole::Open = (bool)Reader.ReadUInt8();

	cmp	BYTE PTR [rdi+11], 0
	setne	cl
	mov	BYTE PTR ?Open@UIConsole@@3_NA, cl	; UIConsole::Open

; 54   : 	UIActorTool::Open = (bool)Reader.ReadUInt8();

	cmp	BYTE PTR [rdi+12], 0
	setne	al
	mov	BYTE PTR ?Open@UIActorTool@@3_NA, al	; UIActorTool::Open

; 133  : 	WindowInformation.AINBEditorOpen = UIAINBEditor::Open;

	mov	BYTE PTR ?WindowInformation@PreferencesConfig@@3UWindowInformationStruct@1@A+7, bl

; 134  : 	WindowInformation.ToolsOpen = UITools::Open;

	mov	BYTE PTR ?WindowInformation@PreferencesConfig@@3UWindowInformationStruct@1@A+2, r11b

; 135  : 	WindowInformation.PropertiesOpen = UIProperties::Open;

	mov	BYTE PTR ?WindowInformation@PreferencesConfig@@3UWindowInformationStruct@1@A+3, r10b

; 136  : 	WindowInformation.OutlinerOpen = UIOutliner::Open;

	mov	BYTE PTR ?WindowInformation@PreferencesConfig@@3UWindowInformationStruct@1@A+4, r9b

; 137  : 	WindowInformation.MSBTEditorOpen = UIMSBTEditor::Open;

	mov	BYTE PTR ?WindowInformation@PreferencesConfig@@3UWindowInformationStruct@1@A+5, r8b

; 138  : 	WindowInformation.MapViewOpen = UIMapView::Open;

	mov	BYTE PTR ?WindowInformation@PreferencesConfig@@3UWindowInformationStruct@1@A+6, dl

; 139  : 	WindowInformation.ConsoleOpen = UIConsole::Open;

	mov	BYTE PTR ?WindowInformation@PreferencesConfig@@3UWindowInformationStruct@1@A, cl

; 140  : 	WindowInformation.ActorToolOpen = UIActorTool::Open;

	mov	BYTE PTR ?WindowInformation@PreferencesConfig@@3UWindowInformationStruct@1@A+1, al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1357 :         auto _Head = _Scary->_Myhead;

	mov	rbx, QWORD PTR ?Models@BfresLibrary@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@@std@@@2@@std@@A

; 1358 :         _Scary->_Erase_tree(_Getal(), _Head->_Parent);

	mov	r8, QWORD PTR [rbx+8]
	lea	rdx, OFFSET FLAT:?Models@BfresLibrary@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@@std@@@2@@std@@A ; BfresLibrary::Models
	lea	rcx, OFFSET FLAT:?Models@BfresLibrary@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@@std@@@2@@std@@A ; BfresLibrary::Models
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BfresFile> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BfresFile>,void *> > >

; 1359 :         _Head->_Parent  = _Head;

	mov	QWORD PTR [rbx+8], rbx

; 1360 :         _Head->_Left    = _Head;

	mov	QWORD PTR [rbx], rbx

; 1361 :         _Head->_Right   = _Head;

	mov	QWORD PTR [rbx+16], rbx

; 1362 :         _Scary->_Mysize = 0;

	mov	QWORD PTR ?Models@BfresLibrary@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@@std@@@2@@std@@A+8, r13

; 1357 :         auto _Head = _Scary->_Myhead;

	mov	rsi, QWORD PTR ?Textures@TextureToGoLibrary@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@2@@std@@A

; 1358 :         _Scary->_Erase_tree(_Getal(), _Head->_Parent);

	mov	rdi, QWORD PTR [rsi+8]

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

	cmp	BYTE PTR [rdi+25], 0
	jne	SHORT $LN968@Load
	npad	10
$LL967@Load:

; 746  :             _Erase_tree(_Al, _Rootnode->_Right);

	mov	r8, QWORD PTR [rdi+16]
	lea	rdx, OFFSET FLAT:?Textures@TextureToGoLibrary@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@2@@std@@A ; TextureToGoLibrary::Textures
	lea	rcx, OFFSET FLAT:?Textures@TextureToGoLibrary@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@2@@std@@A ; TextureToGoLibrary::Textures
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rbx, rdi

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	rdi, QWORD PTR [rdi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 382  :         allocator_traits<_Alloc>::destroy(_Al, _STD addressof(_Ptr->_Myval));

	lea	rcx, QWORD PTR [rbx+32]
	call	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@QEAA@XZ
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 112				; 00000070H
	mov	rcx, rbx
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

	cmp	BYTE PTR [rdi+25], 0
	je	SHORT $LL967@Load
$LN968@Load:

; 1359 :         _Head->_Parent  = _Head;

	mov	QWORD PTR [rsi+8], rsi

; 1360 :         _Head->_Left    = _Head;

	mov	QWORD PTR [rsi], rsi

; 1361 :         _Head->_Right   = _Head;

	mov	QWORD PTR [rsi+16], rsi

; 1362 :         _Scary->_Mysize = 0;

	mov	QWORD PTR ?Textures@TextureToGoLibrary@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@2@@std@@A+8, r13
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 60   : 	GLTextureLibrary::Textures.clear();

	lea	rcx, OFFSET FLAT:?Textures@GLTextureLibrary@@3V?$unordered_map@PEAVTextureToGo@@VTexture@@U?$hash@PEAVTextureToGo@@@std@@U?$equal_to@PEAVTextureToGo@@@4@V?$allocator@U?$pair@QEAVTextureToGo@@VTexture@@@std@@@4@@std@@A ; GLTextureLibrary::Textures
	call	?clear@?$_Hash@V?$_Umap_traits@PEAVTextureToGo@@VTexture@@V?$_Uhash_compare@PEAVTextureToGo@@U?$hash@PEAVTextureToGo@@@std@@U?$equal_to@PEAVTextureToGo@@@3@@std@@V?$allocator@U?$pair@QEAVTextureToGo@@VTexture@@@std@@@4@$0A@@std@@@std@@QEAAXXZ ; std::_Hash<std::_Umap_traits<TextureToGo *,Texture,std::_Uhash_compare<TextureToGo *,std::hash<TextureToGo *>,std::equal_to<TextureToGo *> >,std::allocator<std::pair<TextureToGo * const,Texture> >,0> >::clear
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp

; 56   : 	this->m_Offset += 2;

	mov	esi, 14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

	mov	r14, QWORD PTR Bytes$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 63   : 	for (int i = 0; i < ColorSize; i++)

	mov	DWORD PTR i$1$[rbp-256], r13d
	movzx	ecx, BYTE PTR [r14+14]
	shl	ecx, 8
	movzx	eax, BYTE PTR [r14+13]
	movss	xmm7, DWORD PTR __real@3f000000
	or	ecx, eax
	mov	DWORD PTR $T21[rbp-256], ecx
	jbe	$LN3@Load
	movss	xmm6, DWORD PTR __real@40000000
$LN1174@Load:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	mov	r11, -1
	lea	r10d, QWORD PTR [r11+23]
	movsxd	rax, esi
	xorps	xmm0, xmm0
	movups	XMMWORD PTR Name$32[rbp-256], xmm0

; 4821 :         _My_data._Mysize = 0;

	mov	QWORD PTR Name$32[rbp-240], r13

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR Name$32[rbp-232], 15

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR Name$32[rbp-256], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp

; 44   : 	this->m_Offset++;

	inc	esi
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 66   : 		Name.resize(Reader.ReadUInt8());

	movzx	ebx, BYTE PTR [rax+r14+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4140 :         if (_New_size <= _Old_size) {

	test	rbx, rbx
	jne	SHORT $LN199@Load

; 4815 :         _Traits::assign(_Mypair._Myval2._Myptr()[_Mypair._Myval2._Mysize = _New_size], _Elem());

	mov	QWORD PTR Name$32[rbp-240], rbx
	mov	BYTE PTR Name$32[rbp+rbx-256], bl

; 4142 :         } else {

	jmp	SHORT $LN209@Load
$LN199@Load:

; 3298 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

	lea	rcx, QWORD PTR Name$32[rbp-256]
	cmp	rbx, 15
	ja	SHORT $LN210@Load

; 3299 :             _ASAN_STRING_MODIFY(*this, _Old_size, _Old_size + _Count);
; 3300 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

	mov	QWORD PTR Name$32[rbp-240], rbx

; 437  :         return static_cast<_Elem*>(_CSTD memset(_First, _Ch, _Count));

	mov	r8, rbx
	xor	edx, edx
	call	memset

; 3303 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

	mov	BYTE PTR Name$32[rbp+rbx-256], 0

; 3304 :             return *this;

	jmp	SHORT $LN1172@Load
$LN210@Load:

; 3305 :         }
; 3306 : 
; 3307 :         return _Reallocate_grow_by(

	mov	r9, rbx
	mov	rdx, rbx
	call	??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KD@Z@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@0D@Z@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append'::`2'::<lambda_1>,unsigned __int64,char>
$LN1172@Load:

; 2226 :         value_type* _Result = _Bx._Buf;

	mov	r11, -1
	lea	r10d, QWORD PTR [r11+23]
$LN209@Load:
	lea	r8, QWORD PTR Name$32[rbp-256]

; 2227 :         if (_Large_string_engaged()) {

	mov	r14, QWORD PTR Name$32[rbp-256]
	mov	rax, QWORD PTR Name$32[rbp-232]
	cmp	rax, 16
	cmovae	r8, r14

; 4116 :         return _Mypair._Myval2._Myptr();

	mov	rdx, r13
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp

; 36   : 	for (int i = 0; i < Length; i++) {

	movsxd	r9, DWORD PTR Name$32[rbp-240]
	test	r9, r9
	jle	SHORT $LN241@Load
	npad	9
$LL242@Load:

; 37   : 		this->m_Offset++;

	movsxd	rcx, esi
	inc	esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

	mov	rax, QWORD PTR Bytes$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp

; 38   : 		Data[i] = this->m_Bytes[this->m_Offset];

	movzx	eax, BYTE PTR [rcx+rax+1]
	mov	BYTE PTR [rdx+r8], al

; 36   : 	for (int i = 0; i < Length; i++) {

	inc	rdx
	cmp	rdx, r9
	jl	SHORT $LL242@Load
	mov	r14, QWORD PTR Name$32[rbp-256]
	mov	rax, QWORD PTR Name$32[rbp-232]
$LN241@Load:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 68   : 		Logger::Info("Name", Name);

	lea	rcx, QWORD PTR $T9[rsp]
	mov	QWORD PTR $T23[rbp-256], rcx
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T9[rsp], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T9[rsp+16], r13

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T9[rsp+24], r13

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	r12, QWORD PTR Name$32[rbp-256]

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	rax, 16
	setae	dil
	mov	BYTE PTR tv6538[rsp], dil

; 2236 :         if (_Large_string_engaged()) {

	cmovae	r12, r14

; 2620 :         if (_Count > max_size()) {

	mov	rbx, QWORD PTR Name$32[rbp-240]
	mov	rax, 9223372036854775807		; 7fffffffffffffffH
	cmp	rbx, rax
	ja	$LN1050@Load

; 2622 :         }
; 2623 : 
; 2624 :         auto& _Al       = _Getal();
; 2625 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);
; 2626 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 2627 : 
; 2628 :         if (_Count < _BUF_SIZE) {

	mov	QWORD PTR $T9[rsp+24], 15
	cmp	rbx, 16
	jae	SHORT $LN308@Load

; 2629 :             _My_data._Mysize = _Count;

	mov	QWORD PTR $T9[rsp+16], rbx

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	movups	xmm0, XMMWORD PTR [r12]
	movups	XMMWORD PTR $T9[rsp], xmm0

; 2647 :             return;

	jmp	SHORT $LN324@Load
$LN308@Load:

; 4714 :         const size_type _Masked = _Requested | _ALLOC_MASK;

	mov	rdi, rbx
	or	rdi, 15
	cmp	rdi, rax

; 4715 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

	jbe	SHORT $LN319@Load

; 4716 :             return _Max;

	mov	rdi, rax
	jmp	SHORT $LN318@Load
$LN319@Load:

; 4717 :         }
; 4718 : 
; 4719 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows
; 4720 :             return _Max;
; 4721 :         }
; 4722 : 
; 4723 :         return (_STD max)(_Masked, _Old + _Old / 2);

	cmp	rdi, 22
	cmovb	rdi, r10
$LN318@Load:

; 2652 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

	mov	rdx, rdi
	add	rdx, 1
	cmovb	rdx, r11
	call	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate

; 2653 :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

	mov	QWORD PTR $T9[rsp], rax

; 2654 : 
; 2655 :         _Start_element_lifetimes(_Unfancy(_New_ptr), _New_capacity + 1);
; 2656 : 
; 2657 :         _My_data._Mysize = _Count;

	mov	QWORD PTR $T9[rsp+16], rbx

; 2658 :         _My_data._Myres  = _New_capacity;

	mov	QWORD PTR $T9[rsp+24], rdi

; 2659 :         if constexpr (_Strat == _Construct_strategy::_From_char) {
; 2660 :             _Traits::assign(_Unfancy(_New_ptr), _Count, _Arg);
; 2661 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());
; 2662 :         } else if constexpr (_Strat == _Construct_strategy::_From_ptr) {
; 2663 :             _Traits::copy(_Unfancy(_New_ptr), _Arg, _Count);
; 2664 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());
; 2665 :         } else { // _Strat == _Construct_strategy::_From_string
; 2666 :             _Traits::copy(_Unfancy(_New_ptr), _Arg, _Count + 1);

	lea	r8, QWORD PTR [rbx+1]

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	rdx, r12
	mov	rcx, rax
	call	memcpy
	movzx	edi, BYTE PTR tv6538[rsp]
$LN324@Load:
	xorps	xmm0, xmm0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T16[rsp], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T16[rbp-240], r13

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T16[rbp-232], r13

; 2540 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	mov	r8d, 4
	lea	rdx, OFFSET FLAT:??_C@_04FABLJDN@Name@
	lea	rcx, QWORD PTR $T16[rsp]
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
	npad	1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 68   : 		Logger::Info("Name", Name);

	lea	rdx, QWORD PTR $T9[rsp]
	lea	rcx, QWORD PTR $T16[rsp]
	call	?Info@Logger@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; Logger::Info
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp

; 44   : 	this->m_Offset++;

	movsxd	rax, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

	mov	rdx, QWORD PTR Bytes$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp

; 45   : 	return this->m_Bytes[this->m_Offset];

	movzx	r13d, BYTE PTR [rax+rdx+1]
	lea	ecx, DWORD PTR [rsi+2]

; 44   : 	this->m_Offset++;

	movsxd	rax, ecx

; 45   : 	return this->m_Bytes[this->m_Offset];

	movzx	r8d, BYTE PTR [rax+rdx]
	mov	BYTE PTR G$1$[rsp], r8b
	movzx	r9d, BYTE PTR [rax+rdx+1]
	mov	BYTE PTR B$1$[rsp], r9b
	lea	esi, DWORD PTR [rcx+2]

; 44   : 	this->m_Offset++;

	movsxd	rax, esi

; 45   : 	return this->m_Bytes[this->m_Offset];

	movzx	r10d, BYTE PTR [rax+rdx]
	mov	BYTE PTR A$1$[rsp], r10b
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rdx, QWORD PTR Name$32[rbp-256]

; 2236 :         if (_Large_string_engaged()) {

	test	dil, dil
	cmovne	rdx, r14

; 548  :     return _Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0;

	cmp	rbx, 4
	jne	$LN11@Load

; 381  :         return __builtin_memcmp(_First1, _First2, _Count);

	xor	ecx, ecx
	lea	r11, OFFSET FLAT:??_C@_04KPICECCB@Area@
	npad	9
$LL1164@Load:
	movzx	eax, BYTE PTR [rdx+rcx]
	inc	rcx
	cmp	al, BYTE PTR [r11+rcx-1]
	jne	SHORT $LN1165@Load
	cmp	rcx, 4
	jne	SHORT $LL1164@Load
	xor	eax, eax
	jmp	SHORT $LN1166@Load
$LN1165@Load:
	sbb	eax, eax
	or	eax, 1
$LN1166@Load:

; 548  :     return _Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0;

	test	eax, eax
	jne	SHORT $LN11@Load
	xorps	xmm0, xmm0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T15[rsp], xmm0

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rax, QWORD PTR Name$32[rbp-256]

; 2236 :         if (_Large_string_engaged()) {

	test	dil, dil
	cmovne	rax, r14

; 2629 :             _My_data._Mysize = _Count;

	mov	QWORD PTR $T15[rbp-240], 4

; 2630 :             _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR $T15[rbp-232], 15

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	movups	xmm0, XMMWORD PTR [rax]
	movups	XMMWORD PTR $T15[rsp], xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 74   : 		BfresLibrary::Models.insert({ Name, Name == "Area" ? 

	movss	DWORD PTR [rsp+48], xmm6
	mov	BYTE PTR [rsp+40], r10b
	mov	BYTE PTR [rsp+32], r9b
	movzx	r9d, r8b
	movzx	r8d, r13b
	lea	rdx, QWORD PTR $T15[rsp]
	lea	rcx, QWORD PTR $T30[rbp-256]
	call	?CreateDefaultAreaModel@BfresFile@@SA?AV1@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@EEEEM@Z ; BfresFile::CreateDefaultAreaModel
	mov	r13, rax
	or	r15d, 1
	jmp	$LN1173@Load
$LN11@Load:
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T8[rsp], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T8[rsp+16], 0

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	r12, QWORD PTR Name$32[rbp-256]

; 2236 :         if (_Large_string_engaged()) {

	test	dil, dil
	cmovne	r12, r14

; 2628 :         if (_Count < _BUF_SIZE) {

	mov	QWORD PTR $T8[rsp+24], 15
	cmp	rbx, 16
	jae	SHORT $LN606@Load

; 2629 :             _My_data._Mysize = _Count;

	mov	QWORD PTR $T8[rsp+16], rbx

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	movups	xmm0, XMMWORD PTR [r12]
	movups	XMMWORD PTR $T8[rsp], xmm0

; 2647 :             return;

	jmp	SHORT $LN622@Load
$LN606@Load:

; 4714 :         const size_type _Masked = _Requested | _ALLOC_MASK;

	mov	rdi, rbx
	or	rdi, 15
	mov	rax, 9223372036854775807		; 7fffffffffffffffH
	cmp	rdi, rax

; 4715 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

	jbe	SHORT $LN617@Load

; 4716 :             return _Max;

	mov	rdi, rax
	jmp	SHORT $LN616@Load
$LN617@Load:

; 4717 :         }
; 4718 : 
; 4719 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows
; 4720 :             return _Max;
; 4721 :         }
; 4722 : 
; 4723 :         return (_STD max)(_Masked, _Old + _Old / 2);

	cmp	rdi, 22
	mov	eax, 22
	cmovb	rdi, rax
$LN616@Load:

; 2652 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

	mov	rdx, rdi
	add	rdx, 1
	mov	rax, -1
	cmovb	rdx, rax
	call	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate

; 2653 :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

	mov	QWORD PTR $T8[rsp], rax

; 2654 : 
; 2655 :         _Start_element_lifetimes(_Unfancy(_New_ptr), _New_capacity + 1);
; 2656 : 
; 2657 :         _My_data._Mysize = _Count;

	mov	QWORD PTR $T8[rsp+16], rbx

; 2658 :         _My_data._Myres  = _New_capacity;

	mov	QWORD PTR $T8[rsp+24], rdi

; 2659 :         if constexpr (_Strat == _Construct_strategy::_From_char) {
; 2660 :             _Traits::assign(_Unfancy(_New_ptr), _Count, _Arg);
; 2661 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());
; 2662 :         } else if constexpr (_Strat == _Construct_strategy::_From_ptr) {
; 2663 :             _Traits::copy(_Unfancy(_New_ptr), _Arg, _Count);
; 2664 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());
; 2665 :         } else { // _Strat == _Construct_strategy::_From_string
; 2666 :             _Traits::copy(_Unfancy(_New_ptr), _Arg, _Count + 1);

	lea	r8, QWORD PTR [rbx+1]

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	rdx, r12
	mov	rcx, rax
	call	memcpy
	movzx	edi, BYTE PTR tv6538[rsp]
	movzx	r8d, BYTE PTR G$1$[rsp]
	movzx	r9d, BYTE PTR B$1$[rsp]
	movzx	r10d, BYTE PTR A$1$[rsp]
$LN622@Load:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 74   : 		BfresLibrary::Models.insert({ Name, Name == "Area" ? 

	movss	DWORD PTR [rsp+48], xmm7
	mov	BYTE PTR [rsp+40], r10b
	mov	BYTE PTR [rsp+32], r9b
	movzx	r9d, r8b
	movzx	r8d, r13b
	lea	rdx, QWORD PTR $T8[rsp]
	lea	rcx, QWORD PTR $T31[rbp-256]
	call	?CreateDefaultModel@BfresFile@@SA?AV1@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@EEEEM@Z ; BfresFile::CreateDefaultModel
	mov	r13, rax
	or	r15d, 2
$LN1173@Load:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	mov	DWORD PTR $T13[rsp], r15d
	xorps	xmm0, xmm0
	movups	XMMWORD PTR $T28[rbp-256], xmm0

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	r12, QWORD PTR Name$32[rbp-256]

; 2236 :         if (_Large_string_engaged()) {

	test	dil, dil
	cmovne	r12, r14

; 2628 :         if (_Count < _BUF_SIZE) {

	cmp	rbx, 16
	jae	SHORT $LN426@Load

; 2629 :             _My_data._Mysize = _Count;

	mov	QWORD PTR $T28[rbp-240], rbx

; 2630 :             _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR $T28[rbp-232], 15

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	movups	xmm0, XMMWORD PTR [r12]
	movaps	XMMWORD PTR $T28[rbp-256], xmm0

; 2647 :             return;

	jmp	SHORT $LN442@Load
$LN426@Load:

; 4714 :         const size_type _Masked = _Requested | _ALLOC_MASK;

	mov	rdi, rbx
	or	rdi, 15
	mov	rax, 9223372036854775807		; 7fffffffffffffffH
	cmp	rdi, rax

; 4715 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

	jbe	SHORT $LN437@Load

; 4716 :             return _Max;

	mov	rdi, rax
	jmp	SHORT $LN436@Load
$LN437@Load:

; 4717 :         }
; 4718 : 
; 4719 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows
; 4720 :             return _Max;
; 4721 :         }
; 4722 : 
; 4723 :         return (_STD max)(_Masked, _Old + _Old / 2);

	cmp	rdi, 22
	mov	eax, 22
	cmovb	rdi, rax
$LN436@Load:

; 2652 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

	mov	rdx, rdi
	add	rdx, 1
	mov	rax, -1
	cmovb	rdx, rax
	call	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate

; 2653 :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

	mov	QWORD PTR $T28[rbp-256], rax

; 2654 : 
; 2655 :         _Start_element_lifetimes(_Unfancy(_New_ptr), _New_capacity + 1);
; 2656 : 
; 2657 :         _My_data._Mysize = _Count;

	mov	QWORD PTR $T28[rbp-240], rbx

; 2658 :         _My_data._Myres  = _New_capacity;

	mov	QWORD PTR $T28[rbp-232], rdi

; 2659 :         if constexpr (_Strat == _Construct_strategy::_From_char) {
; 2660 :             _Traits::assign(_Unfancy(_New_ptr), _Count, _Arg);
; 2661 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());
; 2662 :         } else if constexpr (_Strat == _Construct_strategy::_From_ptr) {
; 2663 :             _Traits::copy(_Unfancy(_New_ptr), _Arg, _Count);
; 2664 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());
; 2665 :         } else { // _Strat == _Construct_strategy::_From_string
; 2666 :             _Traits::copy(_Unfancy(_New_ptr), _Arg, _Count + 1);

	lea	r8, QWORD PTR [rbx+1]

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	rdx, r12
	mov	rcx, rax
	call	memcpy
	movzx	edi, BYTE PTR tv6538[rsp]
$LN442@Load:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	mov	rdx, r13
	lea	rcx, QWORD PTR $T28[rbp-224]
	call	??0BfresFile@@QEAA@$$QEAV0@@Z
	npad	1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 74   : 		BfresLibrary::Models.insert({ Name, Name == "Area" ? 

	lea	r8, QWORD PTR $T28[rbp-256]
	lea	rdx, QWORD PTR $T25[rbp-256]
	call	??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@@std@@@std@@@std@@@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BfresFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BfresFile> >,0> >::insert<0,0>
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR $T28[rbp-144]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	lea	rcx, QWORD PTR $T28[rbp-176]
	call	?_Tidy@?$vector@GV?$allocator@G@std@@@std@@AEAAXXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::_Tidy
	lea	rcx, QWORD PTR $T28[rbp-200]
	call	?_Tidy@?$vector@USkeletonBone@BfresFile@@V?$allocator@USkeletonBone@BfresFile@@@std@@@std@@AEAAXXZ ; std::vector<BfresFile::SkeletonBone,std::allocator<BfresFile::SkeletonBone> >::_Tidy
	lea	rcx, QWORD PTR $T28[rbp-224]
	call	?_Tidy@?$vector@UModel@BfresFile@@V?$allocator@UModel@BfresFile@@@std@@@std@@AEAAXXZ ; std::vector<BfresFile::Model,std::allocator<BfresFile::Model> >::_Tidy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR $T28[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	npad	1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 74   : 		BfresLibrary::Models.insert({ Name, Name == "Area" ? 

	test	r15b, 2
	je	SHORT $LN664@Load
	and	r15d, -3
	mov	DWORD PTR $T13[rsp], r15d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR $T31[rbp-176]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	lea	rcx, QWORD PTR $T31[rbp-208]
	call	?_Tidy@?$vector@GV?$allocator@G@std@@@std@@AEAAXXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::_Tidy
	lea	rcx, QWORD PTR $T31[rbp-232]
	call	?_Tidy@?$vector@USkeletonBone@BfresFile@@V?$allocator@USkeletonBone@BfresFile@@@std@@@std@@AEAAXXZ ; std::vector<BfresFile::SkeletonBone,std::allocator<BfresFile::SkeletonBone> >::_Tidy
	lea	rcx, QWORD PTR $T31[rbp-256]
	call	?_Tidy@?$vector@UModel@BfresFile@@V?$allocator@UModel@BfresFile@@@std@@@std@@AEAAXXZ ; std::vector<BfresFile::Model,std::allocator<BfresFile::Model> >::_Tidy
	npad	1
$LN664@Load:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 74   : 		BfresLibrary::Models.insert({ Name, Name == "Area" ? 

	test	r15b, 1
	je	SHORT $LN652@Load
	and	r15d, -2
	mov	DWORD PTR $T13[rsp], r15d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR $T30[rbp-176]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	lea	rcx, QWORD PTR $T30[rbp-208]
	call	?_Tidy@?$vector@GV?$allocator@G@std@@@std@@AEAAXXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::_Tidy
	lea	rcx, QWORD PTR $T30[rbp-232]
	call	?_Tidy@?$vector@USkeletonBone@BfresFile@@V?$allocator@USkeletonBone@BfresFile@@@std@@@std@@AEAAXXZ ; std::vector<BfresFile::SkeletonBone,std::allocator<BfresFile::SkeletonBone> >::_Tidy
	lea	rcx, QWORD PTR $T30[rbp-256]
	call	?_Tidy@?$vector@UModel@BfresFile@@V?$allocator@UModel@BfresFile@@@std@@@std@@AEAAXXZ ; std::vector<BfresFile::Model,std::allocator<BfresFile::Model> >::_Tidy
	npad	1
$LN652@Load:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

	test	dil, dil
	je	SHORT $LN480@Load

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	mov	rdx, QWORD PTR Name$32[rbp-232]
	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rax, r14

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN492@Load

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r14, QWORD PTR [r14-8]
	sub	rax, r14

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	$LN489@Load
$LN492@Load:

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, r14
	call	??3@YAXPEAX_K@Z				; operator delete
$LN480@Load:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 63   : 	for (int i = 0; i < ColorSize; i++)

	mov	ecx, DWORD PTR i$1$[rbp-256]
	inc	ecx
	mov	DWORD PTR i$1$[rbp-256], ecx
	mov	r14, QWORD PTR Bytes$[rbp-256]
	xor	r13d, r13d
	cmp	ecx, DWORD PTR $T21[rbp-256]
	jl	$LN1174@Load
	lea	r12, OFFSET FLAT:??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
$LN3@Load:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	mov	QWORD PTR $T7[rsp+8], r13

; 2629 :             _My_data._Mysize = _Count;

	mov	r15d, 7
	mov	QWORD PTR $T7[rsp+16], r15

; 2630 :             _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR $T7[rsp+24], 15

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	rax, QWORD PTR ??_C@_07MCAEODGB@Default@
	mov	DWORD PTR $T7[rsp], eax
	movzx	eax, WORD PTR ??_C@_07MCAEODGB@Default@+4
	mov	WORD PTR $T7[rsp+4], ax
	movzx	eax, BYTE PTR ??_C@_07MCAEODGB@Default@+6
	mov	BYTE PTR $T7[rsp+6], al

; 2637 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

	mov	BYTE PTR $T7[rsp+7], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	rsi, QWORD PTR ?Models@BfresLibrary@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@@std@@@2@@std@@A
	mov	rbx, QWORD PTR [rsi+8]

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], 0
	jne	SHORT $LN335@Load
	npad	4
$LL334@Load:

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	lea	rcx, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4626 :         return _Traits_compare<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize,

	mov	rdi, QWORD PTR [rcx+16]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rcx+24], 16
	jb	SHORT $LN355@Load

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rcx]
$LN355@Load:

; 555  :     const int _Ans = _Traits::compare(_Left, _Right, (_STD min)(_Left_size, _Right_size));

	mov	r8, rdi
	cmp	rdi, r15
	cmova	r8, r15

; 381  :         return __builtin_memcmp(_First1, _First2, _Count);

	lea	rdx, QWORD PTR $T7[rsp]
	call	memcmp

; 557  :     if (_Ans != 0) {

	test	eax, eax
	je	SHORT $LN360@Load

; 5024 :     return static_cast<_Get_comparison_category_t<_Traits>>(_Left.compare(_Right) <=> 0);

	jns	SHORT $LN343@Load
	mov	al, 255					; 000000ffH
	jmp	SHORT $LN344@Load
$LN489@Load:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN360@Load:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 561  :     if (_Left_size < _Right_size) {

	cmp	rdi, r15
	jae	SHORT $LN361@Load

; 5024 :     return static_cast<_Get_comparison_category_t<_Traits>>(_Left.compare(_Right) <=> 0);

	mov	al, 255					; 000000ffH
	jmp	SHORT $LN344@Load
$LN361@Load:

; 565  :     if (_Left_size > _Right_size) {

	jbe	SHORT $LN336@Load
$LN343@Load:

; 5024 :     return static_cast<_Get_comparison_category_t<_Traits>>(_Left.compare(_Right) <=> 0);

	mov	al, 1
$LN344@Load:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	test	al, al
	jns	SHORT $LN336@Load

; 1618 :                 _Result._Location._Child = _Tree_child::_Right;
; 1619 :                 _Trynode                 = _Trynode->_Right;

	mov	rbx, QWORD PTR [rbx+16]

; 1620 :             } else {

	jmp	SHORT $LN337@Load
$LN336@Load:

; 1621 :                 _Result._Location._Child = _Tree_child::_Left;
; 1622 :                 _Result._Bound           = _Trynode;

	mov	rsi, rbx

; 1623 :                 _Trynode                 = _Trynode->_Left;

	mov	rbx, QWORD PTR [rbx]
$LN337@Load:

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], 0
	je	SHORT $LL334@Load
$LN335@Load:

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	cmp	BYTE PTR [rsi+25], 0
	jne	SHORT $LN372@Load
	lea	rdx, QWORD PTR [rsi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4626 :         return _Traits_compare<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize,

	mov	rbx, QWORD PTR [rdx+16]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rdx+24], 16
	jb	SHORT $LN385@Load

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rdx, QWORD PTR [rdx]
$LN385@Load:

; 555  :     const int _Ans = _Traits::compare(_Left, _Right, (_STD min)(_Left_size, _Right_size));

	mov	r8, r15
	cmp	rbx, r15
	cmovb	r8, rbx

; 381  :         return __builtin_memcmp(_First1, _First2, _Count);

	lea	rcx, QWORD PTR $T7[rsp]
	call	memcmp

; 557  :     if (_Ans != 0) {

	test	eax, eax
	je	SHORT $LN395@Load

; 5024 :     return static_cast<_Get_comparison_category_t<_Traits>>(_Left.compare(_Right) <=> 0);

	jns	SHORT $LN378@Load
	mov	al, 255					; 000000ffH
	jmp	SHORT $LN379@Load
$LN395@Load:

; 561  :     if (_Left_size < _Right_size) {

	cmp	rbx, r15
	jbe	SHORT $LN396@Load

; 5024 :     return static_cast<_Get_comparison_category_t<_Traits>>(_Left.compare(_Right) <=> 0);

	mov	al, 255					; 000000ffH
	jmp	SHORT $LN379@Load
$LN396@Load:

; 565  :     if (_Left_size > _Right_size) {

	jae	SHORT $LN1156@Load
$LN378@Load:

; 5024 :     return static_cast<_Get_comparison_category_t<_Traits>>(_Left.compare(_Right) <=> 0);

	mov	al, 1
$LN379@Load:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	test	al, al
	js	SHORT $LN372@Load
$LN1156@Load:
	xor	al, al
	jmp	SHORT $LN373@Load
$LN372@Load:
	mov	al, 1
$LN373@Load:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 80   : 	if (!BfresLibrary::Models.count("Default"))

	test	al, al
	je	$LN716@Load
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T14[rsp], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T14[rbp-240], r13

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T14[rbp-232], r13

; 2540 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	mov	r8, r15
	lea	rdx, OFFSET FLAT:??_C@_07MCAEODGB@Default@
	lea	rcx, QWORD PTR $T14[rsp]
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 82   : 		BfresLibrary::Models.insert({ "Default", BfresFile::CreateDefaultModel("Default", 0, 0, 255, 255)});

	movss	DWORD PTR [rsp+48], xmm7
	mov	BYTE PTR [rsp+40], 255			; 000000ffH
	mov	BYTE PTR [rsp+32], 255			; 000000ffH
	xor	r9d, r9d
	xor	r8d, r8d
	lea	rdx, QWORD PTR $T14[rsp]
	lea	rcx, QWORD PTR $T29[rbp-256]
	call	?CreateDefaultModel@BfresFile@@SA?AV1@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@EEEEM@Z ; BfresFile::CreateDefaultModel
	mov	rbx, rax
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T27[rbp-256], xmm0
	xorps	xmm1, xmm1

; 2293 :     size_type _Mysize = 0; // current length of string

	movdqa	XMMWORD PTR $T27[rbp-240], xmm1

; 2540 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	mov	r8, r15
	lea	rdx, OFFSET FLAT:??_C@_07MCAEODGB@Default@
	lea	rcx, QWORD PTR $T27[rbp-256]
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	mov	rdx, rbx
	lea	rcx, QWORD PTR $T27[rbp-224]
	call	??0BfresFile@@QEAA@$$QEAV0@@Z
	npad	1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 82   : 		BfresLibrary::Models.insert({ "Default", BfresFile::CreateDefaultModel("Default", 0, 0, 255, 255)});

	lea	r8, QWORD PTR $T27[rbp-256]
	lea	rdx, QWORD PTR $T24[rbp-256]
	call	??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@@std@@@std@@@std@@@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BfresFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BfresFile> >,0> >::insert<0,0>
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR $T27[rbp-144]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	lea	rcx, QWORD PTR $T27[rbp-176]
	call	?_Tidy@?$vector@GV?$allocator@G@std@@@std@@AEAAXXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::_Tidy
	lea	rcx, QWORD PTR $T27[rbp-200]
	call	?_Tidy@?$vector@USkeletonBone@BfresFile@@V?$allocator@USkeletonBone@BfresFile@@@std@@@std@@AEAAXXZ ; std::vector<BfresFile::SkeletonBone,std::allocator<BfresFile::SkeletonBone> >::_Tidy
	lea	rcx, QWORD PTR $T27[rbp-224]
	call	?_Tidy@?$vector@UModel@BfresFile@@V?$allocator@UModel@BfresFile@@@std@@@std@@AEAAXXZ ; std::vector<BfresFile::Model,std::allocator<BfresFile::Model> >::_Tidy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR $T27[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	npad	1
	lea	rcx, QWORD PTR $T29[rbp-176]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	lea	rcx, QWORD PTR $T29[rbp-208]
	call	?_Tidy@?$vector@GV?$allocator@G@std@@@std@@AEAAXXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::_Tidy
	lea	rcx, QWORD PTR $T29[rbp-232]
	call	?_Tidy@?$vector@USkeletonBone@BfresFile@@V?$allocator@USkeletonBone@BfresFile@@@std@@@std@@AEAAXXZ ; std::vector<BfresFile::SkeletonBone,std::allocator<BfresFile::SkeletonBone> >::_Tidy
	lea	rcx, QWORD PTR $T29[rbp-256]
	call	?_Tidy@?$vector@UModel@BfresFile@@V?$allocator@UModel@BfresFile@@@std@@@std@@AEAAXXZ ; std::vector<BfresFile::Model,std::allocator<BfresFile::Model> >::_Tidy
	mov	r14, QWORD PTR Bytes$[rbp-256]
$LN716@Load:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	test	r14, r14
	je	$LN766@Load

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR Bytes$[rbp-240]
	sub	rdx, r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rax, r14

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN584@Load

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r14, QWORD PTR [r14-8]
	sub	rax, r14

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	$LN581@Load
$LN584@Load:

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, r14
	jmp	$LN784@Load
$LN1169@Load:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 37   : 		Logger::Error("EditorPreferenceLoader", "Wrong magic, expected EPRF");

	lea	rax, QWORD PTR $T18[rsp]
	mov	QWORD PTR $T20[rbp-256], rax
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T18[rsp], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T18[rbp-240], r13

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T18[rbp-232], r13

; 2540 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	mov	r8d, 26
	lea	rdx, OFFSET FLAT:??_C@_0BL@DKDJEEML@Wrong?5magic?0?5expected?5EPRF@
	lea	rcx, QWORD PTR $T18[rsp]
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
	npad	1
	xorps	xmm0, xmm0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T11[rsp], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T11[rsp+16], r13

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T11[rsp+24], r13

; 2540 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	mov	r8d, 22
	lea	rdx, OFFSET FLAT:??_C@_0BH@FHNDLKOA@EditorPreferenceLoader@
	lea	rcx, QWORD PTR $T11[rsp]
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
	npad	1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 37   : 		Logger::Error("EditorPreferenceLoader", "Wrong magic, expected EPRF");

	lea	rdx, QWORD PTR $T18[rsp]
	lea	rcx, QWORD PTR $T11[rsp]
	call	?Error@Logger@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; Logger::Error
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR Bytes$[rbp-256]
	test	rcx, rcx
	je	$LN766@Load

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR Bytes$[rbp-240]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	$LN784@Load

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	$LN784@Load
$LN581@Load:
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	npad	1
$LN1050@Load:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2621 :             _Xlen_string(); // result too long

	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	npad	1
$LN1176@Load:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2007 :             _Xlength();

	call	?_Xlength@?$vector@EV?$allocator@E@std@@@std@@CAXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Xlength
	int	3
$LN1177@Load:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 141  :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN1171@Load:
?Load@PreferencesConfig@@YAXXZ ENDP			; PreferencesConfig::Load
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
tv6538 = 64
G$1$ = 65
B$1$ = 66
A$1$ = 67
$T7 = 72
$T8 = 72
$T9 = 72
$T10 = 72
$T11 = 72
$T12 = 72
$T13 = 104
$T14 = 112
$T15 = 112
$T16 = 112
$T17 = 112
$T18 = 112
$T19 = 112
$T20 = 144
i$1$ = 152
$T21 = 160
$T22 = 160
$T23 = 168
$T24 = 176
$T25 = 176
$T26 = 176
$T27 = 208
$T28 = 208
$T29 = 352
$T30 = 352
$T31 = 464
Bytes$ = 576
Name$32 = 600
FileSize$ = 632
File$ = 656
magic$ = 928
__$ArrayPad$ = 936
?dtor$1@?0??Load@PreferencesConfig@@YAXXZ@4HA PROC	; `PreferencesConfig::Load'::`1'::dtor$1
	lea	rcx, QWORD PTR $T19[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??Load@PreferencesConfig@@YAXXZ@4HA ENDP	; `PreferencesConfig::Load'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
tv6538 = 64
G$1$ = 65
B$1$ = 66
A$1$ = 67
$T7 = 72
$T8 = 72
$T9 = 72
$T10 = 72
$T11 = 72
$T12 = 72
$T13 = 104
$T14 = 112
$T15 = 112
$T16 = 112
$T17 = 112
$T18 = 112
$T19 = 112
$T20 = 144
i$1$ = 152
$T21 = 160
$T22 = 160
$T23 = 168
$T24 = 176
$T25 = 176
$T26 = 176
$T27 = 208
$T28 = 208
$T29 = 352
$T30 = 352
$T31 = 464
Bytes$ = 576
Name$32 = 600
FileSize$ = 632
File$ = 656
magic$ = 928
__$ArrayPad$ = 936
?dtor$2@?0??Load@PreferencesConfig@@YAXXZ@4HA PROC	; `PreferencesConfig::Load'::`1'::dtor$2
	lea	rcx, QWORD PTR File$[rdx]
	jmp	??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
?dtor$2@?0??Load@PreferencesConfig@@YAXXZ@4HA ENDP	; `PreferencesConfig::Load'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
tv6538 = 64
G$1$ = 65
B$1$ = 66
A$1$ = 67
$T7 = 72
$T8 = 72
$T9 = 72
$T10 = 72
$T11 = 72
$T12 = 72
$T13 = 104
$T14 = 112
$T15 = 112
$T16 = 112
$T17 = 112
$T18 = 112
$T19 = 112
$T20 = 144
i$1$ = 152
$T21 = 160
$T22 = 160
$T23 = 168
$T24 = 176
$T25 = 176
$T26 = 176
$T27 = 208
$T28 = 208
$T29 = 352
$T30 = 352
$T31 = 464
Bytes$ = 576
Name$32 = 600
FileSize$ = 632
File$ = 656
magic$ = 928
__$ArrayPad$ = 936
?dtor$3@?0??Load@PreferencesConfig@@YAXXZ@4HA PROC	; `PreferencesConfig::Load'::`1'::dtor$3
	lea	rcx, QWORD PTR Bytes$[rdx]
	jmp	??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::~vector<unsigned char,std::allocator<unsigned char> >
?dtor$3@?0??Load@PreferencesConfig@@YAXXZ@4HA ENDP	; `PreferencesConfig::Load'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
tv6538 = 64
G$1$ = 65
B$1$ = 66
A$1$ = 67
$T7 = 72
$T8 = 72
$T9 = 72
$T10 = 72
$T11 = 72
$T12 = 72
$T13 = 104
$T14 = 112
$T15 = 112
$T16 = 112
$T17 = 112
$T18 = 112
$T19 = 112
$T20 = 144
i$1$ = 152
$T21 = 160
$T22 = 160
$T23 = 168
$T24 = 176
$T25 = 176
$T26 = 176
$T27 = 208
$T28 = 208
$T29 = 352
$T30 = 352
$T31 = 464
Bytes$ = 576
Name$32 = 600
FileSize$ = 632
File$ = 656
magic$ = 928
__$ArrayPad$ = 936
?dtor$4@?0??Load@PreferencesConfig@@YAXXZ@4HA PROC	; `PreferencesConfig::Load'::`1'::dtor$4
	mov	rcx, QWORD PTR $T20[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$4@?0??Load@PreferencesConfig@@YAXXZ@4HA ENDP	; `PreferencesConfig::Load'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
tv6538 = 64
G$1$ = 65
B$1$ = 66
A$1$ = 67
$T7 = 72
$T8 = 72
$T9 = 72
$T10 = 72
$T11 = 72
$T12 = 72
$T13 = 104
$T14 = 112
$T15 = 112
$T16 = 112
$T17 = 112
$T18 = 112
$T19 = 112
$T20 = 144
i$1$ = 152
$T21 = 160
$T22 = 160
$T23 = 168
$T24 = 176
$T25 = 176
$T26 = 176
$T27 = 208
$T28 = 208
$T29 = 352
$T30 = 352
$T31 = 464
Bytes$ = 576
Name$32 = 600
FileSize$ = 632
File$ = 656
magic$ = 928
__$ArrayPad$ = 936
?dtor$6@?0??Load@PreferencesConfig@@YAXXZ@4HA PROC	; `PreferencesConfig::Load'::`1'::dtor$6
	lea	rcx, QWORD PTR $T17[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$6@?0??Load@PreferencesConfig@@YAXXZ@4HA ENDP	; `PreferencesConfig::Load'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
tv6538 = 64
G$1$ = 65
B$1$ = 66
A$1$ = 67
$T7 = 72
$T8 = 72
$T9 = 72
$T10 = 72
$T11 = 72
$T12 = 72
$T13 = 104
$T14 = 112
$T15 = 112
$T16 = 112
$T17 = 112
$T18 = 112
$T19 = 112
$T20 = 144
i$1$ = 152
$T21 = 160
$T22 = 160
$T23 = 168
$T24 = 176
$T25 = 176
$T26 = 176
$T27 = 208
$T28 = 208
$T29 = 352
$T30 = 352
$T31 = 464
Bytes$ = 576
Name$32 = 600
FileSize$ = 632
File$ = 656
magic$ = 928
__$ArrayPad$ = 936
?dtor$7@?0??Load@PreferencesConfig@@YAXXZ@4HA PROC	; `PreferencesConfig::Load'::`1'::dtor$7
	mov	rcx, QWORD PTR $T22[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$7@?0??Load@PreferencesConfig@@YAXXZ@4HA ENDP	; `PreferencesConfig::Load'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
tv6538 = 64
G$1$ = 65
B$1$ = 66
A$1$ = 67
$T7 = 72
$T8 = 72
$T9 = 72
$T10 = 72
$T11 = 72
$T12 = 72
$T13 = 104
$T14 = 112
$T15 = 112
$T16 = 112
$T17 = 112
$T18 = 112
$T19 = 112
$T20 = 144
i$1$ = 152
$T21 = 160
$T22 = 160
$T23 = 168
$T24 = 176
$T25 = 176
$T26 = 176
$T27 = 208
$T28 = 208
$T29 = 352
$T30 = 352
$T31 = 464
Bytes$ = 576
Name$32 = 600
FileSize$ = 632
File$ = 656
magic$ = 928
__$ArrayPad$ = 936
?dtor$9@?0??Load@PreferencesConfig@@YAXXZ@4HA PROC	; `PreferencesConfig::Load'::`1'::dtor$9
	lea	rcx, QWORD PTR Name$32[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$9@?0??Load@PreferencesConfig@@YAXXZ@4HA ENDP	; `PreferencesConfig::Load'::`1'::dtor$9
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
tv6538 = 64
G$1$ = 65
B$1$ = 66
A$1$ = 67
$T7 = 72
$T8 = 72
$T9 = 72
$T10 = 72
$T11 = 72
$T12 = 72
$T13 = 104
$T14 = 112
$T15 = 112
$T16 = 112
$T17 = 112
$T18 = 112
$T19 = 112
$T20 = 144
i$1$ = 152
$T21 = 160
$T22 = 160
$T23 = 168
$T24 = 176
$T25 = 176
$T26 = 176
$T27 = 208
$T28 = 208
$T29 = 352
$T30 = 352
$T31 = 464
Bytes$ = 576
Name$32 = 600
FileSize$ = 632
File$ = 656
magic$ = 928
__$ArrayPad$ = 936
?dtor$10@?0??Load@PreferencesConfig@@YAXXZ@4HA PROC	; `PreferencesConfig::Load'::`1'::dtor$10
	mov	rcx, QWORD PTR $T23[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$10@?0??Load@PreferencesConfig@@YAXXZ@4HA ENDP	; `PreferencesConfig::Load'::`1'::dtor$10
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
tv6538 = 64
G$1$ = 65
B$1$ = 66
A$1$ = 67
$T7 = 72
$T8 = 72
$T9 = 72
$T10 = 72
$T11 = 72
$T12 = 72
$T13 = 104
$T14 = 112
$T15 = 112
$T16 = 112
$T17 = 112
$T18 = 112
$T19 = 112
$T20 = 144
i$1$ = 152
$T21 = 160
$T22 = 160
$T23 = 168
$T24 = 176
$T25 = 176
$T26 = 176
$T27 = 208
$T28 = 208
$T29 = 352
$T30 = 352
$T31 = 464
Bytes$ = 576
Name$32 = 600
FileSize$ = 632
File$ = 656
magic$ = 928
__$ArrayPad$ = 936
?dtor$13@?0??Load@PreferencesConfig@@YAXXZ@4HA PROC	; `PreferencesConfig::Load'::`1'::dtor$13
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T13[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN27@dtor$13
	and	DWORD PTR $T13[rbp], -2
	lea	rcx, QWORD PTR $T30[rbp]
	call	??1BfresFile@@QEAA@XZ
$LN27@dtor$13:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$13@?0??Load@PreferencesConfig@@YAXXZ@4HA ENDP	; `PreferencesConfig::Load'::`1'::dtor$13
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
tv6538 = 64
G$1$ = 65
B$1$ = 66
A$1$ = 67
$T7 = 72
$T8 = 72
$T9 = 72
$T10 = 72
$T11 = 72
$T12 = 72
$T13 = 104
$T14 = 112
$T15 = 112
$T16 = 112
$T17 = 112
$T18 = 112
$T19 = 112
$T20 = 144
i$1$ = 152
$T21 = 160
$T22 = 160
$T23 = 168
$T24 = 176
$T25 = 176
$T26 = 176
$T27 = 208
$T28 = 208
$T29 = 352
$T30 = 352
$T31 = 464
Bytes$ = 576
Name$32 = 600
FileSize$ = 632
File$ = 656
magic$ = 928
__$ArrayPad$ = 936
?dtor$15@?0??Load@PreferencesConfig@@YAXXZ@4HA PROC	; `PreferencesConfig::Load'::`1'::dtor$15
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T13[rbp]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN30@dtor$15
	and	DWORD PTR $T13[rbp], -3
	lea	rcx, QWORD PTR $T31[rbp]
	call	??1BfresFile@@QEAA@XZ
$LN30@dtor$15:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$15@?0??Load@PreferencesConfig@@YAXXZ@4HA ENDP	; `PreferencesConfig::Load'::`1'::dtor$15
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
tv6538 = 64
G$1$ = 65
B$1$ = 66
A$1$ = 67
$T7 = 72
$T8 = 72
$T9 = 72
$T10 = 72
$T11 = 72
$T12 = 72
$T13 = 104
$T14 = 112
$T15 = 112
$T16 = 112
$T17 = 112
$T18 = 112
$T19 = 112
$T20 = 144
i$1$ = 152
$T21 = 160
$T22 = 160
$T23 = 168
$T24 = 176
$T25 = 176
$T26 = 176
$T27 = 208
$T28 = 208
$T29 = 352
$T30 = 352
$T31 = 464
Bytes$ = 576
Name$32 = 600
FileSize$ = 632
File$ = 656
magic$ = 928
__$ArrayPad$ = 936
?dtor$16@?0??Load@PreferencesConfig@@YAXXZ@4HA PROC	; `PreferencesConfig::Load'::`1'::dtor$16
	lea	rcx, QWORD PTR $T28[rdx]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@@std@@QEAA@XZ
?dtor$16@?0??Load@PreferencesConfig@@YAXXZ@4HA ENDP	; `PreferencesConfig::Load'::`1'::dtor$16
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
tv6538 = 64
G$1$ = 65
B$1$ = 66
A$1$ = 67
$T7 = 72
$T8 = 72
$T9 = 72
$T10 = 72
$T11 = 72
$T12 = 72
$T13 = 104
$T14 = 112
$T15 = 112
$T16 = 112
$T17 = 112
$T18 = 112
$T19 = 112
$T20 = 144
i$1$ = 152
$T21 = 160
$T22 = 160
$T23 = 168
$T24 = 176
$T25 = 176
$T26 = 176
$T27 = 208
$T28 = 208
$T29 = 352
$T30 = 352
$T31 = 464
Bytes$ = 576
Name$32 = 600
FileSize$ = 632
File$ = 656
magic$ = 928
__$ArrayPad$ = 936
?dtor$19@?0??Load@PreferencesConfig@@YAXXZ@4HA PROC	; `PreferencesConfig::Load'::`1'::dtor$19
	lea	rcx, QWORD PTR $T29[rdx]
	jmp	??1BfresFile@@QEAA@XZ
?dtor$19@?0??Load@PreferencesConfig@@YAXXZ@4HA ENDP	; `PreferencesConfig::Load'::`1'::dtor$19
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
tv6538 = 64
G$1$ = 65
B$1$ = 66
A$1$ = 67
$T7 = 72
$T8 = 72
$T9 = 72
$T10 = 72
$T11 = 72
$T12 = 72
$T13 = 104
$T14 = 112
$T15 = 112
$T16 = 112
$T17 = 112
$T18 = 112
$T19 = 112
$T20 = 144
i$1$ = 152
$T21 = 160
$T22 = 160
$T23 = 168
$T24 = 176
$T25 = 176
$T26 = 176
$T27 = 208
$T28 = 208
$T29 = 352
$T30 = 352
$T31 = 464
Bytes$ = 576
Name$32 = 600
FileSize$ = 632
File$ = 656
magic$ = 928
__$ArrayPad$ = 936
?dtor$20@?0??Load@PreferencesConfig@@YAXXZ@4HA PROC	; `PreferencesConfig::Load'::`1'::dtor$20
	lea	rcx, QWORD PTR $T27[rdx]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@@std@@QEAA@XZ
?dtor$20@?0??Load@PreferencesConfig@@YAXXZ@4HA ENDP	; `PreferencesConfig::Load'::`1'::dtor$20
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\TextureToGo.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\TextureToGo.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\TextureToGo.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\TextureToGo.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\TextureToGo.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\TextureToGo.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\TextureToGo.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\TextureToGo.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\fstream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\ostream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\fstream
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\fstream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
;	COMDAT ?Save@PreferencesConfig@@YAXXZ
_TEXT	SEGMENT
ColorSize$1$ = 48
$T6 = 64
_Loc$5 = 64
$T7 = 64
_Loc$4 = 64
$T8 = 64
_Loc$3 = 64
$T9 = 64
_Loc$2 = 64
$T10 = 64
tv5970 = 96
$T11 = 96
$T12 = 104
$T13 = 120
$T14 = 120
$T15 = 152
$T16 = 152
$T17 = 184
$T18 = 184
Writer$ = 216
File$ = 256
__$ArrayPad$ = 528
?Save@PreferencesConfig@@YAXXZ PROC			; PreferencesConfig::Save, COMDAT

; 87   : {

$LN1054:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	mov	QWORD PTR [rsp+24], rdi
	push	rbp
	push	r12
	push	r13
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rsp-288]
	sub	rsp, 544				; 00000220H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-256], rax
	xorps	xmm0, xmm0
	movups	XMMWORD PTR Writer$[rbp-240], xmm0
	xorps	xmm1, xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	movdqu	XMMWORD PTR Writer$[rbp-256], xmm1
	xor	r14d, r14d
	mov	QWORD PTR Writer$[rbp-240], r14
	mov	DWORD PTR Writer$[rbp-232], r14d
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 46   : 		this->m_Data.resize(this->m_Data.size() + strlen(Bytes));

	lea	edx, QWORD PTR [r14+4]
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize

; 47   : 	}
; 48   : 	for (int i = 0; i < strlen(Bytes); i++)

	mov	r9d, r14d
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 87   : {

	lea	r8, OFFSET FLAT:??_C@_04KLNIMCCE@EPRF@+1
	mov	eax, DWORD PTR Writer$[rbp-232]
	npad	4
$LL946@Save:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 50   : 		this->m_Data[this->m_Offset] = Bytes[i];

	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [r8-1]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl

; 51   : 		this->m_Offset++;

	mov	eax, DWORD PTR Writer$[rbp-232]
	inc	eax
	mov	DWORD PTR Writer$[rbp-232], eax

; 50   : 		this->m_Data[this->m_Offset] = Bytes[i];

	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [r8]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl

; 51   : 		this->m_Offset++;

	mov	eax, DWORD PTR Writer$[rbp-232]
	inc	eax
	mov	DWORD PTR Writer$[rbp-232], eax

; 50   : 		this->m_Data[this->m_Offset] = Bytes[i];

	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [r8+1]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl

; 51   : 		this->m_Offset++;

	mov	eax, DWORD PTR Writer$[rbp-232]
	inc	eax
	mov	DWORD PTR Writer$[rbp-232], eax

; 50   : 		this->m_Data[this->m_Offset] = Bytes[i];

	movzx	edx, BYTE PTR [r8+2]
	movsxd	rcx, eax
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], dl

; 51   : 		this->m_Offset++;

	mov	eax, DWORD PTR Writer$[rbp-232]
	inc	eax
	mov	DWORD PTR Writer$[rbp-232], eax

; 47   : 	}
; 48   : 	for (int i = 0; i < strlen(Bytes); i++)

	add	r9d, 4
	lea	r8, QWORD PTR [r8+4]
	cmp	r9d, 4
	jb	SHORT $LL946@Save
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 12   : 	this->m_Data.resize(this->m_Data.size() + 1);

	inc	rdx
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize

; 13   : 	this->m_Data[m_Offset] = Byte;

	movsxd	rax, DWORD PTR Writer$[rbp-232]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

	add	rax, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 13   : 	this->m_Data[m_Offset] = Byte;

	mov	BYTE PTR [rax], 1

; 14   : 	this->m_Offset++;

	inc	DWORD PTR Writer$[rbp-232]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 93   : 	Writer.WriteByte((uint8_t)UIAINBEditor::Open);

	movzx	ebx, BYTE PTR ?Open@UIAINBEditor@@3_NA	; UIAINBEditor::Open
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 12   : 	this->m_Data.resize(this->m_Data.size() + 1);

	inc	rdx
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize

; 13   : 	this->m_Data[m_Offset] = Byte;

	movsxd	rax, DWORD PTR Writer$[rbp-232]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

	add	rax, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 13   : 	this->m_Data[m_Offset] = Byte;

	mov	BYTE PTR [rax], bl

; 14   : 	this->m_Offset++;

	inc	DWORD PTR Writer$[rbp-232]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 94   : 	Writer.WriteByte((uint8_t)UITools::Open);

	movzx	ebx, BYTE PTR ?Open@UITools@@3_NA	; UITools::Open
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 12   : 	this->m_Data.resize(this->m_Data.size() + 1);

	inc	rdx
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize

; 13   : 	this->m_Data[m_Offset] = Byte;

	movsxd	rax, DWORD PTR Writer$[rbp-232]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

	add	rax, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 13   : 	this->m_Data[m_Offset] = Byte;

	mov	BYTE PTR [rax], bl

; 14   : 	this->m_Offset++;

	inc	DWORD PTR Writer$[rbp-232]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 95   : 	Writer.WriteByte((uint8_t)UIProperties::Open);

	movzx	ebx, BYTE PTR ?Open@UIProperties@@3_NA	; UIProperties::Open
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 12   : 	this->m_Data.resize(this->m_Data.size() + 1);

	inc	rdx
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize

; 13   : 	this->m_Data[m_Offset] = Byte;

	movsxd	rax, DWORD PTR Writer$[rbp-232]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

	add	rax, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 13   : 	this->m_Data[m_Offset] = Byte;

	mov	BYTE PTR [rax], bl

; 14   : 	this->m_Offset++;

	inc	DWORD PTR Writer$[rbp-232]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 96   : 	Writer.WriteByte((uint8_t)UIOutliner::Open);

	movzx	ebx, BYTE PTR ?Open@UIOutliner@@3_NA	; UIOutliner::Open
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 12   : 	this->m_Data.resize(this->m_Data.size() + 1);

	inc	rdx
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize

; 13   : 	this->m_Data[m_Offset] = Byte;

	movsxd	rax, DWORD PTR Writer$[rbp-232]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

	add	rax, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 13   : 	this->m_Data[m_Offset] = Byte;

	mov	BYTE PTR [rax], bl

; 14   : 	this->m_Offset++;

	inc	DWORD PTR Writer$[rbp-232]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 97   : 	Writer.WriteByte((uint8_t)UIMSBTEditor::Open);

	movzx	ebx, BYTE PTR ?Open@UIMSBTEditor@@3_NA	; UIMSBTEditor::Open
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 12   : 	this->m_Data.resize(this->m_Data.size() + 1);

	inc	rdx
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize

; 13   : 	this->m_Data[m_Offset] = Byte;

	movsxd	rax, DWORD PTR Writer$[rbp-232]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

	add	rax, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 13   : 	this->m_Data[m_Offset] = Byte;

	mov	BYTE PTR [rax], bl

; 14   : 	this->m_Offset++;

	inc	DWORD PTR Writer$[rbp-232]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 98   : 	Writer.WriteByte((uint8_t)UIMapView::Open);

	movzx	ebx, BYTE PTR ?Open@UIMapView@@3_NA	; UIMapView::Open
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 12   : 	this->m_Data.resize(this->m_Data.size() + 1);

	inc	rdx
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize

; 13   : 	this->m_Data[m_Offset] = Byte;

	movsxd	rax, DWORD PTR Writer$[rbp-232]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

	add	rax, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 13   : 	this->m_Data[m_Offset] = Byte;

	mov	BYTE PTR [rax], bl

; 14   : 	this->m_Offset++;

	inc	DWORD PTR Writer$[rbp-232]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 99   : 	Writer.WriteByte((uint8_t)UIConsole::Open);

	movzx	ebx, BYTE PTR ?Open@UIConsole@@3_NA	; UIConsole::Open
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 12   : 	this->m_Data.resize(this->m_Data.size() + 1);

	inc	rdx
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize

; 13   : 	this->m_Data[m_Offset] = Byte;

	movsxd	rax, DWORD PTR Writer$[rbp-232]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

	add	rax, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 13   : 	this->m_Data[m_Offset] = Byte;

	mov	BYTE PTR [rax], bl

; 14   : 	this->m_Offset++;

	inc	DWORD PTR Writer$[rbp-232]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 100  : 	Writer.WriteByte((uint8_t)UIActorTool::Open);

	movzx	ebx, BYTE PTR ?Open@UIActorTool@@3_NA	; UIActorTool::Open
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 12   : 	this->m_Data.resize(this->m_Data.size() + 1);

	inc	rdx
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize

; 13   : 	this->m_Data[m_Offset] = Byte;

	movsxd	rax, DWORD PTR Writer$[rbp-232]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

	add	rax, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 13   : 	this->m_Data[m_Offset] = Byte;

	mov	BYTE PTR [rax], bl

; 14   : 	this->m_Offset++;

	mov	r8d, DWORD PTR Writer$[rbp-232]
	inc	r8d
	mov	DWORD PTR Writer$[rbp-232], r8d
	mov	esi, r8d
	mov	DWORD PTR tv5970[rsp], r8d
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 103  : 	uint16_t ColorSize = 0;

	movzx	edi, r14w
	mov	WORD PTR ColorSize$1$[rsp], r14w
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	r15, QWORD PTR Writer$[rbp-248]
	mov	rdx, r15
	mov	r12, QWORD PTR Writer$[rbp-256]
	sub	rdx, r12
	lea	eax, DWORD PTR [r8+2]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 30   : 		if (this->m_Offset + Offset >= this->m_Data.size())

	movsxd	rcx, eax
	cmp	rcx, rdx
	jb	SHORT $LN880@Save

; 31   : 		{
; 32   : 			this->m_Data.resize(Offset + this->m_Offset + 1);

	lea	eax, DWORD PTR [r8+3]
	movsxd	rdx, eax
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize
	mov	r8d, DWORD PTR Writer$[rbp-232]
	mov	r15, QWORD PTR Writer$[rbp-248]
	mov	r12, QWORD PTR Writer$[rbp-256]
$LN880@Save:

; 33   : 		}
; 34   : 		this->m_Offset += Offset;

	add	r8d, 2
	mov	DWORD PTR Writer$[rbp-232], r8d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	rbx, QWORD PTR ?Models@BfresLibrary@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@@std@@@2@@std@@A
	mov	rbx, QWORD PTR [rbx]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 105  : 	for (auto& [Key, Val] : BfresLibrary::Models)

	cmp	BYTE PTR [rbx+25], dil
	jne	$LN1046@Save
	mov	r13, QWORD PTR ?Textures@TextureToGoLibrary@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@2@@std@@A
	npad	2
$LL164@Save:

; 106  : 	{
; 107  : 		if (!Val.IsDefaultModel()) continue;

	cmp	BYTE PTR [rbx+136], 0
	je	$LN2@Save
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	rdi, QWORD PTR [r13+8]
	mov	rsi, r13

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rdi+25], 0
	jne	SHORT $LN213@Save
	npad	6
$LL212@Save:

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	lea	rcx, QWORD PTR [rdi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	lea	rdx, QWORD PTR [rbx+32]
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	test	al, al
	jns	SHORT $LN214@Save

; 1619 :                 _Trynode                 = _Trynode->_Right;

	mov	rdi, QWORD PTR [rdi+16]

; 1620 :             } else {

	jmp	SHORT $LN215@Save
$LN214@Save:

; 1622 :                 _Result._Bound           = _Trynode;

	mov	rsi, rdi

; 1623 :                 _Trynode                 = _Trynode->_Left;

	mov	rdi, QWORD PTR [rdi]
$LN215@Save:

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rdi+25], 0
	je	SHORT $LL212@Save
$LN213@Save:

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	cmp	BYTE PTR [rsi+25], 0
	jne	$LN1049@Save
	lea	rdx, QWORD PTR [rsi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	lea	rcx, QWORD PTR [rbx+32]
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	test	al, al
	js	$LN1049@Save
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 110  : 		Writer.WriteByte(Key.length());

	movzx	edi, BYTE PTR [rbx+48]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	sub	r15, r12
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 12   : 	this->m_Data.resize(this->m_Data.size() + 1);

	lea	rdx, QWORD PTR [r15+1]
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize

; 13   : 	this->m_Data[m_Offset] = Byte;

	movsxd	rcx, DWORD PTR Writer$[rbp-232]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], dil

; 14   : 	this->m_Offset++;

	inc	DWORD PTR Writer$[rbp-232]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rdx, QWORD PTR [rbx+32]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rbx+56], 16
	jb	SHORT $LN232@Save

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rdx, QWORD PTR [rbx+32]
$LN232@Save:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 111  : 		Writer.WriteBytes(Key.c_str());

	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?WriteBytes@BinaryVectorWriter@@QEAAXPEBD@Z ; BinaryVectorWriter::WriteBytes
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	r15, QWORD PTR ?Textures@TextureToGoLibrary@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@2@@std@@A
	mov	rdi, QWORD PTR [r15+8]
	mov	QWORD PTR _Loc$2[rsp], rdi
	xor	r12d, r12d
	mov	DWORD PTR _Loc$2[rsp+8], r12d
	mov	rsi, r15

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rdi+25], r12b
	jne	SHORT $LN244@Save
	npad	2
$LL243@Save:

; 1616 :             _Result._Location._Parent = _Trynode;

	mov	QWORD PTR _Loc$2[rsp], rdi

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	lea	rcx, QWORD PTR [rdi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	lea	rdx, QWORD PTR [rbx+32]
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	test	al, al
	jns	SHORT $LN245@Save

; 1618 :                 _Result._Location._Child = _Tree_child::_Right;

	mov	DWORD PTR _Loc$2[rsp+8], r12d

; 1619 :                 _Trynode                 = _Trynode->_Right;

	mov	rdi, QWORD PTR [rdi+16]

; 1620 :             } else {

	jmp	SHORT $LN246@Save
$LN245@Save:

; 1621 :                 _Result._Location._Child = _Tree_child::_Left;

	mov	DWORD PTR _Loc$2[rsp+8], 1

; 1622 :                 _Result._Bound           = _Trynode;

	mov	rsi, rdi

; 1623 :                 _Trynode                 = _Trynode->_Left;

	mov	rdi, QWORD PTR [rdi]
$LN246@Save:

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rdi+25], r12b
	je	SHORT $LL243@Save
$LN244@Save:

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	cmp	BYTE PTR [rsi+25], r12b
	jne	SHORT $LN239@Save
	lea	rdx, QWORD PTR [rsi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	lea	rcx, QWORD PTR [rbx+32]
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	test	al, al
	jns	$LN238@Save
$LN239@Save:

; 1631 :         if (max_size() == _Get_scary()->_Mysize) {

	mov	rax, 164703072086692425			; 0249249249249249H
	cmp	QWORD PTR ?Textures@TextureToGoLibrary@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@2@@std@@A+8, rax
	je	$LN994@Save
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1144 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	lea	r13, OFFSET FLAT:?Textures@TextureToGoLibrary@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@2@@std@@A ; TextureToGoLibrary::Textures
	mov	QWORD PTR $T12[rsp], r13

; 1151 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	QWORD PTR $T12[rsp+8], r12

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 112				; 00000070H
	call	??2@YAPEAX_K@Z				; operator new
	mov	rsi, rax

; 1152 :         _Ptr = _Al.allocate(1);

	mov	QWORD PTR $T12[rsp+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 301  :         : first(_Tuple_get<_Indices1>(_STD move(_Val1))...), second(_Tuple_get<_Indices2>(_STD move(_Val2))...) {}

	lea	rdx, QWORD PTR [rbx+32]
	lea	rcx, QWORD PTR [rax+32]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\TextureToGo.h

; 10   : 	void (*DecompressFunction)(unsigned int, unsigned int, std::vector<unsigned char>&, std::vector<unsigned char>&, TextureToGo* TexToGo) = nullptr;

	mov	QWORD PTR [rsi+64], r12
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	QWORD PTR [rsi+72], r12
	mov	QWORD PTR [rsi+80], r12
	mov	QWORD PTR [rsi+88], r12
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\TextureToGo.h

; 41   : 	bool m_Transparent = false;

	mov	WORD PTR [rsi+106], 256			; 00000100H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 808  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

	mov	QWORD PTR [rsi], r15

; 809  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

	mov	QWORD PTR [rsi+8], r15

; 810  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

	mov	QWORD PTR [rsi+16], r15

; 811  :         this->_Ptr->_Color = _Red;

	mov	WORD PTR [rsi+24], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR $T12[rsp+8], r12
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map

; 212  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

	movups	xmm0, XMMWORD PTR _Loc$2[rsp]
	movaps	XMMWORD PTR $T9[rsp], xmm0
	mov	r8, rsi
	lea	rdx, QWORD PTR $T9[rsp]
	mov	rcx, r13
	call	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@2@U?$_Tree_id@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@2@QEAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo> > >::_Insert_node
	mov	rsi, rax
$LN238@Save:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

	mov	rax, QWORD PTR [rsi+72]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 112  : 		Writer.WriteInteger((uint8_t)TextureToGoLibrary::Textures[Key].GetPixels()[0], sizeof(uint8_t));

	movzx	edi, BYTE PTR [rax]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 83   : 	if (this->m_Offset + Size > this->m_Data.size())

	mov	eax, DWORD PTR Writer$[rbp-232]
	inc	eax
	movsxd	rcx, eax
	cmp	rcx, rdx
	jbe	SHORT $LN387@Save

; 84   : 	{
; 85   : 		this->m_Data.resize(this->m_Data.size() + Size);

	inc	rdx
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize
$LN387@Save:

; 86   : 	}
; 87   : 
; 88   : 	char* Bytes = new char[sizeof(int64_t)];

	mov	ecx, 8
	call	??_U@YAPEAX_K@Z				; operator new[]

; 89   : 
; 90   : 	std::memcpy(Bytes, &Data, sizeof(Bytes));

	mov	QWORD PTR [rax], rdi

; 91   : 
; 92   : 	for (int i = 0; i < Size; i++) {
; 93   : 		this->m_Data[this->m_Offset + i] = Bytes[i];

	movsxd	rdx, DWORD PTR Writer$[rbp-232]
	mov	rcx, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rcx], dil

; 94   : 	}
; 95   : 
; 96   : 	delete[] Bytes;

	mov	rcx, rax
	call	??_V@YAXPEAX@Z				; operator delete[]

; 97   : 
; 98   : 	this->m_Offset += Size;

	mov	r15d, DWORD PTR Writer$[rbp-232]
	inc	r15d
	mov	DWORD PTR Writer$[rbp-232], r15d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	r13, QWORD PTR ?Textures@TextureToGoLibrary@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@2@@std@@A
	mov	rdi, QWORD PTR [r13+8]
	mov	QWORD PTR _Loc$3[rsp], rdi
	mov	DWORD PTR _Loc$3[rsp+8], r12d
	mov	rsi, r13

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rdi+25], 0
	jne	SHORT $LN405@Save
$LL404@Save:

; 1616 :             _Result._Location._Parent = _Trynode;

	mov	QWORD PTR _Loc$3[rsp], rdi

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	lea	rcx, QWORD PTR [rdi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	lea	rdx, QWORD PTR [rbx+32]
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	test	al, al
	jns	SHORT $LN406@Save

; 1618 :                 _Result._Location._Child = _Tree_child::_Right;

	mov	DWORD PTR _Loc$3[rsp+8], r12d

; 1619 :                 _Trynode                 = _Trynode->_Right;

	mov	rdi, QWORD PTR [rdi+16]

; 1620 :             } else {

	jmp	SHORT $LN407@Save
$LN406@Save:

; 1621 :                 _Result._Location._Child = _Tree_child::_Left;

	mov	DWORD PTR _Loc$3[rsp+8], 1

; 1622 :                 _Result._Bound           = _Trynode;

	mov	rsi, rdi

; 1623 :                 _Trynode                 = _Trynode->_Left;

	mov	rdi, QWORD PTR [rdi]
$LN407@Save:

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rdi+25], 0
	je	SHORT $LL404@Save
$LN405@Save:

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	cmp	BYTE PTR [rsi+25], 0
	jne	SHORT $LN400@Save
	lea	rdx, QWORD PTR [rsi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	lea	rcx, QWORD PTR [rbx+32]
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	test	al, al
	jns	$LN399@Save
$LN400@Save:

; 1631 :         if (max_size() == _Get_scary()->_Mysize) {

	mov	rax, 164703072086692425			; 0249249249249249H
	cmp	QWORD PTR ?Textures@TextureToGoLibrary@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@2@@std@@A+8, rax
	je	$LN994@Save
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1144 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	lea	r15, OFFSET FLAT:?Textures@TextureToGoLibrary@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@2@@std@@A ; TextureToGoLibrary::Textures
	mov	QWORD PTR $T13[rsp], r15

; 1151 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	QWORD PTR $T13[rbp-248], r12

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 112				; 00000070H
	call	??2@YAPEAX_K@Z				; operator new
	mov	rsi, rax

; 1152 :         _Ptr = _Al.allocate(1);

	mov	QWORD PTR $T13[rbp-248], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 301  :         : first(_Tuple_get<_Indices1>(_STD move(_Val1))...), second(_Tuple_get<_Indices2>(_STD move(_Val2))...) {}

	lea	rdx, QWORD PTR [rbx+32]
	lea	rcx, QWORD PTR [rax+32]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\TextureToGo.h

; 10   : 	void (*DecompressFunction)(unsigned int, unsigned int, std::vector<unsigned char>&, std::vector<unsigned char>&, TextureToGo* TexToGo) = nullptr;

	mov	QWORD PTR [rsi+64], r12
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	QWORD PTR [rsi+72], r12
	mov	QWORD PTR [rsi+80], r12
	mov	QWORD PTR [rsi+88], r12
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\TextureToGo.h

; 41   : 	bool m_Transparent = false;

	mov	WORD PTR [rsi+106], 256			; 00000100H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 808  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

	mov	QWORD PTR [rsi], r13

; 809  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

	mov	QWORD PTR [rsi+8], r13

; 810  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

	mov	QWORD PTR [rsi+16], r13

; 811  :         this->_Ptr->_Color = _Red;

	mov	WORD PTR [rsi+24], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR $T13[rbp-248], r12
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map

; 212  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

	movups	xmm0, XMMWORD PTR _Loc$3[rsp]
	movaps	XMMWORD PTR $T8[rsp], xmm0
	mov	r8, rsi
	lea	rdx, QWORD PTR $T8[rsp]
	mov	rcx, r15
	call	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@2@U?$_Tree_id@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@2@QEAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo> > >::_Insert_node
	mov	rsi, rax
	mov	r15d, DWORD PTR Writer$[rbp-232]
$LN399@Save:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

	mov	rax, QWORD PTR [rsi+72]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 113  : 		Writer.WriteInteger((uint8_t)TextureToGoLibrary::Textures[Key].GetPixels()[1], sizeof(uint8_t));

	movzx	edi, BYTE PTR [rax+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 83   : 	if (this->m_Offset + Size > this->m_Data.size())

	lea	eax, DWORD PTR [r15+1]
	movsxd	rcx, eax
	cmp	rcx, rdx
	jbe	SHORT $LN548@Save

; 84   : 	{
; 85   : 		this->m_Data.resize(this->m_Data.size() + Size);

	inc	rdx
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize
$LN548@Save:

; 86   : 	}
; 87   : 
; 88   : 	char* Bytes = new char[sizeof(int64_t)];

	mov	ecx, 8
	call	??_U@YAPEAX_K@Z				; operator new[]

; 89   : 
; 90   : 	std::memcpy(Bytes, &Data, sizeof(Bytes));

	mov	QWORD PTR [rax], rdi

; 91   : 
; 92   : 	for (int i = 0; i < Size; i++) {
; 93   : 		this->m_Data[this->m_Offset + i] = Bytes[i];

	movsxd	rdx, DWORD PTR Writer$[rbp-232]
	mov	rcx, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rcx], dil

; 94   : 	}
; 95   : 
; 96   : 	delete[] Bytes;

	mov	rcx, rax
	call	??_V@YAXPEAX@Z				; operator delete[]

; 97   : 
; 98   : 	this->m_Offset += Size;

	mov	r15d, DWORD PTR Writer$[rbp-232]
	inc	r15d
	mov	DWORD PTR Writer$[rbp-232], r15d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	r13, QWORD PTR ?Textures@TextureToGoLibrary@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@2@@std@@A
	mov	rdi, QWORD PTR [r13+8]
	mov	QWORD PTR _Loc$4[rsp], rdi
	mov	DWORD PTR _Loc$4[rsp+8], r12d
	mov	rsi, r13

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rdi+25], 0
	jne	SHORT $LN566@Save
	npad	11
$LL565@Save:

; 1616 :             _Result._Location._Parent = _Trynode;

	mov	QWORD PTR _Loc$4[rsp], rdi

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	lea	rcx, QWORD PTR [rdi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	lea	rdx, QWORD PTR [rbx+32]
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	test	al, al
	jns	SHORT $LN567@Save

; 1618 :                 _Result._Location._Child = _Tree_child::_Right;

	mov	DWORD PTR _Loc$4[rsp+8], r12d

; 1619 :                 _Trynode                 = _Trynode->_Right;

	mov	rdi, QWORD PTR [rdi+16]

; 1620 :             } else {

	jmp	SHORT $LN568@Save
$LN567@Save:

; 1621 :                 _Result._Location._Child = _Tree_child::_Left;

	mov	DWORD PTR _Loc$4[rsp+8], 1

; 1622 :                 _Result._Bound           = _Trynode;

	mov	rsi, rdi

; 1623 :                 _Trynode                 = _Trynode->_Left;

	mov	rdi, QWORD PTR [rdi]
$LN568@Save:

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rdi+25], 0
	je	SHORT $LL565@Save
$LN566@Save:

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	cmp	BYTE PTR [rsi+25], 0
	jne	SHORT $LN561@Save
	lea	rdx, QWORD PTR [rsi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	lea	rcx, QWORD PTR [rbx+32]
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	test	al, al
	js	SHORT $LN561@Save
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map

; 200  :             return {_Loc._Bound, false};

	lea	r13, OFFSET FLAT:?Textures@TextureToGoLibrary@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@2@@std@@A ; TextureToGoLibrary::Textures
	jmp	$LN560@Save
$LN561@Save:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1631 :         if (max_size() == _Get_scary()->_Mysize) {

	mov	rax, 164703072086692425			; 0249249249249249H
	cmp	QWORD PTR ?Textures@TextureToGoLibrary@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@2@@std@@A+8, rax
	je	$LN994@Save
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1144 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	lea	rax, OFFSET FLAT:?Textures@TextureToGoLibrary@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@2@@std@@A ; TextureToGoLibrary::Textures
	mov	QWORD PTR $T15[rbp-256], rax

; 1151 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	QWORD PTR $T15[rbp-248], r12

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 112				; 00000070H
	call	??2@YAPEAX_K@Z				; operator new
	mov	rsi, rax

; 1152 :         _Ptr = _Al.allocate(1);

	mov	QWORD PTR $T15[rbp-248], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 301  :         : first(_Tuple_get<_Indices1>(_STD move(_Val1))...), second(_Tuple_get<_Indices2>(_STD move(_Val2))...) {}

	lea	rdx, QWORD PTR [rbx+32]
	lea	rcx, QWORD PTR [rax+32]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\TextureToGo.h

; 10   : 	void (*DecompressFunction)(unsigned int, unsigned int, std::vector<unsigned char>&, std::vector<unsigned char>&, TextureToGo* TexToGo) = nullptr;

	mov	QWORD PTR [rsi+64], r12
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	QWORD PTR [rsi+72], r12
	mov	QWORD PTR [rsi+80], r12
	mov	QWORD PTR [rsi+88], r12
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\TextureToGo.h

; 41   : 	bool m_Transparent = false;

	mov	WORD PTR [rsi+106], 256			; 00000100H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 808  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

	mov	QWORD PTR [rsi], r13

; 809  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

	mov	QWORD PTR [rsi+8], r13

; 810  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

	mov	QWORD PTR [rsi+16], r13

; 811  :         this->_Ptr->_Color = _Red;

	mov	WORD PTR [rsi+24], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR $T15[rbp-248], r12
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map

; 212  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

	movups	xmm0, XMMWORD PTR _Loc$4[rsp]
	movaps	XMMWORD PTR $T7[rsp], xmm0
	mov	r8, rsi
	lea	rdx, QWORD PTR $T7[rsp]
	lea	r13, OFFSET FLAT:?Textures@TextureToGoLibrary@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@2@@std@@A ; TextureToGoLibrary::Textures
	mov	rcx, r13
	call	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@2@U?$_Tree_id@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@2@QEAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo> > >::_Insert_node
	mov	rsi, rax
	mov	r15d, DWORD PTR Writer$[rbp-232]
$LN560@Save:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

	mov	rax, QWORD PTR [rsi+72]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 114  : 		Writer.WriteInteger((uint8_t)TextureToGoLibrary::Textures[Key].GetPixels()[2], sizeof(uint8_t));

	movzx	edi, BYTE PTR [rax+2]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 83   : 	if (this->m_Offset + Size > this->m_Data.size())

	lea	eax, DWORD PTR [r15+1]
	movsxd	rcx, eax
	cmp	rcx, rdx
	jbe	SHORT $LN709@Save

; 84   : 	{
; 85   : 		this->m_Data.resize(this->m_Data.size() + Size);

	inc	rdx
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize
$LN709@Save:

; 86   : 	}
; 87   : 
; 88   : 	char* Bytes = new char[sizeof(int64_t)];

	mov	ecx, 8
	call	??_U@YAPEAX_K@Z				; operator new[]

; 89   : 
; 90   : 	std::memcpy(Bytes, &Data, sizeof(Bytes));

	mov	QWORD PTR [rax], rdi

; 91   : 
; 92   : 	for (int i = 0; i < Size; i++) {
; 93   : 		this->m_Data[this->m_Offset + i] = Bytes[i];

	movsxd	rdx, DWORD PTR Writer$[rbp-232]
	mov	rcx, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rcx], dil

; 94   : 	}
; 95   : 
; 96   : 	delete[] Bytes;

	mov	rcx, rax
	call	??_V@YAXPEAX@Z				; operator delete[]

; 97   : 
; 98   : 	this->m_Offset += Size;

	inc	DWORD PTR Writer$[rbp-232]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	r15, QWORD PTR ?Textures@TextureToGoLibrary@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@2@@std@@A
	mov	rdi, QWORD PTR [r15+8]
	mov	QWORD PTR _Loc$5[rsp], rdi
	mov	DWORD PTR _Loc$5[rsp+8], r12d
	mov	rsi, r15

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rdi+25], 0
	jne	SHORT $LN727@Save
	npad	7
$LL726@Save:

; 1616 :             _Result._Location._Parent = _Trynode;

	mov	QWORD PTR _Loc$5[rsp], rdi

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	lea	rcx, QWORD PTR [rdi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	lea	rdx, QWORD PTR [rbx+32]
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	test	al, al
	jns	SHORT $LN728@Save

; 1618 :                 _Result._Location._Child = _Tree_child::_Right;

	mov	DWORD PTR _Loc$5[rsp+8], r12d

; 1619 :                 _Trynode                 = _Trynode->_Right;

	mov	rdi, QWORD PTR [rdi+16]

; 1620 :             } else {

	jmp	SHORT $LN729@Save
$LN728@Save:

; 1621 :                 _Result._Location._Child = _Tree_child::_Left;

	mov	DWORD PTR _Loc$5[rsp+8], 1

; 1622 :                 _Result._Bound           = _Trynode;

	mov	rsi, rdi

; 1623 :                 _Trynode                 = _Trynode->_Left;

	mov	rdi, QWORD PTR [rdi]
$LN729@Save:

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rdi+25], 0
	je	SHORT $LL726@Save
$LN727@Save:

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	cmp	BYTE PTR [rsi+25], 0
	jne	SHORT $LN722@Save
	lea	rdx, QWORD PTR [rsi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	lea	rcx, QWORD PTR [rbx+32]
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	test	al, al
	jns	$LN721@Save
$LN722@Save:

; 1631 :         if (max_size() == _Get_scary()->_Mysize) {

	mov	rax, 164703072086692425			; 0249249249249249H
	cmp	QWORD PTR ?Textures@TextureToGoLibrary@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@2@@std@@A+8, rax
	je	$LN994@Save
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1144 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	mov	QWORD PTR $T17[rbp-256], r13

; 1151 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	QWORD PTR $T17[rbp-248], r12

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 112				; 00000070H
	call	??2@YAPEAX_K@Z				; operator new
	mov	rsi, rax

; 1152 :         _Ptr = _Al.allocate(1);

	mov	QWORD PTR $T17[rbp-248], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 301  :         : first(_Tuple_get<_Indices1>(_STD move(_Val1))...), second(_Tuple_get<_Indices2>(_STD move(_Val2))...) {}

	lea	rdx, QWORD PTR [rbx+32]
	lea	rcx, QWORD PTR [rax+32]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\TextureToGo.h

; 10   : 	void (*DecompressFunction)(unsigned int, unsigned int, std::vector<unsigned char>&, std::vector<unsigned char>&, TextureToGo* TexToGo) = nullptr;

	mov	QWORD PTR [rsi+64], r12
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	QWORD PTR [rsi+72], r12
	mov	QWORD PTR [rsi+80], r12
	mov	QWORD PTR [rsi+88], r12
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\TextureToGo.h

; 41   : 	bool m_Transparent = false;

	mov	WORD PTR [rsi+106], 256			; 00000100H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 808  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

	mov	QWORD PTR [rsi], r15

; 809  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

	mov	QWORD PTR [rsi+8], r15

; 810  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

	mov	QWORD PTR [rsi+16], r15

; 811  :         this->_Ptr->_Color = _Red;

	mov	WORD PTR [rsi+24], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR $T17[rbp-248], r12
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map

; 212  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

	movups	xmm0, XMMWORD PTR _Loc$5[rsp]
	movaps	XMMWORD PTR $T6[rsp], xmm0
	mov	r8, rsi
	lea	rdx, QWORD PTR $T6[rsp]
	mov	rcx, r13
	call	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@2@U?$_Tree_id@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@2@QEAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo> > >::_Insert_node
	mov	rsi, rax
$LN721@Save:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

	mov	rax, QWORD PTR [rsi+72]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 115  : 		Writer.WriteInteger((uint8_t)TextureToGoLibrary::Textures[Key].GetPixels()[3], sizeof(uint8_t));

	movzx	edx, BYTE PTR [rax+3]
	mov	r8d, 1
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?WriteInteger@BinaryVectorWriter@@QEAAX_JH@Z ; BinaryVectorWriter::WriteInteger

; 116  : 		ColorSize++;

	movzx	edi, WORD PTR ColorSize$1$[rsp]
	inc	di
	mov	WORD PTR ColorSize$1$[rsp], di
	mov	r15, QWORD PTR Writer$[rbp-248]
	mov	r12, QWORD PTR Writer$[rbp-256]
	mov	r13, QWORD PTR ?Textures@TextureToGoLibrary@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@2@@std@@A
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	jmp	SHORT $LN2@Save
$LN1049@Save:

; 51   :         if (_Ptr->_Right->_Isnil) { // climb looking for right subtree

	movzx	edi, WORD PTR ColorSize$1$[rsp]
$LN2@Save:
	mov	rax, QWORD PTR [rbx+16]
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LN163@Save

; 52   :             _Nodeptr _Pnode;
; 53   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Right) {

	mov	rax, QWORD PTR [rbx+8]
	cmp	BYTE PTR [rax+25], 0
	jne	SHORT $LN162@Save
$LL161@Save:
	cmp	rbx, QWORD PTR [rax+16]
	jne	SHORT $LN162@Save

; 54   :                 _Ptr = _Pnode; // ==> parent while right subtree

	mov	rbx, rax

; 52   :             _Nodeptr _Pnode;
; 53   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Right) {

	mov	rax, QWORD PTR [rax+8]
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LL161@Save
$LN162@Save:

; 55   :             }
; 56   : 
; 57   :             _Ptr = _Pnode; // ==> parent (head if end())

	mov	rbx, rax

; 58   :         } else {

	jmp	SHORT $LN1002@Save
$LN163@Save:

; 59   :             _Ptr = _Mytree::_Min(_Ptr->_Right); // ==> smallest of right subtree

	mov	rbx, rax

; 453  :         while (!_Pnode->_Left->_Isnil) {

	mov	rax, QWORD PTR [rax]
	cmp	BYTE PTR [rax+25], 0
	jne	SHORT $LN1002@Save
	npad	9
$LL167@Save:

; 454  :             _Pnode = _Pnode->_Left;

	mov	rbx, rax

; 60   :         }
; 61   : 
; 62   :         return *this;
; 63   :     }
; 64   : 
; 65   :     _Tree_unchecked_const_iterator operator++(int) noexcept {
; 66   :         _Tree_unchecked_const_iterator _Tmp = *this;
; 67   :         ++*this;
; 68   :         return _Tmp;
; 69   :     }
; 70   : 
; 71   :     _Tree_unchecked_const_iterator& operator--() noexcept {
; 72   :         if (_Ptr->_Isnil) {
; 73   :             _Ptr = _Ptr->_Right; // end() ==> rightmost
; 74   :         } else if (_Ptr->_Left->_Isnil) { // climb looking for left subtree
; 75   :             _Nodeptr _Pnode;
; 76   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Left) {
; 77   :                 _Ptr = _Pnode; // ==> parent while left subtree
; 78   :             }
; 79   : 
; 80   :             if (!_Ptr->_Isnil) { // decrement non-begin()
; 81   :                 _Ptr = _Pnode; // ==> parent if not head
; 82   :             }
; 83   :         } else {
; 84   :             _Ptr = _Mytree::_Max(_Ptr->_Left); // ==> largest of left subtree
; 85   :         }
; 86   : 
; 87   :         return *this;
; 88   :     }
; 89   : 
; 90   :     _Tree_unchecked_const_iterator operator--(int) noexcept {
; 91   :         _Tree_unchecked_const_iterator _Tmp = *this;
; 92   :         --*this;
; 93   :         return _Tmp;
; 94   :     }
; 95   : 
; 96   :     _NODISCARD bool operator==(const _Tree_unchecked_const_iterator& _Right) const noexcept {
; 97   :         return _Ptr == _Right._Ptr;
; 98   :     }
; 99   : 
; 100  : #if !_HAS_CXX20
; 101  :     _NODISCARD bool operator!=(const _Tree_unchecked_const_iterator& _Right) const noexcept {
; 102  :         return !(*this == _Right);
; 103  :     }
; 104  : #endif // !_HAS_CXX20
; 105  : 
; 106  :     _NODISCARD bool operator==(_Default_sentinel) const noexcept {
; 107  :         return !!_Ptr->_Isnil; // TRANSITION, avoid warning C4800:
; 108  :                                // "Implicit conversion from 'char' to bool. Possible information loss" (/Wall)
; 109  :     }
; 110  : 
; 111  : #if !_HAS_CXX20
; 112  :     _NODISCARD bool operator!=(_Default_sentinel) const noexcept {
; 113  :         return !_Ptr->_Isnil;
; 114  :     }
; 115  : #endif // !_HAS_CXX20
; 116  : 
; 117  :     _Nodeptr _Ptr; // pointer to node
; 118  : };
; 119  : 
; 120  : template <class _Mytree>
; 121  : class _Tree_unchecked_iterator : public _Tree_unchecked_const_iterator<_Mytree> {
; 122  : public:
; 123  :     using _Mybase           = _Tree_unchecked_const_iterator<_Mytree>;
; 124  :     using iterator_category = bidirectional_iterator_tag;
; 125  : 
; 126  :     using _Nodeptr        = typename _Mytree::_Nodeptr;
; 127  :     using value_type      = typename _Mytree::value_type;
; 128  :     using difference_type = typename _Mytree::difference_type;
; 129  :     using pointer         = typename _Mytree::pointer;
; 130  :     using reference       = value_type&;
; 131  : 
; 132  :     using _Mybase::_Mybase;
; 133  : 
; 134  :     _NODISCARD reference operator*() const noexcept {
; 135  :         return const_cast<reference>(_Mybase::operator*());
; 136  :     }
; 137  : 
; 138  :     _NODISCARD pointer operator->() const noexcept {
; 139  :         return pointer_traits<pointer>::pointer_to(**this);
; 140  :     }
; 141  : 
; 142  :     _Tree_unchecked_iterator& operator++() noexcept {
; 143  :         _Mybase::operator++();
; 144  :         return *this;
; 145  :     }
; 146  : 
; 147  :     _Tree_unchecked_iterator operator++(int) noexcept {
; 148  :         _Tree_unchecked_iterator _Tmp = *this;
; 149  :         _Mybase::operator++();
; 150  :         return _Tmp;
; 151  :     }
; 152  : 
; 153  :     _Tree_unchecked_iterator& operator--() noexcept {
; 154  :         _Mybase::operator--();
; 155  :         return *this;
; 156  :     }
; 157  : 
; 158  :     _Tree_unchecked_iterator operator--(int) noexcept {
; 159  :         _Tree_unchecked_iterator _Tmp = *this;
; 160  :         _Mybase::operator--();
; 161  :         return _Tmp;
; 162  :     }
; 163  : };
; 164  : 
; 165  : template <class _Mytree>
; 166  : class _Tree_const_iterator : public _Tree_unchecked_const_iterator<_Mytree, _Iterator_base> {
; 167  : public:
; 168  :     using _Mybase           = _Tree_unchecked_const_iterator<_Mytree, _Iterator_base>;
; 169  :     using iterator_category = bidirectional_iterator_tag;
; 170  : 
; 171  :     using _Nodeptr        = typename _Mytree::_Nodeptr;
; 172  :     using value_type      = typename _Mytree::value_type;
; 173  :     using difference_type = typename _Mytree::difference_type;
; 174  :     using pointer         = typename _Mytree::const_pointer;
; 175  :     using reference       = const value_type&;
; 176  : 
; 177  :     using _Mybase::_Mybase;
; 178  : 
; 179  :     _NODISCARD reference operator*() const noexcept {
; 180  : #if _ITERATOR_DEBUG_LEVEL == 2
; 181  :         const auto _Mycont = static_cast<const _Mytree*>(this->_Getcont());
; 182  :         _STL_ASSERT(_Mycont, "cannot dereference value-initialized map/set iterator");
; 183  :         _STL_VERIFY(this->_Ptr != _Mycont->_Myhead, "cannot dereference end map/set iterator");
; 184  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 185  : 
; 186  :         return this->_Ptr->_Myval;
; 187  :     }
; 188  : 
; 189  :     _NODISCARD pointer operator->() const noexcept {
; 190  :         return pointer_traits<pointer>::pointer_to(**this);
; 191  :     }
; 192  : 
; 193  :     _Tree_const_iterator& operator++() noexcept {
; 194  : #if _ITERATOR_DEBUG_LEVEL == 2
; 195  :         _STL_VERIFY(this->_Getcont(), "cannot increment value-initialized map/set iterator");
; 196  :         _STL_VERIFY(!this->_Ptr->_Isnil, "cannot increment end map/set iterator");
; 197  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 198  : 
; 199  :         _Mybase::operator++();
; 200  :         return *this;
; 201  :     }
; 202  : 
; 203  :     _Tree_const_iterator operator++(int) noexcept {
; 204  :         _Tree_const_iterator _Tmp = *this;
; 205  :         ++*this;
; 206  :         return _Tmp;
; 207  :     }
; 208  : 
; 209  :     _Tree_const_iterator& operator--() noexcept {
; 210  : #if _ITERATOR_DEBUG_LEVEL == 2
; 211  :         _STL_ASSERT(this->_Getcont(), "cannot decrement value-initialized map/set iterator");
; 212  :         _Nodeptr _Ptrsav = this->_Ptr;
; 213  :         _Mybase::operator--();
; 214  :         _STL_VERIFY(_Ptrsav != this->_Ptr, "cannot decrement begin map/set iterator");
; 215  : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 / _ITERATOR_DEBUG_LEVEL != 2 vvv
; 216  :         _Mybase::operator--();
; 217  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 218  : 
; 219  :         return *this;
; 220  :     }
; 221  : 
; 222  :     _Tree_const_iterator operator--(int) noexcept {
; 223  :         _Tree_const_iterator _Tmp = *this;
; 224  :         --*this;
; 225  :         return _Tmp;
; 226  :     }
; 227  : 
; 228  :     _NODISCARD bool operator==(const _Tree_const_iterator& _Right) const noexcept {
; 229  : #if _ITERATOR_DEBUG_LEVEL == 2
; 230  :         _STL_VERIFY(this->_Getcont() == _Right._Getcont(), "map/set iterators incompatible");
; 231  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 232  : 
; 233  :         return this->_Ptr == _Right._Ptr;
; 234  :     }
; 235  : 
; 236  : #if !_HAS_CXX20
; 237  :     _NODISCARD bool operator!=(const _Tree_const_iterator& _Right) const noexcept {
; 238  :         return !(*this == _Right);
; 239  :     }
; 240  : #endif // !_HAS_CXX20
; 241  : 
; 242  : #if _ITERATOR_DEBUG_LEVEL == 2
; 243  :     friend void _Verify_range(const _Tree_const_iterator& _First, const _Tree_const_iterator& _Last) noexcept {
; 244  :         _STL_VERIFY(_First._Getcont() == _Last._Getcont(), "map/set iterators in range are from different containers");
; 245  :     }
; 246  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 247  : 
; 248  :     using _Prevent_inheriting_unwrap = _Tree_const_iterator;
; 249  : 
; 250  :     _NODISCARD _Tree_unchecked_const_iterator<_Mytree> _Unwrapped() const noexcept {
; 251  :         return _Tree_unchecked_const_iterator<_Mytree>(this->_Ptr, static_cast<const _Mytree*>(this->_Getcont()));
; 252  :     }
; 253  : 
; 254  :     void _Seek_to(const _Tree_unchecked_const_iterator<_Mytree> _It) noexcept {
; 255  :         this->_Ptr = _It._Ptr;
; 256  :     }
; 257  : };
; 258  : 
; 259  : template <class _Mytree>
; 260  : class _Tree_iterator : public _Tree_const_iterator<_Mytree> {
; 261  : public:
; 262  :     using _Mybase           = _Tree_const_iterator<_Mytree>;
; 263  :     using iterator_category = bidirectional_iterator_tag;
; 264  : 
; 265  :     using _Nodeptr        = typename _Mytree::_Nodeptr;
; 266  :     using value_type      = typename _Mytree::value_type;
; 267  :     using difference_type = typename _Mytree::difference_type;
; 268  : 
; 269  :     using pointer   = typename _Mytree::pointer;
; 270  :     using reference = value_type&;
; 271  : 
; 272  :     using _Mybase::_Mybase;
; 273  : 
; 274  :     _NODISCARD reference operator*() const noexcept {
; 275  :         return const_cast<reference>(_Mybase::operator*());
; 276  :     }
; 277  : 
; 278  :     _NODISCARD pointer operator->() const noexcept {
; 279  :         return pointer_traits<pointer>::pointer_to(**this);
; 280  :     }
; 281  : 
; 282  :     _Tree_iterator& operator++() noexcept {
; 283  :         _Mybase::operator++();
; 284  :         return *this;
; 285  :     }
; 286  : 
; 287  :     _Tree_iterator operator++(int) noexcept {
; 288  :         _Tree_iterator _Tmp = *this;
; 289  :         _Mybase::operator++();
; 290  :         return _Tmp;
; 291  :     }
; 292  : 
; 293  :     _Tree_iterator& operator--() noexcept {
; 294  :         _Mybase::operator--();
; 295  :         return *this;
; 296  :     }
; 297  : 
; 298  :     _Tree_iterator operator--(int) noexcept {
; 299  :         _Tree_iterator _Tmp = *this;
; 300  :         _Mybase::operator--();
; 301  :         return _Tmp;
; 302  :     }
; 303  : 
; 304  :     using _Prevent_inheriting_unwrap = _Tree_iterator;
; 305  : 
; 306  :     _NODISCARD _Tree_unchecked_iterator<_Mytree> _Unwrapped() const noexcept {
; 307  :         return _Tree_unchecked_iterator<_Mytree>(this->_Ptr, static_cast<const _Mytree*>(this->_Getcont()));
; 308  :     }
; 309  : };
; 310  : 
; 311  : template <class _Value_type, class _Size_type, class _Difference_type, class _Pointer, class _Const_pointer,
; 312  :     class _Reference, class _Const_reference, class _Nodeptr_type>
; 313  : struct _Tree_iter_types {
; 314  :     using value_type      = _Value_type;
; 315  :     using size_type       = _Size_type;
; 316  :     using difference_type = _Difference_type;
; 317  :     using pointer         = _Pointer;
; 318  :     using const_pointer   = _Const_pointer;
; 319  :     using _Nodeptr        = _Nodeptr_type;
; 320  : };
; 321  : 
; 322  : template <class _Value_type, class _Voidptr>
; 323  : struct _Tree_node {
; 324  :     using _Nodeptr   = _Rebind_pointer_t<_Voidptr, _Tree_node>;
; 325  :     using value_type = _Value_type;
; 326  :     _Nodeptr _Left; // left subtree, or smallest element if head
; 327  :     _Nodeptr _Parent; // parent, or root of tree if head
; 328  :     _Nodeptr _Right; // right subtree, or largest element if head
; 329  :     char _Color; // _Red or _Black, _Black if head
; 330  :     char _Isnil; // true only if head (also nil) node; TRANSITION, should be bool
; 331  :     value_type _Myval = // the stored value, unused if head
; 332  :         _Returns_exactly<value_type>(); // fake a viable constructor to workaround GH-2749
; 333  : 
; 334  :     enum _Redbl { // colors for link to parent
; 335  :         _Red,
; 336  :         _Black
; 337  :     };
; 338  : 
; 339  :     _Tree_node()                             = default;
; 340  :     _Tree_node(const _Tree_node&)            = delete;
; 341  :     _Tree_node& operator=(const _Tree_node&) = delete;
; 342  : 
; 343  :     template <class _Alloc>
; 344  :     static _Nodeptr _Buyheadnode(_Alloc& _Al) {
; 345  :         static_assert(is_same_v<typename _Alloc::value_type, _Tree_node>, "Bad _Buyheadnode call");
; 346  :         const auto _Pnode = _Al.allocate(1);
; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);
; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);
; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);
; 350  :         _Pnode->_Color = _Black;
; 351  :         _Pnode->_Isnil = true;
; 352  :         return _Pnode;
; 353  :     }
; 354  : 
; 355  :     template <class _Alloc, class... _Valty>
; 356  :     static _Nodeptr _Buynode(_Alloc& _Al, _Nodeptr _Myhead, _Valty&&... _Val) {
; 357  :         // allocate a node with defaults and set links and value
; 358  :         static_assert(is_same_v<typename _Alloc::value_type, _Tree_node>, "Bad _Buynode call");
; 359  :         _Alloc_construct_ptr<_Alloc> _Newnode(_Al);
; 360  :         _Newnode._Allocate();
; 361  :         allocator_traits<_Alloc>::construct(_Al, _STD addressof(_Newnode._Ptr->_Myval), _STD forward<_Valty>(_Val)...);
; 362  :         _Construct_in_place(_Newnode._Ptr->_Left, _Myhead);
; 363  :         _Construct_in_place(_Newnode._Ptr->_Parent, _Myhead);
; 364  :         _Construct_in_place(_Newnode._Ptr->_Right, _Myhead);
; 365  :         _Newnode._Ptr->_Color = _Red;
; 366  :         _Newnode._Ptr->_Isnil = false;
; 367  :         return _Newnode._Release();
; 368  :     }
; 369  : 
; 370  :     template <class _Alloc>
; 371  :     static void _Freenode0(_Alloc& _Al, _Nodeptr _Ptr) noexcept {
; 372  :         static_assert(is_same_v<typename _Alloc::value_type, _Tree_node>, "Bad _Freenode0 call");
; 373  :         _Destroy_in_place(_Ptr->_Left);
; 374  :         _Destroy_in_place(_Ptr->_Parent);
; 375  :         _Destroy_in_place(_Ptr->_Right);
; 376  :         allocator_traits<_Alloc>::deallocate(_Al, _Ptr, 1);
; 377  :     }
; 378  : 
; 379  :     template <class _Alloc>
; 380  :     static void _Freenode(_Alloc& _Al, _Nodeptr _Ptr) noexcept {
; 381  :         static_assert(is_same_v<typename _Alloc::value_type, _Tree_node>, "Bad _Freenode call");
; 382  :         allocator_traits<_Alloc>::destroy(_Al, _STD addressof(_Ptr->_Myval));
; 383  :         _Freenode0(_Al, _Ptr);
; 384  :     }
; 385  : };
; 386  : 
; 387  : template <class _Ty>
; 388  : struct _Tree_simple_types : _Simple_types<_Ty> {
; 389  :     using _Node    = _Tree_node<_Ty, void*>;
; 390  :     using _Nodeptr = _Node*;
; 391  : };
; 392  : 
; 393  : enum class _Tree_child {
; 394  :     _Right, // perf note: compare with _Right rather than _Left where possible for comparison with zero
; 395  :     _Left,
; 396  :     _Unused // indicates that tree child should never be used for insertion
; 397  : };
; 398  : 
; 399  : template <class _Nodeptr>
; 400  : struct _Tree_id {
; 401  :     _Nodeptr _Parent; // the leaf node under which a new node should be inserted
; 402  :     _Tree_child _Child;
; 403  : };
; 404  : 
; 405  : template <class _Nodeptr>
; 406  : struct _Tree_find_result {
; 407  :     _Tree_id<_Nodeptr> _Location;
; 408  :     _Nodeptr _Bound;
; 409  : };
; 410  : 
; 411  : template <class _Nodeptr>
; 412  : struct _Tree_find_hint_result {
; 413  :     _Tree_id<_Nodeptr> _Location;
; 414  :     bool _Duplicate;
; 415  : };
; 416  : 
; 417  : [[noreturn]] inline void _Throw_tree_length_error() {
; 418  :     _Xlength_error("map/set too long");
; 419  : }
; 420  : 
; 421  : template <class _Val_types>
; 422  : class _Tree_val : public _Container_base {
; 423  : public:
; 424  :     using _Nodeptr = typename _Val_types::_Nodeptr;
; 425  : 
; 426  :     using value_type      = typename _Val_types::value_type;
; 427  :     using size_type       = typename _Val_types::size_type;
; 428  :     using difference_type = typename _Val_types::difference_type;
; 429  :     using pointer         = typename _Val_types::pointer;
; 430  :     using const_pointer   = typename _Val_types::const_pointer;
; 431  :     using reference       = value_type&;
; 432  :     using const_reference = const value_type&;
; 433  : 
; 434  :     using _Unchecked_const_iterator = _Tree_unchecked_const_iterator<_Tree_val>;
; 435  :     using const_iterator            = _Tree_const_iterator<_Tree_val>;
; 436  : 
; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}
; 438  : 
; 439  :     enum _Redbl { // colors for link to parent
; 440  :         _Red,
; 441  :         _Black
; 442  :     };
; 443  : 
; 444  :     static _Nodeptr _Max(_Nodeptr _Pnode) noexcept { // return rightmost node in subtree at _Pnode
; 445  :         while (!_Pnode->_Right->_Isnil) {
; 446  :             _Pnode = _Pnode->_Right;
; 447  :         }
; 448  : 
; 449  :         return _Pnode;
; 450  :     }
; 451  : 
; 452  :     static _Nodeptr _Min(_Nodeptr _Pnode) noexcept { // return leftmost node in subtree at _Pnode
; 453  :         while (!_Pnode->_Left->_Isnil) {

	mov	rax, QWORD PTR [rax]
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LL167@Save
$LN1002@Save:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 105  : 	for (auto& [Key, Val] : BfresLibrary::Models)

	cmp	BYTE PTR [rbx+25], 0
	je	$LL164@Save
	mov	esi, DWORD PTR tv5970[rsp]
	xor	r14d, r14d
$LN1046@Save:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rcx, r15
	sub	rcx, r12
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 22   : 		if (Offset > this->m_Data.size())

	movsxd	rax, esi
	cmp	rax, rcx
	jbe	SHORT $LN146@Save

; 23   : 		{
; 24   : 			this->m_Data.resize(Offset + 1);

	lea	eax, DWORD PTR [rsi+1]
	movsxd	rdx, eax
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize
	mov	r15, QWORD PTR Writer$[rbp-248]
	mov	r12, QWORD PTR Writer$[rbp-256]
$LN146@Save:

; 25   : 		}
; 26   : 		this->m_Offset = Offset;

	mov	DWORD PTR Writer$[rbp-232], esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	sub	r15, r12
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 83   : 	if (this->m_Offset + Size > this->m_Data.size())

	lea	eax, DWORD PTR [rsi+2]
	movsxd	rdx, eax
	cmp	rdx, r15
	jbe	SHORT $LN133@Save

; 84   : 	{
; 85   : 		this->m_Data.resize(this->m_Data.size() + Size);

	lea	rdx, QWORD PTR [r15+2]
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize
$LN133@Save:

; 86   : 	}
; 87   : 
; 88   : 	char* Bytes = new char[sizeof(int64_t)];

	mov	ecx, 8
	call	??_U@YAPEAX_K@Z				; operator new[]

; 89   : 
; 90   : 	std::memcpy(Bytes, &Data, sizeof(Bytes));

	movzx	r8d, di
	mov	QWORD PTR [rax], r8

; 91   : 
; 92   : 	for (int i = 0; i < Size; i++) {
; 93   : 		this->m_Data[this->m_Offset + i] = Bytes[i];

	movsxd	rdx, DWORD PTR Writer$[rbp-232]
	mov	rcx, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rcx], r8b
	movzx	r8d, BYTE PTR [rax+1]
	mov	ecx, DWORD PTR Writer$[rbp-232]
	inc	ecx
	movsxd	rdx, ecx
	mov	rcx, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rcx], r8b

; 94   : 	}
; 95   : 
; 96   : 	delete[] Bytes;

	mov	rcx, rax
	call	??_V@YAXPEAX@Z				; operator delete[]

; 97   : 
; 98   : 	this->m_Offset += Size;

	add	DWORD PTR Writer$[rbp-232], 2
	xor	edx, edx
	mov	r8d, 264				; 00000108H
	lea	rcx, QWORD PTR File$[rbp-256]
	call	memset
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T10[rsp], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T10[rsp+16], r14

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T10[rsp+24], r14

; 2540 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	mov	r8d, 16
	lea	rdx, OFFSET FLAT:??_C@_0BB@FHJLLGCJ@Preferences?4eprf@
	lea	rcx, QWORD PTR $T10[rsp]
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 122  : 	std::ofstream File(Editor::GetWorkingDirFile("Preferences.eprf"), std::ios::binary);

	lea	rdx, QWORD PTR $T10[rsp]
	lea	rcx, QWORD PTR $T18[rbp-256]
	call	?GetWorkingDirFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z ; Editor::GetWorkingDirFile
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rax+24], 16
	jb	SHORT $LN111@Save

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR [rax]
$LN111@Save:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\fstream

; 226  :         : basic_ofstream(_Str.c_str(), _Mode, _Prot) {} // _Prot is an extension

	mov	r8d, 32					; 00000020H
	mov	rdx, rax
	lea	rcx, QWORD PTR File$[rbp-256]
	call	??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z ; std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >
	mov	rax, QWORD PTR File$[rbp-256]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	rsi, OFFSET FLAT:??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@
	mov	QWORD PTR File$[rbp+rcx-256], rsi
	mov	rax, QWORD PTR File$[rbp-256]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	edx, DWORD PTR [rcx-168]
	mov	DWORD PTR File$[rbp+rcx-260], edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T18[rbp-232]
	cmp	rdx, 16
	jb	SHORT $LN87@Save

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T18[rbp-256]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN99@Save

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN99@Save
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN99@Save:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN87@Save:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	mov	QWORD PTR $T18[rbp-240], r14

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR $T18[rbp-232], 15

; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T18[rbp-256], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4624 :     _Seek_wrapped(_Dest, _STD _Copy_unchecked(_UFirst, _ULast, _UDest));

	mov	rdi, QWORD PTR Writer$[rbp-248]
	mov	rbx, QWORD PTR Writer$[rbp-256]
	cmp	rbx, rdi

; 4611 :     for (; _First != _Last; ++_Dest, (void) ++_First) {

	je	SHORT $LN51@Save
$LL52@Save:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\ostream

; 948  :     return _Ostr << static_cast<char>(_Ch);

	movzx	edx, BYTE PTR [rbx]
	lea	rcx, QWORD PTR File$[rbp-256]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4611 :     for (; _First != _Last; ++_Dest, (void) ++_First) {

	inc	rbx
	cmp	rbx, rdi
	jne	SHORT $LL52@Save
$LN51@Save:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\fstream

; 376  :         if (!_Filebuffer.close()) {

	lea	rcx, QWORD PTR File$[rbp-248]
	call	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
	test	rax, rax
	jne	SHORT $LN41@Save

; 377  :             _Myios::setstate(ios_base::failbit);

	mov	rax, QWORD PTR File$[rbp-256]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	rax, QWORD PTR File$[rbp-256]
	add	rcx, rax
	xor	r8d, r8d
	lea	edx, QWORD PTR [r8+2]
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
$LN41@Save:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 127  : 	Logger::Info("Pref", "Pref save");

	lea	rax, QWORD PTR $T16[rbp-256]
	mov	QWORD PTR $T11[rsp], rax
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T16[rbp-256], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T16[rbp-240], r14

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T16[rbp-232], r14

; 2540 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	mov	r8d, 9
	lea	rdx, OFFSET FLAT:??_C@_09HJOLKJNN@Pref?5save@
	lea	rcx, QWORD PTR $T16[rbp-256]
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
	npad	1
	xorps	xmm0, xmm0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T14[rsp], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T14[rbp-240], r14

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T14[rbp-232], r14

; 2540 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	mov	r8d, 4
	lea	rdx, OFFSET FLAT:??_C@_04LNEDGKNE@Pref@
	lea	rcx, QWORD PTR $T14[rsp]
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
	npad	1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 127  : 	Logger::Info("Pref", "Pref save");

	lea	rdx, QWORD PTR $T16[rbp-256]
	lea	rcx, QWORD PTR $T14[rsp]
	call	?Info@Logger@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; Logger::Info

; 128  : 	FrameCount = 0;

	mov	DWORD PTR ?FrameCount@PreferencesConfig@@3IA, r14d ; PreferencesConfig::FrameCount
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\fstream

; 344  :     __CLR_OR_THIS_CALL ~basic_ofstream() noexcept override {}

	mov	rax, QWORD PTR File$[rbp-256]
	movsxd	rcx, DWORD PTR [rax+4]
	mov	QWORD PTR File$[rbp+rcx-256], rsi
	mov	rax, QWORD PTR File$[rbp-256]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	edx, DWORD PTR [rcx-168]
	mov	DWORD PTR File$[rbp+rcx-260], edx
	lea	rcx, QWORD PTR File$[rbp-248]
	call	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
	lea	rcx, QWORD PTR File$[rbp-240]
	call	QWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
	lea	rcx, QWORD PTR File$[rbp-88]
	call	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR Writer$[rbp-256]
	test	rcx, rcx
	je	SHORT $LN185@Save

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR Writer$[rbp-240]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN203@Save

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN203@Save
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN203@Save:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN185@Save:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp

; 129  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rbp-256]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+544]
	mov	rbx, QWORD PTR [r11+48]
	mov	rsi, QWORD PTR [r11+56]
	mov	rdi, QWORD PTR [r11+64]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rbp
	ret	0
$LN994@Save:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1632 :             _Throw_tree_length_error();

	call	?_Throw_tree_length_error@std@@YAXXZ	; std::_Throw_tree_length_error
	npad	1
$LN1051@Save:
?Save@PreferencesConfig@@YAXXZ ENDP			; PreferencesConfig::Save
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
ColorSize$1$ = 48
$T6 = 64
_Loc$5 = 64
$T7 = 64
_Loc$4 = 64
$T8 = 64
_Loc$3 = 64
$T9 = 64
_Loc$2 = 64
$T10 = 64
tv5970 = 96
$T11 = 96
$T12 = 104
$T13 = 120
$T14 = 120
$T15 = 152
$T16 = 152
$T17 = 184
$T18 = 184
Writer$ = 216
File$ = 256
__$ArrayPad$ = 528
?dtor$0@?0??Save@PreferencesConfig@@YAXXZ@4HA PROC	; `PreferencesConfig::Save'::`1'::dtor$0
	lea	rcx, QWORD PTR Writer$[rdx]
	jmp	??1BinaryVectorWriter@@QEAA@XZ
?dtor$0@?0??Save@PreferencesConfig@@YAXXZ@4HA ENDP	; `PreferencesConfig::Save'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
ColorSize$1$ = 48
$T6 = 64
_Loc$5 = 64
$T7 = 64
_Loc$4 = 64
$T8 = 64
_Loc$3 = 64
$T9 = 64
_Loc$2 = 64
$T10 = 64
tv5970 = 96
$T11 = 96
$T12 = 104
$T13 = 120
$T14 = 120
$T15 = 152
$T16 = 152
$T17 = 184
$T18 = 184
Writer$ = 216
File$ = 256
__$ArrayPad$ = 528
?dtor$18@?0??Save@PreferencesConfig@@YAXXZ@4HA PROC	; `PreferencesConfig::Save'::`1'::dtor$18
	lea	rcx, QWORD PTR $T12[rdx]
	jmp	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo>,void *> > >
?dtor$18@?0??Save@PreferencesConfig@@YAXXZ@4HA ENDP	; `PreferencesConfig::Save'::`1'::dtor$18
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
ColorSize$1$ = 48
$T6 = 64
_Loc$5 = 64
$T7 = 64
_Loc$4 = 64
$T8 = 64
_Loc$3 = 64
$T9 = 64
_Loc$2 = 64
$T10 = 64
tv5970 = 96
$T11 = 96
$T12 = 104
$T13 = 120
$T14 = 120
$T15 = 152
$T16 = 152
$T17 = 184
$T18 = 184
Writer$ = 216
File$ = 256
__$ArrayPad$ = 528
?dtor$17@?0??Save@PreferencesConfig@@YAXXZ@4HA PROC	; `PreferencesConfig::Save'::`1'::dtor$17
	lea	rcx, QWORD PTR $T12[rdx]
	jmp	??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
?dtor$17@?0??Save@PreferencesConfig@@YAXXZ@4HA ENDP	; `PreferencesConfig::Save'::`1'::dtor$17
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
ColorSize$1$ = 48
$T6 = 64
_Loc$5 = 64
$T7 = 64
_Loc$4 = 64
$T8 = 64
_Loc$3 = 64
$T9 = 64
_Loc$2 = 64
$T10 = 64
tv5970 = 96
$T11 = 96
$T12 = 104
$T13 = 120
$T14 = 120
$T15 = 152
$T16 = 152
$T17 = 184
$T18 = 184
Writer$ = 216
File$ = 256
__$ArrayPad$ = 528
?dtor$26@?0??Save@PreferencesConfig@@YAXXZ@4HA PROC	; `PreferencesConfig::Save'::`1'::dtor$26
	lea	rcx, QWORD PTR $T13[rdx]
	jmp	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo>,void *> > >
?dtor$26@?0??Save@PreferencesConfig@@YAXXZ@4HA ENDP	; `PreferencesConfig::Save'::`1'::dtor$26
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
ColorSize$1$ = 48
$T6 = 64
_Loc$5 = 64
$T7 = 64
_Loc$4 = 64
$T8 = 64
_Loc$3 = 64
$T9 = 64
_Loc$2 = 64
$T10 = 64
tv5970 = 96
$T11 = 96
$T12 = 104
$T13 = 120
$T14 = 120
$T15 = 152
$T16 = 152
$T17 = 184
$T18 = 184
Writer$ = 216
File$ = 256
__$ArrayPad$ = 528
?dtor$25@?0??Save@PreferencesConfig@@YAXXZ@4HA PROC	; `PreferencesConfig::Save'::`1'::dtor$25
	lea	rcx, QWORD PTR $T13[rdx]
	jmp	??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
?dtor$25@?0??Save@PreferencesConfig@@YAXXZ@4HA ENDP	; `PreferencesConfig::Save'::`1'::dtor$25
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
ColorSize$1$ = 48
$T6 = 64
_Loc$5 = 64
$T7 = 64
_Loc$4 = 64
$T8 = 64
_Loc$3 = 64
$T9 = 64
_Loc$2 = 64
$T10 = 64
tv5970 = 96
$T11 = 96
$T12 = 104
$T13 = 120
$T14 = 120
$T15 = 152
$T16 = 152
$T17 = 184
$T18 = 184
Writer$ = 216
File$ = 256
__$ArrayPad$ = 528
?dtor$34@?0??Save@PreferencesConfig@@YAXXZ@4HA PROC	; `PreferencesConfig::Save'::`1'::dtor$34
	lea	rcx, QWORD PTR $T15[rdx]
	jmp	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo>,void *> > >
?dtor$34@?0??Save@PreferencesConfig@@YAXXZ@4HA ENDP	; `PreferencesConfig::Save'::`1'::dtor$34
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
ColorSize$1$ = 48
$T6 = 64
_Loc$5 = 64
$T7 = 64
_Loc$4 = 64
$T8 = 64
_Loc$3 = 64
$T9 = 64
_Loc$2 = 64
$T10 = 64
tv5970 = 96
$T11 = 96
$T12 = 104
$T13 = 120
$T14 = 120
$T15 = 152
$T16 = 152
$T17 = 184
$T18 = 184
Writer$ = 216
File$ = 256
__$ArrayPad$ = 528
?dtor$33@?0??Save@PreferencesConfig@@YAXXZ@4HA PROC	; `PreferencesConfig::Save'::`1'::dtor$33
	lea	rcx, QWORD PTR $T15[rdx]
	jmp	??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
?dtor$33@?0??Save@PreferencesConfig@@YAXXZ@4HA ENDP	; `PreferencesConfig::Save'::`1'::dtor$33
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
ColorSize$1$ = 48
$T6 = 64
_Loc$5 = 64
$T7 = 64
_Loc$4 = 64
$T8 = 64
_Loc$3 = 64
$T9 = 64
_Loc$2 = 64
$T10 = 64
tv5970 = 96
$T11 = 96
$T12 = 104
$T13 = 120
$T14 = 120
$T15 = 152
$T16 = 152
$T17 = 184
$T18 = 184
Writer$ = 216
File$ = 256
__$ArrayPad$ = 528
?dtor$42@?0??Save@PreferencesConfig@@YAXXZ@4HA PROC	; `PreferencesConfig::Save'::`1'::dtor$42
	lea	rcx, QWORD PTR $T17[rdx]
	jmp	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo>,void *> > >
?dtor$42@?0??Save@PreferencesConfig@@YAXXZ@4HA ENDP	; `PreferencesConfig::Save'::`1'::dtor$42
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
ColorSize$1$ = 48
$T6 = 64
_Loc$5 = 64
$T7 = 64
_Loc$4 = 64
$T8 = 64
_Loc$3 = 64
$T9 = 64
_Loc$2 = 64
$T10 = 64
tv5970 = 96
$T11 = 96
$T12 = 104
$T13 = 120
$T14 = 120
$T15 = 152
$T16 = 152
$T17 = 184
$T18 = 184
Writer$ = 216
File$ = 256
__$ArrayPad$ = 528
?dtor$41@?0??Save@PreferencesConfig@@YAXXZ@4HA PROC	; `PreferencesConfig::Save'::`1'::dtor$41
	lea	rcx, QWORD PTR $T17[rdx]
	jmp	??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
?dtor$41@?0??Save@PreferencesConfig@@YAXXZ@4HA ENDP	; `PreferencesConfig::Save'::`1'::dtor$41
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
ColorSize$1$ = 48
$T6 = 64
_Loc$5 = 64
$T7 = 64
_Loc$4 = 64
$T8 = 64
_Loc$3 = 64
$T9 = 64
_Loc$2 = 64
$T10 = 64
tv5970 = 96
$T11 = 96
$T12 = 104
$T13 = 120
$T14 = 120
$T15 = 152
$T16 = 152
$T17 = 184
$T18 = 184
Writer$ = 216
File$ = 256
__$ArrayPad$ = 528
?dtor$2@?0??Save@PreferencesConfig@@YAXXZ@4HA PROC	; `PreferencesConfig::Save'::`1'::dtor$2
	lea	rcx, QWORD PTR $T18[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$2@?0??Save@PreferencesConfig@@YAXXZ@4HA ENDP	; `PreferencesConfig::Save'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
ColorSize$1$ = 48
$T6 = 64
_Loc$5 = 64
$T7 = 64
_Loc$4 = 64
$T8 = 64
_Loc$3 = 64
$T9 = 64
_Loc$2 = 64
$T10 = 64
tv5970 = 96
$T11 = 96
$T12 = 104
$T13 = 120
$T14 = 120
$T15 = 152
$T16 = 152
$T17 = 184
$T18 = 184
Writer$ = 216
File$ = 256
__$ArrayPad$ = 528
?dtor$3@?0??Save@PreferencesConfig@@YAXXZ@4HA PROC	; `PreferencesConfig::Save'::`1'::dtor$3
	lea	rcx, QWORD PTR File$[rdx]
	jmp	??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
?dtor$3@?0??Save@PreferencesConfig@@YAXXZ@4HA ENDP	; `PreferencesConfig::Save'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
ColorSize$1$ = 48
$T6 = 64
_Loc$5 = 64
$T7 = 64
_Loc$4 = 64
$T8 = 64
_Loc$3 = 64
$T9 = 64
_Loc$2 = 64
$T10 = 64
tv5970 = 96
$T11 = 96
$T12 = 104
$T13 = 120
$T14 = 120
$T15 = 152
$T16 = 152
$T17 = 184
$T18 = 184
Writer$ = 216
File$ = 256
__$ArrayPad$ = 528
?dtor$4@?0??Save@PreferencesConfig@@YAXXZ@4HA PROC	; `PreferencesConfig::Save'::`1'::dtor$4
	mov	rcx, QWORD PTR $T11[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$4@?0??Save@PreferencesConfig@@YAXXZ@4HA ENDP	; `PreferencesConfig::Save'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
;	COMDAT ?UpdateWindowInformation@PreferencesConfig@@YAXXZ
_TEXT	SEGMENT
?UpdateWindowInformation@PreferencesConfig@@YAXXZ PROC	; PreferencesConfig::UpdateWindowInformation, COMDAT

; 133  : 	WindowInformation.AINBEditorOpen = UIAINBEditor::Open;

	movzx	eax, BYTE PTR ?Open@UIAINBEditor@@3_NA	; UIAINBEditor::Open
	mov	BYTE PTR ?WindowInformation@PreferencesConfig@@3UWindowInformationStruct@1@A+7, al

; 134  : 	WindowInformation.ToolsOpen = UITools::Open;

	movzx	eax, BYTE PTR ?Open@UITools@@3_NA	; UITools::Open
	mov	BYTE PTR ?WindowInformation@PreferencesConfig@@3UWindowInformationStruct@1@A+2, al

; 135  : 	WindowInformation.PropertiesOpen = UIProperties::Open;

	movzx	eax, BYTE PTR ?Open@UIProperties@@3_NA	; UIProperties::Open
	mov	BYTE PTR ?WindowInformation@PreferencesConfig@@3UWindowInformationStruct@1@A+3, al

; 136  : 	WindowInformation.OutlinerOpen = UIOutliner::Open;

	movzx	eax, BYTE PTR ?Open@UIOutliner@@3_NA	; UIOutliner::Open
	mov	BYTE PTR ?WindowInformation@PreferencesConfig@@3UWindowInformationStruct@1@A+4, al

; 137  : 	WindowInformation.MSBTEditorOpen = UIMSBTEditor::Open;

	movzx	eax, BYTE PTR ?Open@UIMSBTEditor@@3_NA	; UIMSBTEditor::Open
	mov	BYTE PTR ?WindowInformation@PreferencesConfig@@3UWindowInformationStruct@1@A+5, al

; 138  : 	WindowInformation.MapViewOpen = UIMapView::Open;

	movzx	eax, BYTE PTR ?Open@UIMapView@@3_NA	; UIMapView::Open
	mov	BYTE PTR ?WindowInformation@PreferencesConfig@@3UWindowInformationStruct@1@A+6, al

; 139  : 	WindowInformation.ConsoleOpen = UIConsole::Open;

	movzx	eax, BYTE PTR ?Open@UIConsole@@3_NA	; UIConsole::Open
	mov	BYTE PTR ?WindowInformation@PreferencesConfig@@3UWindowInformationStruct@1@A, al

; 140  : 	WindowInformation.ActorToolOpen = UIActorTool::Open;

	movzx	eax, BYTE PTR ?Open@UIActorTool@@3_NA	; UIActorTool::Open
	mov	BYTE PTR ?WindowInformation@PreferencesConfig@@3UWindowInformationStruct@1@A+1, al

; 141  : }

	ret	0
?UpdateWindowInformation@PreferencesConfig@@YAXXZ ENDP	; PreferencesConfig::UpdateWindowInformation
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
;	COMDAT ?WindowInformationChanged@PreferencesConfig@@YA_NXZ
_TEXT	SEGMENT
?WindowInformationChanged@PreferencesConfig@@YA_NXZ PROC ; PreferencesConfig::WindowInformationChanged, COMDAT

; 145  : 	return WindowInformation.AINBEditorOpen != UIAINBEditor::Open ||

	movzx	eax, BYTE PTR ?Open@UIAINBEditor@@3_NA	; UIAINBEditor::Open
	cmp	BYTE PTR ?WindowInformation@PreferencesConfig@@3UWindowInformationStruct@1@A+7, al
	jne	SHORT $LN3@WindowInfo
	movzx	eax, BYTE PTR ?Open@UITools@@3_NA	; UITools::Open
	cmp	BYTE PTR ?WindowInformation@PreferencesConfig@@3UWindowInformationStruct@1@A+2, al
	jne	SHORT $LN3@WindowInfo
	movzx	eax, BYTE PTR ?Open@UIProperties@@3_NA	; UIProperties::Open
	cmp	BYTE PTR ?WindowInformation@PreferencesConfig@@3UWindowInformationStruct@1@A+3, al
	jne	SHORT $LN3@WindowInfo
	movzx	eax, BYTE PTR ?Open@UIOutliner@@3_NA	; UIOutliner::Open
	cmp	BYTE PTR ?WindowInformation@PreferencesConfig@@3UWindowInformationStruct@1@A+4, al
	jne	SHORT $LN3@WindowInfo
	movzx	eax, BYTE PTR ?Open@UIMSBTEditor@@3_NA	; UIMSBTEditor::Open
	cmp	BYTE PTR ?WindowInformation@PreferencesConfig@@3UWindowInformationStruct@1@A+5, al
	jne	SHORT $LN3@WindowInfo
	movzx	eax, BYTE PTR ?Open@UIMapView@@3_NA	; UIMapView::Open
	cmp	BYTE PTR ?WindowInformation@PreferencesConfig@@3UWindowInformationStruct@1@A+6, al
	jne	SHORT $LN3@WindowInfo
	movzx	eax, BYTE PTR ?Open@UIConsole@@3_NA	; UIConsole::Open
	cmp	BYTE PTR ?WindowInformation@PreferencesConfig@@3UWindowInformationStruct@1@A, al
	jne	SHORT $LN3@WindowInfo
	movzx	eax, BYTE PTR ?Open@UIActorTool@@3_NA	; UIActorTool::Open
	cmp	BYTE PTR ?WindowInformation@PreferencesConfig@@3UWindowInformationStruct@1@A+1, al
	jne	SHORT $LN3@WindowInfo
	xor	al, al

; 146  : 		WindowInformation.ToolsOpen != UITools::Open ||
; 147  : 		WindowInformation.PropertiesOpen != UIProperties::Open ||
; 148  : 		WindowInformation.OutlinerOpen != UIOutliner::Open ||
; 149  : 		WindowInformation.MSBTEditorOpen != UIMSBTEditor::Open ||
; 150  : 		WindowInformation.MapViewOpen != UIMapView::Open ||
; 151  : 		WindowInformation.ConsoleOpen != UIConsole::Open ||
; 152  : 		WindowInformation.ActorToolOpen != UIActorTool::Open;
; 153  : }

	ret	0
$LN3@WindowInfo:

; 145  : 	return WindowInformation.AINBEditorOpen != UIAINBEditor::Open ||

	mov	al, 1

; 146  : 		WindowInformation.ToolsOpen != UITools::Open ||
; 147  : 		WindowInformation.PropertiesOpen != UIProperties::Open ||
; 148  : 		WindowInformation.OutlinerOpen != UIOutliner::Open ||
; 149  : 		WindowInformation.MSBTEditorOpen != UIMSBTEditor::Open ||
; 150  : 		WindowInformation.MapViewOpen != UIMapView::Open ||
; 151  : 		WindowInformation.ConsoleOpen != UIConsole::Open ||
; 152  : 		WindowInformation.ActorToolOpen != UIActorTool::Open;
; 153  : }

	ret	0
?WindowInformationChanged@PreferencesConfig@@YA_NXZ ENDP ; PreferencesConfig::WindowInformationChanged
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PreferencesConfig.cpp
;	COMDAT ?Frame@PreferencesConfig@@YAXXZ
_TEXT	SEGMENT
?Frame@PreferencesConfig@@YAXXZ PROC			; PreferencesConfig::Frame, COMDAT

; 156  : {

$LN21:
	sub	rsp, 40					; 00000028H

; 157  : 	FrameCount++;

	mov	eax, DWORD PTR ?FrameCount@PreferencesConfig@@3IA ; PreferencesConfig::FrameCount
	inc	eax
	mov	DWORD PTR ?FrameCount@PreferencesConfig@@3IA, eax ; PreferencesConfig::FrameCount
	cmp	eax, 1800				; 00000708H

; 158  : 
; 159  : 	if (FrameCount > 1800) //Checking every 1800 frames (60 FPS = 30 seconds)

	jbe	$LN2@Frame

; 145  : 	return WindowInformation.AINBEditorOpen != UIAINBEditor::Open ||

	movzx	eax, BYTE PTR ?Open@UITools@@3_NA	; UITools::Open
	movzx	ecx, BYTE PTR ?Open@UIProperties@@3_NA	; UIProperties::Open
	movzx	edx, BYTE PTR ?Open@UIOutliner@@3_NA	; UIOutliner::Open
	movzx	r8d, BYTE PTR ?Open@UIMSBTEditor@@3_NA	; UIMSBTEditor::Open
	movzx	r9d, BYTE PTR ?Open@UIMapView@@3_NA	; UIMapView::Open
	movzx	r10d, BYTE PTR ?Open@UIConsole@@3_NA	; UIConsole::Open
	movzx	r11d, BYTE PTR ?Open@UIActorTool@@3_NA	; UIActorTool::Open

; 158  : 
; 159  : 	if (FrameCount > 1800) //Checking every 1800 frames (60 FPS = 30 seconds)

	mov	QWORD PTR [rsp+32], rbx

; 145  : 	return WindowInformation.AINBEditorOpen != UIAINBEditor::Open ||

	movzx	ebx, BYTE PTR ?Open@UIAINBEditor@@3_NA	; UIAINBEditor::Open
	cmp	BYTE PTR ?WindowInformation@PreferencesConfig@@3UWindowInformationStruct@1@A+7, bl
	jne	SHORT $LN11@Frame
	cmp	BYTE PTR ?WindowInformation@PreferencesConfig@@3UWindowInformationStruct@1@A+2, al
	jne	SHORT $LN11@Frame
	cmp	BYTE PTR ?WindowInformation@PreferencesConfig@@3UWindowInformationStruct@1@A+3, cl
	jne	SHORT $LN11@Frame
	cmp	BYTE PTR ?WindowInformation@PreferencesConfig@@3UWindowInformationStruct@1@A+4, dl
	jne	SHORT $LN11@Frame
	cmp	BYTE PTR ?WindowInformation@PreferencesConfig@@3UWindowInformationStruct@1@A+5, r8b
	jne	SHORT $LN11@Frame
	cmp	BYTE PTR ?WindowInformation@PreferencesConfig@@3UWindowInformationStruct@1@A+6, r9b
	jne	SHORT $LN11@Frame
	cmp	BYTE PTR ?WindowInformation@PreferencesConfig@@3UWindowInformationStruct@1@A, r10b
	jne	SHORT $LN11@Frame
	cmp	BYTE PTR ?WindowInformation@PreferencesConfig@@3UWindowInformationStruct@1@A+1, r11b
	je	SHORT $LN3@Frame
$LN11@Frame:

; 133  : 	WindowInformation.AINBEditorOpen = UIAINBEditor::Open;

	mov	BYTE PTR ?WindowInformation@PreferencesConfig@@3UWindowInformationStruct@1@A+7, bl

; 134  : 	WindowInformation.ToolsOpen = UITools::Open;

	mov	BYTE PTR ?WindowInformation@PreferencesConfig@@3UWindowInformationStruct@1@A+2, al

; 135  : 	WindowInformation.PropertiesOpen = UIProperties::Open;

	mov	BYTE PTR ?WindowInformation@PreferencesConfig@@3UWindowInformationStruct@1@A+3, cl

; 136  : 	WindowInformation.OutlinerOpen = UIOutliner::Open;

	mov	BYTE PTR ?WindowInformation@PreferencesConfig@@3UWindowInformationStruct@1@A+4, dl

; 137  : 	WindowInformation.MSBTEditorOpen = UIMSBTEditor::Open;

	mov	BYTE PTR ?WindowInformation@PreferencesConfig@@3UWindowInformationStruct@1@A+5, r8b

; 138  : 	WindowInformation.MapViewOpen = UIMapView::Open;

	mov	BYTE PTR ?WindowInformation@PreferencesConfig@@3UWindowInformationStruct@1@A+6, r9b

; 139  : 	WindowInformation.ConsoleOpen = UIConsole::Open;

	mov	BYTE PTR ?WindowInformation@PreferencesConfig@@3UWindowInformationStruct@1@A, r10b

; 140  : 	WindowInformation.ActorToolOpen = UIActorTool::Open;

	mov	BYTE PTR ?WindowInformation@PreferencesConfig@@3UWindowInformationStruct@1@A+1, r11b

; 160  : 	{
; 161  : 		if (WindowInformationChanged())
; 162  : 		{
; 163  : 			UpdateWindowInformation();
; 164  : 			Save();

	call	?Save@PreferencesConfig@@YAXXZ		; PreferencesConfig::Save
$LN3@Frame:

; 165  : 		}
; 166  : 
; 167  : 		FrameCount = 0;

	mov	rbx, QWORD PTR [rsp+32]
	mov	DWORD PTR ?FrameCount@PreferencesConfig@@3IA, 0 ; PreferencesConfig::FrameCount
$LN2@Frame:

; 168  : 	}
; 169  : }

	add	rsp, 40					; 00000028H
	ret	0
?Frame@PreferencesConfig@@YAXXZ ENDP			; PreferencesConfig::Frame
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@2@$0A@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$dead$ = 48
?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@2@$0A@@std@@@std@@QEAAXXZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,TextureToGo,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo> >,0> >::clear, COMDAT

; 1354 :     void clear() noexcept {

$LN70:
	mov	QWORD PTR [rsp+16], rbx
	push	rsi
	sub	rsp, 32					; 00000020H

; 1355 :         const auto _Scary = _Get_scary();
; 1356 :         _Scary->_Orphan_ptr(nullptr);
; 1357 :         auto _Head = _Scary->_Myhead;

	mov	rbx, QWORD PTR ?Textures@TextureToGoLibrary@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@2@@std@@A

; 1358 :         _Scary->_Erase_tree(_Getal(), _Head->_Parent);

	mov	rsi, QWORD PTR [rbx+8]

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

	cmp	BYTE PTR [rsi+25], 0
	jne	SHORT $LN5@clear
	mov	QWORD PTR [rsp+48], rdi
$LL4@clear:

; 746  :             _Erase_tree(_Al, _Rootnode->_Right);

	mov	r8, QWORD PTR [rsi+16]
	lea	rdx, OFFSET FLAT:?Textures@TextureToGoLibrary@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@2@@std@@A ; TextureToGoLibrary::Textures
	lea	rcx, OFFSET FLAT:?Textures@TextureToGoLibrary@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@2@@std@@A ; TextureToGoLibrary::Textures
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rdi, rsi

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	rsi, QWORD PTR [rsi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 382  :         allocator_traits<_Alloc>::destroy(_Al, _STD addressof(_Ptr->_Myval));

	lea	rcx, QWORD PTR [rdi+32]
	call	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@QEAA@XZ
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 112				; 00000070H
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

	cmp	BYTE PTR [rsi+25], 0
	je	SHORT $LL4@clear
	mov	rdi, QWORD PTR [rsp+48]
$LN5@clear:

; 1359 :         _Head->_Parent  = _Head;

	mov	QWORD PTR [rbx+8], rbx

; 1360 :         _Head->_Left    = _Head;

	mov	QWORD PTR [rbx], rbx

; 1361 :         _Head->_Right   = _Head;

	mov	QWORD PTR [rbx+16], rbx

; 1362 :         _Scary->_Mysize = 0;
; 1363 :     }

	mov	rbx, QWORD PTR [rsp+56]
	mov	QWORD PTR ?Textures@TextureToGoLibrary@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@2@@std@@A+8, 0
	add	rsp, 32					; 00000020H
	pop	rsi
	ret	0
?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@2@$0A@@std@@@std@@QEAAXXZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,TextureToGo,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo> >,0> >::clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@@std@@@2@$0A@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$dead$ = 48
?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@@std@@@2@$0A@@std@@@std@@QEAAXXZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BfresFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BfresFile> >,0> >::clear, COMDAT

; 1354 :     void clear() noexcept {

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H

; 1355 :         const auto _Scary = _Get_scary();
; 1356 :         _Scary->_Orphan_ptr(nullptr);
; 1357 :         auto _Head = _Scary->_Myhead;

	mov	rbx, QWORD PTR ?Models@BfresLibrary@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@@std@@@2@@std@@A

; 1358 :         _Scary->_Erase_tree(_Getal(), _Head->_Parent);

	lea	rdx, OFFSET FLAT:?Models@BfresLibrary@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@@std@@@2@@std@@A ; BfresLibrary::Models
	lea	rcx, OFFSET FLAT:?Models@BfresLibrary@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@@std@@@2@@std@@A ; BfresLibrary::Models
	mov	r8, QWORD PTR [rbx+8]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BfresFile> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BfresFile>,void *> > >

; 1359 :         _Head->_Parent  = _Head;

	mov	QWORD PTR [rbx+8], rbx

; 1360 :         _Head->_Left    = _Head;

	mov	QWORD PTR [rbx], rbx

; 1361 :         _Head->_Right   = _Head;

	mov	QWORD PTR [rbx+16], rbx

; 1362 :         _Scary->_Mysize = 0;

	mov	QWORD PTR ?Models@BfresLibrary@@3V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@@std@@@2@@std@@A+8, 0

; 1363 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBfresFile@@@std@@@2@$0A@@std@@@std@@QEAAXXZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BfresFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BfresFile> >,0> >::clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Orphan_ptr@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@2@@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ptr$dead$ = 16
?_Orphan_ptr@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo> > >::_Orphan_ptr, COMDAT

; 716  : #if _ITERATOR_DEBUG_LEVEL == 2
; 717  :         _Lockit _Lock(_LOCK_DEBUG);
; 718  :         _Iterator_base12** _Pnext = &this->_Myproxy->_Myfirstiter;
; 719  :         while (*_Pnext) {
; 720  :             const auto _Pnextptr = static_cast<const_iterator&>(**_Pnext)._Ptr;
; 721  :             if (_Pnextptr == _Myhead || (_Ptr != nullptr && _Pnextptr != _Ptr)) {
; 722  :                 _Pnext = &(*_Pnext)->_Mynextiter;
; 723  :             } else { // orphan the iterator
; 724  :                 (*_Pnext)->_Myproxy = nullptr;
; 725  :                 *_Pnext             = (*_Pnext)->_Mynextiter;
; 726  :             }
; 727  :         }
; 728  : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 / _ITERATOR_DEBUG_LEVEL != 2 vvv
; 729  :         (void) _Ptr;
; 730  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 731  :     }

	ret	0
?_Orphan_ptr@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo> > >::_Orphan_ptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@1@@Z
_TEXT	SEGMENT
this$ = 64
_Al$ = 72
_Rootnode$ = 80
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo>,void *> > >, COMDAT

; 744  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

$LN67:
	push	rbx
	push	rbp
	push	rsi
	sub	rsp, 32					; 00000020H

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

	cmp	BYTE PTR [r8+25], 0
	mov	rbx, r8
	mov	rbp, rdx
	mov	rsi, rcx
	jne	SHORT $LN3@Erase_tree
	mov	QWORD PTR [rsp+88], rdi
	npad	3
$LL2@Erase_tree:

; 746  :             _Erase_tree(_Al, _Rootnode->_Right);

	mov	r8, QWORD PTR [rbx+16]
	mov	rdx, rbp
	mov	rcx, rsi
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rdi, rbx

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	rbx, QWORD PTR [rbx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 382  :         allocator_traits<_Alloc>::destroy(_Al, _STD addressof(_Ptr->_Myval));

	lea	rcx, QWORD PTR [rdi+32]
	call	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@QEAA@XZ
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 112				; 00000070H
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

	cmp	BYTE PTR [rbx+25], 0
	je	SHORT $LL2@Erase_tree
	mov	rdi, QWORD PTR [rsp+88]
$LN3@Erase_tree:

; 747  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));
; 748  :         }
; 749  :     }

	add	rsp, 32					; 00000020H
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@AEAPEAU12@@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@0@AEAPEAU10@0@Z
_TEXT	SEGMENT
_Val$ = 8
_New_val$ = 16
??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@AEAPEAU12@@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@0@AEAPEAU10@0@Z PROC ; std::exchange<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo>,void *> * &>, COMDAT

; 753  :     // assign _New_val to _Val, return previous _Val
; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);
; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	rdx, QWORD PTR [rdx]
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rcx], rdx

; 756  :     return _Old_val;
; 757  : }

	ret	0
??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@AEAPEAU12@@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@0@AEAPEAU10@0@Z ENDP ; std::exchange<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@1@PEAU01@@Z
_TEXT	SEGMENT
_Al$dead$ = 48
_Ptr$ = 56
??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@1@PEAU01@@Z PROC ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo>,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo>,void *> > >, COMDAT

; 380  :     static void _Freenode(_Alloc& _Al, _Nodeptr _Ptr) noexcept {

$LN56:
	push	rbx
	sub	rsp, 32					; 00000020H

; 381  :         static_assert(is_same_v<typename _Alloc::value_type, _Tree_node>, "Bad _Freenode call");
; 382  :         allocator_traits<_Alloc>::destroy(_Al, _STD addressof(_Ptr->_Myval));

	lea	rcx, QWORD PTR [rdx+32]
	mov	rbx, rdx
	call	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@QEAA@XZ
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 112				; 00000070H
	mov	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 384  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@1@PEAU01@@Z ENDP ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo>,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@1@PEAU01@@Z
_TEXT	SEGMENT
_Al$dead$ = 8
_Ptr$ = 16
??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@1@PEAU01@@Z PROC ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo>,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo>,void *> > >, COMDAT

; 371  :     static void _Freenode0(_Alloc& _Al, _Nodeptr _Ptr) noexcept {

	mov	rcx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 112				; 00000070H
	jmp	??3@YAXPEAX_K@Z				; operator delete
??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@1@PEAU01@@Z ENDP ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo>,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@2@QEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@2@_K@Z
_TEXT	SEGMENT
_Al$dead$ = 8
_Ptr$ = 16
_Count$dead$ = 24
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@2@QEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo>,void *> > >::deallocate, COMDAT

; 701  :     static _CONSTEXPR20 void deallocate(_Alloc& _Al, const pointer _Ptr, const size_type _Count) {

	mov	rcx, rdx

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 112				; 00000070H
	jmp	??3@YAXPEAX_K@Z				; operator delete
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@std@@@2@QEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VTextureToGo@@@std@@PEAX@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,TextureToGo>,void *> > >::deallocate
_TEXT	ENDS
END

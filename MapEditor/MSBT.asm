; Listing generated by Microsoft (R) Optimizing Compiler Version 19.37.32822.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_C@_01NBENCBCI@?$CK@				; `string'
PUBLIC	??_C@_02CFBPIAHD@?$FN?$DO@			; `string'
PUBLIC	??_C@_0N@EDOILAGG@?$DMfont?$DN?$FLface?$DN@	; `string'
PUBLIC	??_C@_0M@CAIHJFBG@?$DMcolor?$DN?$FLid?$DN@	; `string'
PUBLIC	??_C@_07FMMDOFPG@?0value?$DN@			; `string'
PUBLIC	??_C@_0BB@BEACDGCH@?$DMruby?$DN?$FLcharSpan?$DN@ ; `string'
PUBLIC	??_C@_0BA@NKKPJPMI@?$DMplaySound?$DN?$FLid?$DN@	; `string'
PUBLIC	??_C@_0L@LIGJPJNO@?$DMicon?$DN?$FLid?$DN@	; `string'
PUBLIC	??_C@_0P@BGMCIDJN@?$DMpageBreak?$DN?$FL?$FN?$DO@ ; `string'
PUBLIC	??_C@_0BA@LFEHIEGJ@?$DMdelay?$DN?$FLframes?$DN@	; `string'
PUBLIC	??_C@_0BH@JBKPMHEL@?$DMselectedHorseName?$DN?$FL?$FN?$DO@ ; `string'
PUBLIC	??_C@_0BG@CGOMLLDF@?$DMcookingAdjective?$DN?$FL?$FN?$DO@ ; `string'
PUBLIC	??_C@_0P@NHHAKEHP@?$DMnumber2?$DN?$FLref?$DN@	; `string'
PUBLIC	??_C@_0BG@KGAEPOGK@?$DMcurrentHorseName?$DN?$FL?$FN?$DO@ ; `string'
PUBLIC	??_C@_0BA@IJNOGDAN@?$DMstring11?$DN?$FLref?$DN@	; `string'
PUBLIC	??_C@_0BA@HFBGEOO@?$DMstring12?$DN?$FLref?$DN@	; `string'
PUBLIC	??_C@_0BK@EHFBDNB@?$DMcookingEffectCaption?$DN?$FL?$FN?$DO@ ; `string'
PUBLIC	??_C@_0P@IKBKLICJ@?$DMnumber9?$DN?$FLref?$DN@	; `string'
PUBLIC	??_C@_0BA@KGDLHMCI@?$DMnumber16?$DN?$FLref?$DN@	; `string'
PUBLIC	??_C@_0BK@MNLAOKGN@?$DMshopTradePriceItem?$DN?$FLref?$DN@ ; `string'
PUBLIC	??_C@_0BA@OEBOHLFF@?$DMnumber14?$DN?$FLref?$DN@	; `string'
PUBLIC	??_C@_0BA@CILEHLML@?$DMnumber15?$DN?$FLref?$DN@	; `string'
PUBLIC	??_C@_0BA@JFHDEJPE@?$DMnumber21?$DN?$FLref?$DN@	; `string'
PUBLIC	??_C@_0BA@BLPMEOBH@?$DMnumber22?$DN?$FLref?$DN@	; `string'
PUBLIC	??_C@_0M@MFICPDOG@?$DMtime?$DN?$FLref?$DN@	; `string'
PUBLIC	??_C@_0O@FCPNBANM@?$DMcoords?$DN?$FLref?$DN@	; `string'
PUBLIC	??_C@_0BG@IINJJOFK@?$DMessenceAdjective?$DN?$FL?$FN?$DO@ ; `string'
PUBLIC	??_C@_0BF@IKOMCGHN@?$DMessenceBaseName?$DN?$FL?$FN?$DO@ ; `string'
PUBLIC	??_C@_0BJ@MHBBHEMD@?$DMattachmentAdjective?$DN?$FL?$FN?$DO@ ; `string'
PUBLIC	??_C@_0BH@DADNLHLJ@?$DMequipmentBaseName?$DN?$FL?$FN?$DO@ ; `string'
PUBLIC	??_C@_0BD@CBLJLKKB@?$DMquestItemName?$DN?$FL?$FN?$DO@ ; `string'
PUBLIC	??_C@_0BK@PMOFMDBG@?$DMshopSelectItemName?$DN?$FLref?$DN@ ; `string'
PUBLIC	??_C@_0BA@PDCFFLBH@?$DMweaponName?$DN?$FL?$FN?$DO@ ; `string'
PUBLIC	??_C@_0BA@IEOGKIDO@?$DMplayerName?$DN?$FL?$FN?$DO@ ; `string'
PUBLIC	??_C@_0BL@CPLJACIM@?$DMshopSelectItemName2?$DN?$FLref?$DN@ ; `string'
PUBLIC	??_C@_0BL@ODBDACBC@?$DMshopSelectItemName3?$DN?$FLref?$DN@ ; `string'
PUBLIC	??_C@_0CD@KJBOHPE@?$DMsensorTargetNameOnActorMode?$DN?$FLr@ ; `string'
PUBLIC	??_C@_0BF@CBLHLBLF@?$DMyonaDynamicName?$DN?$FL?$FN?$DO@ ; `string'
PUBLIC	??_C@_0BD@HAFBOBPA@?$DMsetItalicFont?$DN?$FL?$FN?$DO@ ; `string'
PUBLIC	??_C@_0N@EIGDOONI@?$DManim?$DN?$FLtype?$DN@	; `string'
PUBLIC	??_C@_0BA@PEKBEMEA@?$DMrecipeName?$DN?$FL?$FN?$DO@ ; `string'
PUBLIC	??_C@_0BC@EJANOLPN@?$DMresetAnim?$DN?$FLinfo?$DN@ ; `string'
PUBLIC	??_C@_04CKBOFOAK@LBL1@				; `string'
PUBLIC	??_C@_04HMDCJELJ@TXT2@				; `string'
PUBLIC	??_C@_0BP@ELEAPPLP@Wrong?5magic?0?5expected?5MsgStdBn@ ; `string'
PUBLIC	??_C@_0M@HIEBLDJK@MSBTDecoder@			; `string'
PUBLIC	??_C@_09LKOAKIKN@resetAnim@			; `string'
PUBLIC	??_C@_08OAIJKIJM@MsgStdBn@			; `string'
PUBLIC	??_C@_04GELIALFL@TXTW@				; `string'
PUBLIC	??_C@_04NBCDDDGK@anim@				; `string'
PUBLIC	??_C@_0CE@JKCCACIB@Could?5not?5calculate?5index?5for?5l@ ; `string'
PUBLIC	??_C@_0M@LGOMOHPO@MSBTEncoder@			; `string'
PUBLIC	??_C@_0P@MNLEEHMK@bad?5conversion@		; `string'
PUBLIC	??_R3_Facet_base@std@@8				; std::_Facet_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_7range_error@std@@6B@			; std::range_error::`vftable'
PUBLIC	??_R0?AVrange_error@std@@@8			; std::range_error `RTTI Type Descriptor'
PUBLIC	??_R3_Crt_new_delete@std@@8			; std::_Crt_new_delete::`RTTI Class Hierarchy Descriptor'
PUBLIC	_TI3?AVrange_error@std@@
PUBLIC	??_R3?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@8 ; std::wstring_convert<std::codecvt_utf8<wchar_t,1114111,0>,wchar_t,std::allocator<wchar_t>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AVcodecvt_base@std@@@8			; std::codecvt_base `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@EA@_Facet_base@std@@8		; std::_Facet_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV_Facet_base@std@@@8			; std::_Facet_base `RTTI Type Descriptor'
PUBLIC	??_R0?AU_Crt_new_delete@std@@@8			; std::_Crt_new_delete `RTTI Type Descriptor'
PUBLIC	??_7?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@6B@	; std::codecvt_utf8<wchar_t,1114111,0>::`vftable'
PUBLIC	??_R17?0A@EA@_Crt_new_delete@std@@8		; std::_Crt_new_delete::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$codecvt@_WDU_Mbstatet@@@std@@8	; std::codecvt<wchar_t,char,_Mbstatet>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R2range_error@std@@8				; std::range_error::`RTTI Base Class Array'
PUBLIC	??_R0?AV?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@@8 ; std::wstring_convert<std::codecvt_utf8<wchar_t,1114111,0>,wchar_t,std::allocator<wchar_t>,std::allocator<char> > `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@EA@?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@8 ; std::wstring_convert<std::codecvt_utf8<wchar_t,1114111,0>,wchar_t,std::allocator<wchar_t>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@facet@locale@std@@8		; std::locale::facet::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	_CTA3?AVrange_error@std@@
PUBLIC	??_R2?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@8 ; std::wstring_convert<std::codecvt_utf8<wchar_t,1114111,0>,wchar_t,std::allocator<wchar_t>,std::allocator<char> >::`RTTI Base Class Array'
PUBLIC	??_R2codecvt_base@std@@8			; std::codecvt_base::`RTTI Base Class Array'
PUBLIC	??_R2?$codecvt@_WDU_Mbstatet@@@std@@8		; std::codecvt<wchar_t,char,_Mbstatet>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@codecvt_base@std@@8		; std::codecvt_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@range_error@std@@8		; std::range_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@@8	; std::codecvt_utf8<wchar_t,1114111,0> `RTTI Type Descriptor'
PUBLIC	??_R3codecvt_base@std@@8			; std::codecvt_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R3?$codecvt@_WDU_Mbstatet@@@std@@8		; std::codecvt<wchar_t,char,_Mbstatet>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R3?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@8	; std::codecvt_utf8<wchar_t,1114111,0>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AVfacet@locale@std@@@8			; std::locale::facet `RTTI Type Descriptor'
PUBLIC	??_R3facet@locale@std@@8			; std::locale::facet::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AV?$codecvt@_WDU_Mbstatet@@@std@@@8	; std::codecvt<wchar_t,char,_Mbstatet> `RTTI Type Descriptor'
PUBLIC	?_Min_buckets@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std@@@2@$0A@@std@@@std@@2_KB ; std::_Hash<std::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned int> >,0> >::_Min_buckets
PUBLIC	?_Min_buckets@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@$0A@@std@@@std@@2_KB ; std::_Hash<std::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MSBTFile::StringEntry,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> >,0> >::_Min_buckets
PUBLIC	??_R1A@?0A@EA@_Crt_new_delete@std@@8		; std::_Crt_new_delete::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R2?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@8	; std::codecvt_utf8<wchar_t,1114111,0>::`RTTI Base Class Array'
PUBLIC	??_R3range_error@std@@8				; std::range_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R4?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@6B@ ; std::wstring_convert<std::codecvt_utf8<wchar_t,1114111,0>,wchar_t,std::allocator<wchar_t>,std::allocator<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R2_Crt_new_delete@std@@8			; std::_Crt_new_delete::`RTTI Base Class Array'
PUBLIC	_CT??_R0?AVrange_error@std@@@8??0range_error@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R1A@?0A@EA@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@8 ; std::codecvt_utf8<wchar_t,1114111,0>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@6B@	; std::codecvt_utf8<wchar_t,1114111,0>::`RTTI Complete Object Locator'
PUBLIC	??_R2_Facet_base@std@@8				; std::_Facet_base::`RTTI Base Class Array'
PUBLIC	??_R2facet@locale@std@@8			; std::locale::facet::`RTTI Base Class Array'
PUBLIC	??_7?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@6B@ ; std::wstring_convert<std::codecvt_utf8<wchar_t,1114111,0>,wchar_t,std::allocator<wchar_t>,std::allocator<char> >::`vftable'
PUBLIC	??_R4range_error@std@@6B@			; std::range_error::`RTTI Complete Object Locator'
EXTRN	?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ:PROC ; std::locale::facet::_Decref
EXTRN	?_Incref@facet@locale@std@@UEAAXXZ:PROC		; std::locale::facet::_Incref
EXTRN	__imp_?_Incref@facet@locale@std@@UEAAXXZ:PROC
EXTRN	__imp_?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ:PROC
EXTRN	__imp_?_Addfac@_Locimp@locale@std@@AEAAXPEAVfacet@23@_K@Z:PROC
EXTRN	__imp_?out@?$codecvt@_WDU_Mbstatet@@@std@@QEBAHAEAU_Mbstatet@@PEB_W1AEAPEB_WPEAD3AEAPEAD@Z:PROC
EXTRN	__imp_??0?$codecvt@_WDU_Mbstatet@@@std@@QEAA@_K@Z:PROC
EXTRN	__imp_??1?$codecvt@_WDU_Mbstatet@@@std@@MEAA@XZ:PROC
EXTRN	__imp_??4?$_Yarn@D@std@@QEAAAEAV01@PEBD@Z:PROC
EXTRN	__imp_?id@?$codecvt@_WDU_Mbstatet@@@std@@2V0locale@2@A:QWORD
EXTRN	__imp_?_New_Locimp@_Locimp@locale@std@@CAPEAV123@AEBV123@@Z:PROC
EXTRN	__imp_?_Init@locale@std@@CAPEAV_Locimp@12@_N@Z:PROC
;	COMDAT ??_R4range_error@std@@6B@
rdata$r	SEGMENT
??_R4range_error@std@@6B@ DD 01H			; std::range_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVrange_error@std@@@8
	DD	imagerel ??_R3range_error@std@@8
	DD	imagerel ??_R4range_error@std@@6B@
rdata$r	ENDS
;	COMDAT ??_7?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@6B@
CONST	SEGMENT
??_7?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@6B@ DQ FLAT:??_R4?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@6B@ ; std::wstring_convert<std::codecvt_utf8<wchar_t,1114111,0>,wchar_t,std::allocator<wchar_t>,std::allocator<char> >::`vftable'
	DQ	FLAT:??_E?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@UEAAPEAXI@Z
CONST	ENDS
;	COMDAT ??_R2facet@locale@std@@8
rdata$r	SEGMENT
??_R2facet@locale@std@@8 DD imagerel ??_R1A@?0A@EA@facet@locale@std@@8 ; std::locale::facet::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@_Facet_base@std@@8
	DD	imagerel ??_R17?0A@EA@_Crt_new_delete@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R2_Facet_base@std@@8
rdata$r	SEGMENT
??_R2_Facet_base@std@@8 DD imagerel ??_R1A@?0A@EA@_Facet_base@std@@8 ; std::_Facet_base::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R4?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@6B@
rdata$r	SEGMENT
??_R4?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@6B@ DD 01H	; std::codecvt_utf8<wchar_t,1114111,0>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@@8
	DD	imagerel ??_R3?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@8
	DD	imagerel ??_R4?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@8 DD imagerel ??_R0?AV?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@@8 ; std::codecvt_utf8<wchar_t,1114111,0>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@8
rdata$r	ENDS
;	COMDAT _CT??_R0?AVrange_error@std@@@8??0range_error@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVrange_error@std@@@8??0range_error@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVrange_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0range_error@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R2_Crt_new_delete@std@@8
rdata$r	SEGMENT
??_R2_Crt_new_delete@std@@8 DD imagerel ??_R1A@?0A@EA@_Crt_new_delete@std@@8 ; std::_Crt_new_delete::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R4?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@6B@ DD 01H ; std::wstring_convert<std::codecvt_utf8<wchar_t,1114111,0>,wchar_t,std::allocator<wchar_t>,std::allocator<char> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@@8
	DD	imagerel ??_R3?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@8
	DD	imagerel ??_R4?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R3range_error@std@@8
rdata$r	SEGMENT
??_R3range_error@std@@8 DD 00H				; std::range_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2range_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@8
rdata$r	SEGMENT
??_R2?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@8 DD imagerel ??_R1A@?0A@EA@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@8 ; std::codecvt_utf8<wchar_t,1114111,0>::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@?$codecvt@_WDU_Mbstatet@@@std@@8
	DD	imagerel ??_R1A@?0A@EA@codecvt_base@std@@8
	DD	imagerel ??_R1A@?0A@EA@facet@locale@std@@8
	DD	imagerel ??_R1A@?0A@EA@_Facet_base@std@@8
	DD	imagerel ??_R17?0A@EA@_Crt_new_delete@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Crt_new_delete@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Crt_new_delete@std@@8 DD imagerel ??_R0?AU_Crt_new_delete@std@@@8 ; std::_Crt_new_delete::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_Crt_new_delete@std@@8
rdata$r	ENDS
;	COMDAT ?_Min_buckets@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@$0A@@std@@@std@@2_KB
CONST	SEGMENT
?_Min_buckets@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@$0A@@std@@@std@@2_KB DQ 0000000000000008H ; std::_Hash<std::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MSBTFile::StringEntry,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> >,0> >::_Min_buckets
CONST	ENDS
;	COMDAT ?_Min_buckets@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std@@@2@$0A@@std@@@std@@2_KB
CONST	SEGMENT
?_Min_buckets@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IV?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std@@@2@$0A@@std@@@std@@2_KB DQ 0000000000000008H ; std::_Hash<std::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,unsigned int,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned int> >,0> >::_Min_buckets
CONST	ENDS
;	COMDAT ??_R0?AV?$codecvt@_WDU_Mbstatet@@@std@@@8
data$rs	SEGMENT
??_R0?AV?$codecvt@_WDU_Mbstatet@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::codecvt<wchar_t,char,_Mbstatet> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$codecvt@_WDU_Mbstatet@@@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R3facet@locale@std@@8
rdata$r	SEGMENT
??_R3facet@locale@std@@8 DD 00H				; std::locale::facet::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	imagerel ??_R2facet@locale@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVfacet@locale@std@@@8
data$rs	SEGMENT
??_R0?AVfacet@locale@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::locale::facet `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVfacet@locale@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R3?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@8
rdata$r	SEGMENT
??_R3?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@8 DD 00H	; std::codecvt_utf8<wchar_t,1114111,0>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	06H
	DD	imagerel ??_R2?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$codecvt@_WDU_Mbstatet@@@std@@8
rdata$r	SEGMENT
??_R3?$codecvt@_WDU_Mbstatet@@@std@@8 DD 00H		; std::codecvt<wchar_t,char,_Mbstatet>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	05H
	DD	imagerel ??_R2?$codecvt@_WDU_Mbstatet@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3codecvt_base@std@@8
rdata$r	SEGMENT
??_R3codecvt_base@std@@8 DD 00H				; std::codecvt_base::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	04H
	DD	imagerel ??_R2codecvt_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@@8
data$rs	SEGMENT
??_R0?AV?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::codecvt_utf8<wchar_t,1114111,0> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@range_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@range_error@std@@8 DD imagerel ??_R0?AVrange_error@std@@@8 ; std::range_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3range_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@codecvt_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@codecvt_base@std@@8 DD imagerel ??_R0?AVcodecvt_base@std@@@8 ; std::codecvt_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3codecvt_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$codecvt@_WDU_Mbstatet@@@std@@8
rdata$r	SEGMENT
??_R2?$codecvt@_WDU_Mbstatet@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$codecvt@_WDU_Mbstatet@@@std@@8 ; std::codecvt<wchar_t,char,_Mbstatet>::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@codecvt_base@std@@8
	DD	imagerel ??_R1A@?0A@EA@facet@locale@std@@8
	DD	imagerel ??_R1A@?0A@EA@_Facet_base@std@@8
	DD	imagerel ??_R17?0A@EA@_Crt_new_delete@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R2codecvt_base@std@@8
rdata$r	SEGMENT
??_R2codecvt_base@std@@8 DD imagerel ??_R1A@?0A@EA@codecvt_base@std@@8 ; std::codecvt_base::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@facet@locale@std@@8
	DD	imagerel ??_R1A@?0A@EA@_Facet_base@std@@8
	DD	imagerel ??_R17?0A@EA@_Crt_new_delete@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R2?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R2?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@8 DD imagerel ??_R1A@?0A@EA@?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@8 ; std::wstring_convert<std::codecvt_utf8<wchar_t,1114111,0>,wchar_t,std::allocator<wchar_t>,std::allocator<char> >::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT _CTA3?AVrange_error@std@@
xdata$x	SEGMENT
_CTA3?AVrange_error@std@@ DD 03H
	DD	imagerel _CT??_R0?AVrange_error@std@@@8??0range_error@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT ??_R1A@?0A@EA@facet@locale@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@facet@locale@std@@8 DD imagerel ??_R0?AVfacet@locale@std@@@8 ; std::locale::facet::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3facet@locale@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@8 DD imagerel ??_R0?AV?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@@8 ; std::wstring_convert<std::codecvt_utf8<wchar_t,1114111,0>,wchar_t,std::allocator<wchar_t>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@@8
data$rs	SEGMENT
??_R0?AV?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::wstring_convert<std::codecvt_utf8<wchar_t,1114111,0>,wchar_t,std::allocator<wchar_t>,std::allocator<char> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@st'
	DB	'd@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R2range_error@std@@8
rdata$r	SEGMENT
??_R2range_error@std@@8 DD imagerel ??_R1A@?0A@EA@range_error@std@@8 ; std::range_error::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@runtime_error@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$codecvt@_WDU_Mbstatet@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$codecvt@_WDU_Mbstatet@@@std@@8 DD imagerel ??_R0?AV?$codecvt@_WDU_Mbstatet@@@std@@@8 ; std::codecvt<wchar_t,char,_Mbstatet>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$codecvt@_WDU_Mbstatet@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EA@_Crt_new_delete@std@@8
rdata$r	SEGMENT
??_R17?0A@EA@_Crt_new_delete@std@@8 DD imagerel ??_R0?AU_Crt_new_delete@std@@@8 ; std::_Crt_new_delete::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_Crt_new_delete@std@@8
rdata$r	ENDS
;	COMDAT ??_7?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@6B@
CONST	SEGMENT
??_7?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@6B@ DQ FLAT:??_R4?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@6B@ ; std::codecvt_utf8<wchar_t,1114111,0>::`vftable'
	DQ	FLAT:??_E?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@UEAAPEAXI@Z
	DQ	FLAT:?_Incref@facet@locale@std@@UEAAXXZ
	DQ	FLAT:?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ
	DQ	FLAT:?do_always_noconv@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBA_NXZ
	DQ	FLAT:?do_max_length@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHXZ
	DQ	FLAT:?do_encoding@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHXZ
	DQ	FLAT:?do_in@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHAEAU_Mbstatet@@PEBD1AEAPEBDPEA_W3AEAPEA_W@Z
	DQ	FLAT:?do_out@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHAEAU_Mbstatet@@PEB_W1AEAPEB_WPEAD3AEAPEAD@Z
	DQ	FLAT:?do_unshift@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHAEAU_Mbstatet@@PEAD1AEAPEAD@Z
	DQ	FLAT:?do_length@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHAEAU_Mbstatet@@PEBD1_K@Z
CONST	ENDS
;	COMDAT ??_R0?AU_Crt_new_delete@std@@@8
data$rs	SEGMENT
??_R0?AU_Crt_new_delete@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::_Crt_new_delete `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AU_Crt_new_delete@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R0?AV_Facet_base@std@@@8
data$rs	SEGMENT
??_R0?AV_Facet_base@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::_Facet_base `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV_Facet_base@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@_Facet_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Facet_base@std@@8 DD imagerel ??_R0?AV_Facet_base@std@@@8 ; std::_Facet_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_Facet_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVcodecvt_base@std@@@8
data$rs	SEGMENT
??_R0?AVcodecvt_base@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::codecvt_base `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVcodecvt_base@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R3?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R3?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@8 DD 00H ; std::wstring_convert<std::codecvt_utf8<wchar_t,1114111,0>,wchar_t,std::allocator<wchar_t>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT _TI3?AVrange_error@std@@
xdata$x	SEGMENT
_TI3?AVrange_error@std@@ DD 00H
	DD	imagerel ??1range_error@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVrange_error@std@@
xdata$x	ENDS
;	COMDAT ??_R3_Crt_new_delete@std@@8
rdata$r	SEGMENT
??_R3_Crt_new_delete@std@@8 DD 00H			; std::_Crt_new_delete::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2_Crt_new_delete@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVrange_error@std@@@8
data$r	SEGMENT
??_R0?AVrange_error@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::range_error `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVrange_error@std@@', 00H
data$r	ENDS
;	COMDAT ??_7range_error@std@@6B@
CONST	SEGMENT
??_7range_error@std@@6B@ DQ FLAT:??_R4range_error@std@@6B@ ; std::range_error::`vftable'
	DQ	FLAT:??_Erange_error@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_R3_Facet_base@std@@8
rdata$r	SEGMENT
??_R3_Facet_base@std@@8 DD 00H				; std::_Facet_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2_Facet_base@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0P@MNLEEHMK@bad?5conversion@
CONST	SEGMENT
??_C@_0P@MNLEEHMK@bad?5conversion@ DB 'bad conversion', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LGOMOHPO@MSBTEncoder@
CONST	SEGMENT
??_C@_0M@LGOMOHPO@MSBTEncoder@ DB 'MSBTEncoder', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@JKCCACIB@Could?5not?5calculate?5index?5for?5l@
CONST	SEGMENT
??_C@_0CE@JKCCACIB@Could?5not?5calculate?5index?5for?5l@ DB 'Could not ca'
	DB	'lculate index for label', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04NBCDDDGK@anim@
CONST	SEGMENT
??_C@_04NBCDDDGK@anim@ DB 'anim', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04GELIALFL@TXTW@
CONST	SEGMENT
??_C@_04GELIALFL@TXTW@ DB 'TXTW', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08OAIJKIJM@MsgStdBn@
CONST	SEGMENT
??_C@_08OAIJKIJM@MsgStdBn@ DB 'MsgStdBn', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09LKOAKIKN@resetAnim@
CONST	SEGMENT
??_C@_09LKOAKIKN@resetAnim@ DB 'resetAnim', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HIEBLDJK@MSBTDecoder@
CONST	SEGMENT
??_C@_0M@HIEBLDJK@MSBTDecoder@ DB 'MSBTDecoder', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@ELEAPPLP@Wrong?5magic?0?5expected?5MsgStdBn@
CONST	SEGMENT
??_C@_0BP@ELEAPPLP@Wrong?5magic?0?5expected?5MsgStdBn@ DB 'Wrong magic, e'
	DB	'xpected MsgStdBn', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04HMDCJELJ@TXT2@
CONST	SEGMENT
??_C@_04HMDCJELJ@TXT2@ DB 'TXT2', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04CKBOFOAK@LBL1@
CONST	SEGMENT
??_C@_04CKBOFOAK@LBL1@ DB 'LBL1', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EJANOLPN@?$DMresetAnim?$DN?$FLinfo?$DN@
CONST	SEGMENT
??_C@_0BC@EJANOLPN@?$DMresetAnim?$DN?$FLinfo?$DN@ DB '<resetAnim=[info=', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PEKBEMEA@?$DMrecipeName?$DN?$FL?$FN?$DO@
CONST	SEGMENT
??_C@_0BA@PEKBEMEA@?$DMrecipeName?$DN?$FL?$FN?$DO@ DB '<recipeName=[]>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EIGDOONI@?$DManim?$DN?$FLtype?$DN@
CONST	SEGMENT
??_C@_0N@EIGDOONI@?$DManim?$DN?$FLtype?$DN@ DB '<anim=[type=', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HAFBOBPA@?$DMsetItalicFont?$DN?$FL?$FN?$DO@
CONST	SEGMENT
??_C@_0BD@HAFBOBPA@?$DMsetItalicFont?$DN?$FL?$FN?$DO@ DB '<setItalicFont='
	DB	'[]>', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@CBLHLBLF@?$DMyonaDynamicName?$DN?$FL?$FN?$DO@
CONST	SEGMENT
??_C@_0BF@CBLHLBLF@?$DMyonaDynamicName?$DN?$FL?$FN?$DO@ DB '<yonaDynamicN'
	DB	'ame=[]>', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@KJBOHPE@?$DMsensorTargetNameOnActorMode?$DN?$FLr@
CONST	SEGMENT
??_C@_0CD@KJBOHPE@?$DMsensorTargetNameOnActorMode?$DN?$FLr@ DB '<sensorTa'
	DB	'rgetNameOnActorMode=[ref=', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@ODBDACBC@?$DMshopSelectItemName3?$DN?$FLref?$DN@
CONST	SEGMENT
??_C@_0BL@ODBDACBC@?$DMshopSelectItemName3?$DN?$FLref?$DN@ DB '<shopSelec'
	DB	'tItemName3=[ref=', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@CPLJACIM@?$DMshopSelectItemName2?$DN?$FLref?$DN@
CONST	SEGMENT
??_C@_0BL@CPLJACIM@?$DMshopSelectItemName2?$DN?$FLref?$DN@ DB '<shopSelec'
	DB	'tItemName2=[ref=', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IEOGKIDO@?$DMplayerName?$DN?$FL?$FN?$DO@
CONST	SEGMENT
??_C@_0BA@IEOGKIDO@?$DMplayerName?$DN?$FL?$FN?$DO@ DB '<playerName=[]>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PDCFFLBH@?$DMweaponName?$DN?$FL?$FN?$DO@
CONST	SEGMENT
??_C@_0BA@PDCFFLBH@?$DMweaponName?$DN?$FL?$FN?$DO@ DB '<weaponName=[]>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@PMOFMDBG@?$DMshopSelectItemName?$DN?$FLref?$DN@
CONST	SEGMENT
??_C@_0BK@PMOFMDBG@?$DMshopSelectItemName?$DN?$FLref?$DN@ DB '<shopSelect'
	DB	'ItemName=[ref=', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CBLJLKKB@?$DMquestItemName?$DN?$FL?$FN?$DO@
CONST	SEGMENT
??_C@_0BD@CBLJLKKB@?$DMquestItemName?$DN?$FL?$FN?$DO@ DB '<questItemName='
	DB	'[]>', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@DADNLHLJ@?$DMequipmentBaseName?$DN?$FL?$FN?$DO@
CONST	SEGMENT
??_C@_0BH@DADNLHLJ@?$DMequipmentBaseName?$DN?$FL?$FN?$DO@ DB '<equipmentB'
	DB	'aseName=[]>', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@MHBBHEMD@?$DMattachmentAdjective?$DN?$FL?$FN?$DO@
CONST	SEGMENT
??_C@_0BJ@MHBBHEMD@?$DMattachmentAdjective?$DN?$FL?$FN?$DO@ DB '<attachme'
	DB	'ntAdjective=[]>', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IKOMCGHN@?$DMessenceBaseName?$DN?$FL?$FN?$DO@
CONST	SEGMENT
??_C@_0BF@IKOMCGHN@?$DMessenceBaseName?$DN?$FL?$FN?$DO@ DB '<essenceBaseN'
	DB	'ame=[]>', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IINJJOFK@?$DMessenceAdjective?$DN?$FL?$FN?$DO@
CONST	SEGMENT
??_C@_0BG@IINJJOFK@?$DMessenceAdjective?$DN?$FL?$FN?$DO@ DB '<essenceAdje'
	DB	'ctive=[]>', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FCPNBANM@?$DMcoords?$DN?$FLref?$DN@
CONST	SEGMENT
??_C@_0O@FCPNBANM@?$DMcoords?$DN?$FLref?$DN@ DB '<coords=[ref=', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MFICPDOG@?$DMtime?$DN?$FLref?$DN@
CONST	SEGMENT
??_C@_0M@MFICPDOG@?$DMtime?$DN?$FLref?$DN@ DB '<time=[ref=', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BLPMEOBH@?$DMnumber22?$DN?$FLref?$DN@
CONST	SEGMENT
??_C@_0BA@BLPMEOBH@?$DMnumber22?$DN?$FLref?$DN@ DB '<number22=[ref=', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFHDEJPE@?$DMnumber21?$DN?$FLref?$DN@
CONST	SEGMENT
??_C@_0BA@JFHDEJPE@?$DMnumber21?$DN?$FLref?$DN@ DB '<number21=[ref=', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CILEHLML@?$DMnumber15?$DN?$FLref?$DN@
CONST	SEGMENT
??_C@_0BA@CILEHLML@?$DMnumber15?$DN?$FLref?$DN@ DB '<number15=[ref=', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OEBOHLFF@?$DMnumber14?$DN?$FLref?$DN@
CONST	SEGMENT
??_C@_0BA@OEBOHLFF@?$DMnumber14?$DN?$FLref?$DN@ DB '<number14=[ref=', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@MNLAOKGN@?$DMshopTradePriceItem?$DN?$FLref?$DN@
CONST	SEGMENT
??_C@_0BK@MNLAOKGN@?$DMshopTradePriceItem?$DN?$FLref?$DN@ DB '<shopTradeP'
	DB	'riceItem=[ref=', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KGDLHMCI@?$DMnumber16?$DN?$FLref?$DN@
CONST	SEGMENT
??_C@_0BA@KGDLHMCI@?$DMnumber16?$DN?$FLref?$DN@ DB '<number16=[ref=', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IKBKLICJ@?$DMnumber9?$DN?$FLref?$DN@
CONST	SEGMENT
??_C@_0P@IKBKLICJ@?$DMnumber9?$DN?$FLref?$DN@ DB '<number9=[ref=', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@EHFBDNB@?$DMcookingEffectCaption?$DN?$FL?$FN?$DO@
CONST	SEGMENT
??_C@_0BK@EHFBDNB@?$DMcookingEffectCaption?$DN?$FL?$FN?$DO@ DB '<cookingE'
	DB	'ffectCaption=[]>', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HFBGEOO@?$DMstring12?$DN?$FLref?$DN@
CONST	SEGMENT
??_C@_0BA@HFBGEOO@?$DMstring12?$DN?$FLref?$DN@ DB '<string12=[ref=', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IJNOGDAN@?$DMstring11?$DN?$FLref?$DN@
CONST	SEGMENT
??_C@_0BA@IJNOGDAN@?$DMstring11?$DN?$FLref?$DN@ DB '<string11=[ref=', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@KGAEPOGK@?$DMcurrentHorseName?$DN?$FL?$FN?$DO@
CONST	SEGMENT
??_C@_0BG@KGAEPOGK@?$DMcurrentHorseName?$DN?$FL?$FN?$DO@ DB '<currentHors'
	DB	'eName=[]>', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NHHAKEHP@?$DMnumber2?$DN?$FLref?$DN@
CONST	SEGMENT
??_C@_0P@NHHAKEHP@?$DMnumber2?$DN?$FLref?$DN@ DB '<number2=[ref=', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@CGOMLLDF@?$DMcookingAdjective?$DN?$FL?$FN?$DO@
CONST	SEGMENT
??_C@_0BG@CGOMLLDF@?$DMcookingAdjective?$DN?$FL?$FN?$DO@ DB '<cookingAdje'
	DB	'ctive=[]>', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@JBKPMHEL@?$DMselectedHorseName?$DN?$FL?$FN?$DO@
CONST	SEGMENT
??_C@_0BH@JBKPMHEL@?$DMselectedHorseName?$DN?$FL?$FN?$DO@ DB '<selectedHo'
	DB	'rseName=[]>', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LFEHIEGJ@?$DMdelay?$DN?$FLframes?$DN@
CONST	SEGMENT
??_C@_0BA@LFEHIEGJ@?$DMdelay?$DN?$FLframes?$DN@ DB '<delay=[frames=', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BGMCIDJN@?$DMpageBreak?$DN?$FL?$FN?$DO@
CONST	SEGMENT
??_C@_0P@BGMCIDJN@?$DMpageBreak?$DN?$FL?$FN?$DO@ DB '<pageBreak=[]>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LIGJPJNO@?$DMicon?$DN?$FLid?$DN@
CONST	SEGMENT
??_C@_0L@LIGJPJNO@?$DMicon?$DN?$FLid?$DN@ DB '<icon=[id=', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NKKPJPMI@?$DMplaySound?$DN?$FLid?$DN@
CONST	SEGMENT
??_C@_0BA@NKKPJPMI@?$DMplaySound?$DN?$FLid?$DN@ DB '<playSound=[id=', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BEACDGCH@?$DMruby?$DN?$FLcharSpan?$DN@
CONST	SEGMENT
??_C@_0BB@BEACDGCH@?$DMruby?$DN?$FLcharSpan?$DN@ DB '<ruby=[charSpan=', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07FMMDOFPG@?0value?$DN@
CONST	SEGMENT
??_C@_07FMMDOFPG@?0value?$DN@ DB ',value=', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CAIHJFBG@?$DMcolor?$DN?$FLid?$DN@
CONST	SEGMENT
??_C@_0M@CAIHJFBG@?$DMcolor?$DN?$FLid?$DN@ DB '<color=[id=', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EDOILAGG@?$DMfont?$DN?$FLface?$DN@
CONST	SEGMENT
??_C@_0N@EDOILAGG@?$DMfont?$DN?$FLface?$DN@ DB '<font=[face=', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02CFBPIAHD@?$FN?$DO@
CONST	SEGMENT
??_C@_02CFBPIAHD@?$FN?$DO@ DB ']>', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01NBENCBCI@?$CK@
CONST	SEGMENT
??_C@_01NBENCBCI@?$CK@ DB '*', 00H			; `string'
PUBLIC	??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned int>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned int><std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<>,0>
PUBLIC	??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned int>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned int><std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
PUBLIC	??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z ; std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned int>,std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<>,0>
PUBLIC	??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@QEAAPEAXI@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>::`scalar deleting destructor'
PUBLIC	??_G?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAXI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::`scalar deleting destructor'
PUBLIC	??_GLabelEntry@MSBTFile@@QEAAPEAXI@Z		; MSBTFile::LabelEntry::`scalar deleting destructor'
PUBLIC	??_GStringEntry@MSBTFile@@QEAAPEAXI@Z		; MSBTFile::StringEntry::`scalar deleting destructor'
PUBLIC	??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@0@@Z ; std::destroy_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> >
PUBLIC	??$destroy_at@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAXQEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@@Z ; std::destroy_at<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$destroy_at@ULabelEntry@MSBTFile@@@std@@YAXQEAULabelEntry@MSBTFile@@@Z ; std::destroy_at<MSBTFile::LabelEntry>
PUBLIC	??$destroy_at@UStringEntry@MSBTFile@@@std@@YAXQEAUStringEntry@MSBTFile@@@Z ; std::destroy_at<MSBTFile::StringEntry>
PUBLIC	??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> >
PUBLIC	??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@0@AEAU10@@Z ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> >
PUBLIC	??$destroy@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@QEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::destroy<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$_Unfancy@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAPEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PEAV10@@Z ; std::_Unfancy<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$_Destroy_in_place@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@0@@Z ; std::_Destroy_in_place<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,void *> *>
PUBLIC	??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@1@PEAU01@@Z ; std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,void *>::_Freenode<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,void *> > >
PUBLIC	??$destroy@ULabelEntry@MSBTFile@@@?$_Default_allocator_traits@V?$allocator@ULabelEntry@MSBTFile@@@std@@@std@@SAXAEAV?$allocator@ULabelEntry@MSBTFile@@@1@QEAULabelEntry@MSBTFile@@@Z ; std::_Default_allocator_traits<std::allocator<MSBTFile::LabelEntry> >::destroy<MSBTFile::LabelEntry>
PUBLIC	??$_Unfancy@ULabelEntry@MSBTFile@@@std@@YAPEAULabelEntry@MSBTFile@@PEAU12@@Z ; std::_Unfancy<MSBTFile::LabelEntry>
PUBLIC	??$destroy@UStringEntry@MSBTFile@@@?$_Default_allocator_traits@V?$allocator@UStringEntry@MSBTFile@@@std@@@std@@SAXAEAV?$allocator@UStringEntry@MSBTFile@@@1@QEAUStringEntry@MSBTFile@@@Z ; std::_Default_allocator_traits<std::allocator<MSBTFile::StringEntry> >::destroy<MSBTFile::StringEntry>
PUBLIC	??$_Unfancy@UStringEntry@MSBTFile@@@std@@YAPEAUStringEntry@MSBTFile@@PEAU12@@Z ; std::_Unfancy<MSBTFile::StringEntry>
PUBLIC	?deallocate@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@2@_K@Z ; std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,void *> >::deallocate
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@2@QEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,void *> > >::deallocate
PUBLIC	??$_Destroy_range@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@YAXPEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@QEAV10@AEAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
PUBLIC	??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@1@PEAU01@@Z ; std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,void *>::_Freenode0<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,void *> > >
PUBLIC	??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@1@PEAU01@@Z ; std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,void *> > >
PUBLIC	??$_Destroy_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@std@@PEAV12@@std@@YAXPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@0@QEAV10@@Z ; std::_Destroy_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > > > *>
PUBLIC	??$_Destroy_range@V?$allocator@ULabelEntry@MSBTFile@@@std@@@std@@YAXPEAULabelEntry@MSBTFile@@QEAU12@AEAV?$allocator@ULabelEntry@MSBTFile@@@0@@Z ; std::_Destroy_range<std::allocator<MSBTFile::LabelEntry> >
PUBLIC	??$_Destroy_range@V?$allocator@UStringEntry@MSBTFile@@@std@@@std@@YAXPEAUStringEntry@MSBTFile@@QEAU12@AEAV?$allocator@UStringEntry@MSBTFile@@@0@@Z ; std::_Destroy_range<std::allocator<MSBTFile::StringEntry> >
PUBLIC	??$_Codecvt_do_length@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@DU_Mbstatet@@@std@@YAHAEBV?$codecvt_utf8@_W$0BAPPPP@$0A@@0@AEAU_Mbstatet@@PEBD2_K@Z ; std::_Codecvt_do_length<std::codecvt_utf8<wchar_t,1114111,0>,char,_Mbstatet>
PUBLIC	??$_Adl_verify_range@PEBDPEBD@std@@YAXAEBQEBD0@Z ; std::_Adl_verify_range<char const *,char const *>
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::_Vector_val<std::_Simple_types<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,void *> >,std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@ULabelEntry@MSBTFile@@@std@@V?$_Vector_val@U?$_Simple_types@ULabelEntry@MSBTFile@@@std@@@2@$00@std@@QEAAAEAV?$allocator@ULabelEntry@MSBTFile@@@2@XZ ; std::_Compressed_pair<std::allocator<MSBTFile::LabelEntry>,std::_Vector_val<std::_Simple_types<MSBTFile::LabelEntry> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UStringEntry@MSBTFile@@@std@@V?$_Vector_val@U?$_Simple_types@UStringEntry@MSBTFile@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UStringEntry@MSBTFile@@@2@XZ ; std::_Compressed_pair<std::allocator<MSBTFile::StringEntry>,std::_Vector_val<std::_Simple_types<MSBTFile::StringEntry> >,1>::_Get_first
PUBLIC	?deallocate@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAAXQEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@_K@Z ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::deallocate
PUBLIC	?_Getal@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Getal
PUBLIC	?_Getal@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@2@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > >::_Getal
PUBLIC	?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@2@_K@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > > > >::deallocate
PUBLIC	?capacity@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > > > > >::capacity
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > > > > >,1>::_Get_first
PUBLIC	?deallocate@?$allocator@ULabelEntry@MSBTFile@@@std@@QEAAXQEAULabelEntry@MSBTFile@@_K@Z ; std::allocator<MSBTFile::LabelEntry>::deallocate
PUBLIC	?_Getal@?$vector@ULabelEntry@MSBTFile@@V?$allocator@ULabelEntry@MSBTFile@@@std@@@std@@AEAAAEAV?$allocator@ULabelEntry@MSBTFile@@@2@XZ ; std::vector<MSBTFile::LabelEntry,std::allocator<MSBTFile::LabelEntry> >::_Getal
PUBLIC	?deallocate@?$allocator@UStringEntry@MSBTFile@@@std@@QEAAXQEAUStringEntry@MSBTFile@@_K@Z ; std::allocator<MSBTFile::StringEntry>::deallocate
PUBLIC	?_Getal@?$vector@UStringEntry@MSBTFile@@V?$allocator@UStringEntry@MSBTFile@@@std@@@std@@AEAAAEAV?$allocator@UStringEntry@MSBTFile@@@2@XZ ; std::vector<MSBTFile::StringEntry,std::allocator<MSBTFile::StringEntry> >::_Getal
PUBLIC	?_Tidy@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Tidy
PUBLIC	?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@@std@@AEAAXXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > >::_Tidy
PUBLIC	?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > > > > >::_Tidy
PUBLIC	?_Tidy@?$vector@ULabelEntry@MSBTFile@@V?$allocator@ULabelEntry@MSBTFile@@@std@@@std@@AEAAXXZ ; std::vector<MSBTFile::LabelEntry,std::allocator<MSBTFile::LabelEntry> >::_Tidy
PUBLIC	?_Tidy@?$vector@UStringEntry@MSBTFile@@V?$allocator@UStringEntry@MSBTFile@@@std@@@std@@AEAAXXZ ; std::vector<MSBTFile::StringEntry,std::allocator<MSBTFile::StringEntry> >::_Tidy
PUBLIC	??_G?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@UEAAPEAXI@Z ; std::wstring_convert<std::codecvt_utf8<wchar_t,1114111,0>,wchar_t,std::allocator<wchar_t>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	??_G?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@UEAAPEAXI@Z ; std::codecvt_utf8<wchar_t,1114111,0>::`scalar deleting destructor'
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
PUBLIC	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
PUBLIC	??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@@std@@QEAA@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > >::~list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > >
PUBLIC	??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > > > > >
PUBLIC	??1?$vector@ULabelEntry@MSBTFile@@V?$allocator@ULabelEntry@MSBTFile@@@std@@@std@@QEAA@XZ ; std::vector<MSBTFile::LabelEntry,std::allocator<MSBTFile::LabelEntry> >::~vector<MSBTFile::LabelEntry,std::allocator<MSBTFile::LabelEntry> >
PUBLIC	??1?$vector@UStringEntry@MSBTFile@@V?$allocator@UStringEntry@MSBTFile@@@std@@@std@@QEAA@XZ ; std::vector<MSBTFile::StringEntry,std::allocator<MSBTFile::StringEntry> >::~vector<MSBTFile::StringEntry,std::allocator<MSBTFile::StringEntry> >
PUBLIC	?_Unchecked_begin@?$vector@GV?$allocator@G@std@@@std@@QEAAPEAGXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$vector@GV?$allocator@G@std@@@std@@QEAAPEAGXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::_Unchecked_end
PUBLIC	??1?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@UEAA@XZ ; std::wstring_convert<std::codecvt_utf8<wchar_t,1114111,0>,wchar_t,std::allocator<wchar_t>,std::allocator<char> >::~wstring_convert<std::codecvt_utf8<wchar_t,1114111,0>,wchar_t,std::allocator<wchar_t>,std::allocator<char> >
PUBLIC	??1?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@UEAA@XZ	; std::codecvt_utf8<wchar_t,1114111,0>::~codecvt_utf8<wchar_t,1114111,0>
PUBLIC	?do_in@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHAEAU_Mbstatet@@PEBD1AEAPEBDPEA_W3AEAPEA_W@Z ; std::codecvt_utf8<wchar_t,1114111,0>::do_in
PUBLIC	?do_out@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHAEAU_Mbstatet@@PEB_W1AEAPEB_WPEAD3AEAPEAD@Z ; std::codecvt_utf8<wchar_t,1114111,0>::do_out
PUBLIC	?do_unshift@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHAEAU_Mbstatet@@PEAD1AEAPEAD@Z ; std::codecvt_utf8<wchar_t,1114111,0>::do_unshift
PUBLIC	?do_length@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHAEAU_Mbstatet@@PEBD1_K@Z ; std::codecvt_utf8<wchar_t,1114111,0>::do_length
PUBLIC	?do_always_noconv@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBA_NXZ ; std::codecvt_utf8<wchar_t,1114111,0>::do_always_noconv
PUBLIC	?do_max_length@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHXZ ; std::codecvt_utf8<wchar_t,1114111,0>::do_max_length
PUBLIC	?do_encoding@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHXZ ; std::codecvt_utf8<wchar_t,1114111,0>::do_encoding
PUBLIC	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@QEAA@XZ ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>
PUBLIC	??1StringEntry@MSBTFile@@QEAA@XZ		; MSBTFile::StringEntry::~StringEntry
PUBLIC	??1LabelEntry@MSBTFile@@QEAA@XZ			; MSBTFile::LabelEntry::~LabelEntry
PUBLIC	??1range_error@std@@UEAA@XZ			; std::range_error::~range_error
PUBLIC	??_Grange_error@std@@UEAAPEAXI@Z		; std::range_error::`scalar deleting destructor'
PUBLIC	??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@$0A@@std@@@std@@QEAA@XZ ; std::_Hash<std::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MSBTFile::StringEntry,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> >,0> >::~_Hash<std::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MSBTFile::StringEntry,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> >,0> >
PUBLIC	??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@@std@@QEAA@XZ ; std::unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MSBTFile::StringEntry,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > >::~unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MSBTFile::StringEntry,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > >
EXTRN	??_E?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@UEAAPEAXI@Z:PROC ; std::codecvt_utf8<wchar_t,1114111,0>::`vector deleting destructor'
EXTRN	??_Erange_error@std@@UEAAPEAXI@Z:PROC		; std::range_error::`vector deleting destructor'
EXTRN	??_E?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@UEAAPEAXI@Z:PROC ; std::wstring_convert<std::codecvt_utf8<wchar_t,1114111,0>,wchar_t,std::allocator<wchar_t>,std::allocator<char> >::`vector deleting destructor'
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z DD imagerel $LN6
	DD	imagerel $LN6+33
	DD	imagerel $unwind$??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z DD imagerel $LN9
	DD	imagerel $LN9+33
	DD	imagerel $unwind$??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z DD imagerel $LN13
	DD	imagerel $LN13+33
	DD	imagerel $unwind$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@QEAAPEAXI@Z DD imagerel $LN18
	DD	imagerel $LN18+35
	DD	imagerel $unwind$??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAXI@Z DD imagerel $LN8
	DD	imagerel $LN8+23
	DD	imagerel $unwind$??_G?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GLabelEntry@MSBTFile@@QEAAPEAXI@Z DD imagerel $LN12
	DD	imagerel $LN12+27
	DD	imagerel $unwind$??_GLabelEntry@MSBTFile@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GStringEntry@MSBTFile@@QEAAPEAXI@Z DD imagerel $LN12
	DD	imagerel $LN12+23
	DD	imagerel $unwind$??_GStringEntry@MSBTFile@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@0@@Z DD imagerel $LN20
	DD	imagerel $LN20+31
	DD	imagerel $unwind$??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@1@@Z DD imagerel $LN22
	DD	imagerel $LN22+31
	DD	imagerel $unwind$??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@1@PEAU01@@Z DD imagerel $LN68
	DD	imagerel $LN68+54
	DD	imagerel $unwind$??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@1@PEAU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@YAXPEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@QEAV10@AEAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@@Z DD imagerel $LN23
	DD	imagerel $LN23+49
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@YAXPEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@QEAV10@AEAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@1@PEAU01@@Z DD imagerel $LN79
	DD	imagerel $LN79+25
	DD	imagerel $unwind$??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@1@PEAU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@1@PEAU01@@Z DD imagerel $LN79+25
	DD	imagerel $LN79+87
	DD	imagerel $chain$1$??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@1@PEAU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@1@PEAU01@@Z DD imagerel $LN79+87
	DD	imagerel $LN79+93
	DD	imagerel $chain$2$??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@1@PEAU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@ULabelEntry@MSBTFile@@@std@@@std@@YAXPEAULabelEntry@MSBTFile@@QEAU12@AEAV?$allocator@ULabelEntry@MSBTFile@@@0@@Z DD imagerel $LN27
	DD	imagerel $LN27+50
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@ULabelEntry@MSBTFile@@@std@@@std@@YAXPEAULabelEntry@MSBTFile@@QEAU12@AEAV?$allocator@ULabelEntry@MSBTFile@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@UStringEntry@MSBTFile@@@std@@@std@@YAXPEAUStringEntry@MSBTFile@@QEAU12@AEAV?$allocator@UStringEntry@MSBTFile@@@0@@Z DD imagerel $LN27
	DD	imagerel $LN27+49
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@UStringEntry@MSBTFile@@@std@@@std@@YAXPEAUStringEntry@MSBTFile@@QEAU12@AEAV?$allocator@UStringEntry@MSBTFile@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Codecvt_do_length@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@DU_Mbstatet@@@std@@YAHAEBV?$codecvt_utf8@_W$0BAPPPP@$0A@@0@AEAU_Mbstatet@@PEBD2_K@Z DD imagerel $LN75
	DD	imagerel $LN75+365
	DD	imagerel $unwind$??$_Codecvt_do_length@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@DU_Mbstatet@@@std@@YAHAEBV?$codecvt_utf8@_W$0BAPPPP@$0A@@0@AEAU_Mbstatet@@PEBD2_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAAXQEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@_K@Z DD imagerel $LN23
	DD	imagerel $LN23+67
	DD	imagerel $unwind$?deallocate@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAAXQEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@2@_K@Z DD imagerel $LN23
	DD	imagerel $LN23+67
	DD	imagerel $unwind$?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@ULabelEntry@MSBTFile@@@std@@QEAAXQEAULabelEntry@MSBTFile@@_K@Z DD imagerel $LN23
	DD	imagerel $LN23+67
	DD	imagerel $unwind$?deallocate@?$allocator@ULabelEntry@MSBTFile@@@std@@QEAAXQEAULabelEntry@MSBTFile@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@UStringEntry@MSBTFile@@@std@@QEAAXQEAUStringEntry@MSBTFile@@_K@Z DD imagerel $LN23
	DD	imagerel $LN23+67
	DD	imagerel $unwind$?deallocate@?$allocator@UStringEntry@MSBTFile@@@std@@QEAAXQEAUStringEntry@MSBTFile@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@AEAAXXZ DD imagerel $LN49
	DD	imagerel $LN49+21
	DD	imagerel $unwind$?_Tidy@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?_Tidy@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@AEAAXXZ DD imagerel $LN49+21
	DD	imagerel $LN49+102
	DD	imagerel $chain$0$?_Tidy@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?_Tidy@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@AEAAXXZ DD imagerel $LN49+102
	DD	imagerel $LN49+162
	DD	imagerel $chain$1$?_Tidy@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@@std@@AEAAXXZ DD imagerel $LN125
	DD	imagerel $LN125+36
	DD	imagerel $unwind$?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@@std@@AEAAXXZ DD imagerel $LN125+36
	DD	imagerel $LN125+100
	DD	imagerel $chain$1$?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@@std@@AEAAXXZ DD imagerel $LN125+100
	DD	imagerel $LN125+124
	DD	imagerel $chain$2$?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ DD imagerel $LN32
	DD	imagerel $LN32+92
	DD	imagerel $unwind$?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@ULabelEntry@MSBTFile@@V?$allocator@ULabelEntry@MSBTFile@@@std@@@std@@AEAAXXZ DD imagerel $LN53
	DD	imagerel $LN53+21
	DD	imagerel $unwind$?_Tidy@?$vector@ULabelEntry@MSBTFile@@V?$allocator@ULabelEntry@MSBTFile@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?_Tidy@?$vector@ULabelEntry@MSBTFile@@V?$allocator@ULabelEntry@MSBTFile@@@std@@@std@@AEAAXXZ DD imagerel $LN53+21
	DD	imagerel $LN53+103
	DD	imagerel $chain$0$?_Tidy@?$vector@ULabelEntry@MSBTFile@@V?$allocator@ULabelEntry@MSBTFile@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?_Tidy@?$vector@ULabelEntry@MSBTFile@@V?$allocator@ULabelEntry@MSBTFile@@@std@@@std@@AEAAXXZ DD imagerel $LN53+103
	DD	imagerel $LN53+163
	DD	imagerel $chain$1$?_Tidy@?$vector@ULabelEntry@MSBTFile@@V?$allocator@ULabelEntry@MSBTFile@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@UStringEntry@MSBTFile@@V?$allocator@UStringEntry@MSBTFile@@@std@@@std@@AEAAXXZ DD imagerel $LN53
	DD	imagerel $LN53+21
	DD	imagerel $unwind$?_Tidy@?$vector@UStringEntry@MSBTFile@@V?$allocator@UStringEntry@MSBTFile@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?_Tidy@?$vector@UStringEntry@MSBTFile@@V?$allocator@UStringEntry@MSBTFile@@@std@@@std@@AEAAXXZ DD imagerel $LN53+21
	DD	imagerel $LN53+102
	DD	imagerel $chain$0$?_Tidy@?$vector@UStringEntry@MSBTFile@@V?$allocator@UStringEntry@MSBTFile@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?_Tidy@?$vector@UStringEntry@MSBTFile@@V?$allocator@UStringEntry@MSBTFile@@@std@@@std@@AEAAXXZ DD imagerel $LN53+102
	DD	imagerel $LN53+162
	DD	imagerel $chain$1$?_Tidy@?$vector@UStringEntry@MSBTFile@@V?$allocator@UStringEntry@MSBTFile@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@UEAAPEAXI@Z DD imagerel $LN24
	DD	imagerel $LN24+110
	DD	imagerel $unwind$??_G?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@UEAAPEAXI@Z DD imagerel $LN11
	DD	imagerel $LN11+63
	DD	imagerel $unwind$??_G?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@@std@@QEAA@XZ DD imagerel $LN128
	DD	imagerel $LN128+36
	DD	imagerel $unwind$??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@@std@@QEAA@XZ DD imagerel $LN128+36
	DD	imagerel $LN128+100
	DD	imagerel $chain$1$??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@@std@@QEAA@XZ DD imagerel $LN128+100
	DD	imagerel $LN128+124
	DD	imagerel $chain$2$??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN35
	DD	imagerel $LN35+92
	DD	imagerel $unwind$??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@UEAA@XZ DD imagerel $LN18
	DD	imagerel $LN18+82
	DD	imagerel $unwind$??1?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_in@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHAEAU_Mbstatet@@PEBD1AEAPEBDPEA_W3AEAPEA_W@Z DD imagerel $LN53
	DD	imagerel $LN53+347
	DD	imagerel $unwind$?do_in@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHAEAU_Mbstatet@@PEBD1AEAPEBDPEA_W3AEAPEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_out@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHAEAU_Mbstatet@@PEB_W1AEAPEB_WPEAD3AEAPEAD@Z DD imagerel $LN41
	DD	imagerel $LN41+290
	DD	imagerel $unwind$?do_out@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHAEAU_Mbstatet@@PEB_W1AEAPEB_WPEAD3AEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?do_length@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHAEAU_Mbstatet@@PEBD1_K@Z DD imagerel $LN77
	DD	imagerel $LN77+365
	DD	imagerel $unwind$?do_length@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHAEAU_Mbstatet@@PEBD1_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@QEAA@XZ DD imagerel $LN14
	DD	imagerel $LN14+31
	DD	imagerel $unwind$??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Grange_error@std@@UEAAPEAXI@Z DD imagerel $LN16
	DD	imagerel $LN16+67
	DD	imagerel $unwind$??_Grange_error@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@$0A@@std@@@std@@QEAA@XZ DD imagerel $LN38
	DD	imagerel $LN38+102
	DD	imagerel $unwind$??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@$0A@@std@@@std@@QEAA@XZ
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@$0A@@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Grange_error@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_length@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHAEAU_Mbstatet@@PEBD1_K@Z DD 082119H
	DD	085412H
	DD	063412H
	DD	0e00e1212H
	DD	0600b700cH
	DD	imagerel __GSHandlerCheck
	DD	08H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_out@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHAEAU_Mbstatet@@PEB_W1AEAPEB_WPEAD3AEAPEAD@Z DD 0a1801H
	DD	067418H
	DD	056418H
	DD	045418H
	DD	033418H
	DD	0e016f018H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?do_in@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHAEAU_Mbstatet@@PEBD1AEAPEBDPEA_W3AEAPEA_W@Z DD 091601H
	DD	057416H
	DD	046416H
	DD	035416H
	DD	023416H
	DD	0e016H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@UEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@@std@@QEAA@XZ DD 021H
	DD	imagerel $LN128
	DD	imagerel $LN128+36
	DD	imagerel $unwind$??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@@std@@QEAA@XZ DD 040a21H
	DD	08740aH
	DD	073405H
	DD	imagerel $LN128
	DD	imagerel $LN128+36
	DD	imagerel $unwind$??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@@std@@QEAA@XZ DD 040b01H
	DD	09640bH
	DD	0e007320bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?_Tidy@?$vector@UStringEntry@MSBTFile@@V?$allocator@UStringEntry@MSBTFile@@@std@@@std@@AEAAXXZ DD 021H
	DD	imagerel $LN53
	DD	imagerel $LN53+21
	DD	imagerel $unwind$?_Tidy@?$vector@UStringEntry@MSBTFile@@V?$allocator@UStringEntry@MSBTFile@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?_Tidy@?$vector@UStringEntry@MSBTFile@@V?$allocator@UStringEntry@MSBTFile@@@std@@@std@@AEAAXXZ DD 020521H
	DD	077405H
	DD	imagerel $LN53
	DD	imagerel $LN53+21
	DD	imagerel $unwind$?_Tidy@?$vector@UStringEntry@MSBTFile@@V?$allocator@UStringEntry@MSBTFile@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@UStringEntry@MSBTFile@@V?$allocator@UStringEntry@MSBTFile@@@std@@@std@@AEAAXXZ DD 040a01H
	DD	08340aH
	DD	06006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?_Tidy@?$vector@ULabelEntry@MSBTFile@@V?$allocator@ULabelEntry@MSBTFile@@@std@@@std@@AEAAXXZ DD 021H
	DD	imagerel $LN53
	DD	imagerel $LN53+21
	DD	imagerel $unwind$?_Tidy@?$vector@ULabelEntry@MSBTFile@@V?$allocator@ULabelEntry@MSBTFile@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?_Tidy@?$vector@ULabelEntry@MSBTFile@@V?$allocator@ULabelEntry@MSBTFile@@@std@@@std@@AEAAXXZ DD 020521H
	DD	077405H
	DD	imagerel $LN53
	DD	imagerel $LN53+21
	DD	imagerel $unwind$?_Tidy@?$vector@ULabelEntry@MSBTFile@@V?$allocator@ULabelEntry@MSBTFile@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@ULabelEntry@MSBTFile@@V?$allocator@ULabelEntry@MSBTFile@@@std@@@std@@AEAAXXZ DD 040a01H
	DD	08340aH
	DD	06006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@@std@@AEAAXXZ DD 021H
	DD	imagerel $LN125
	DD	imagerel $LN125+36
	DD	imagerel $unwind$?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@@std@@AEAAXXZ DD 040a21H
	DD	08740aH
	DD	073405H
	DD	imagerel $LN125
	DD	imagerel $LN125+36
	DD	imagerel $unwind$?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@@std@@AEAAXXZ DD 040b01H
	DD	09640bH
	DD	0e007320bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?_Tidy@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@AEAAXXZ DD 021H
	DD	imagerel $LN49
	DD	imagerel $LN49+21
	DD	imagerel $unwind$?_Tidy@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?_Tidy@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@AEAAXXZ DD 020521H
	DD	077405H
	DD	imagerel $LN49
	DD	imagerel $LN49+21
	DD	imagerel $unwind$?_Tidy@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@AEAAXXZ DD 040a01H
	DD	08340aH
	DD	06006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@UStringEntry@MSBTFile@@@std@@QEAAXQEAUStringEntry@MSBTFile@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@ULabelEntry@MSBTFile@@@std@@QEAAXQEAULabelEntry@MSBTFile@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@2@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAAXQEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Codecvt_do_length@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@DU_Mbstatet@@@std@@YAHAEBV?$codecvt_utf8@_W$0BAPPPP@$0A@@0@AEAU_Mbstatet@@PEBD2_K@Z DD 082119H
	DD	085412H
	DD	063412H
	DD	0e00e1212H
	DD	0600b700cH
	DD	imagerel __GSHandlerCheck
	DD	08H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@UStringEntry@MSBTFile@@@std@@@std@@YAXPEAUStringEntry@MSBTFile@@QEAU12@AEAV?$allocator@UStringEntry@MSBTFile@@@0@@Z DD 040f01H
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@ULabelEntry@MSBTFile@@@std@@@std@@YAXPEAULabelEntry@MSBTFile@@QEAU12@AEAV?$allocator@ULabelEntry@MSBTFile@@@0@@Z DD 040f01H
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@1@PEAU01@@Z DD 021H
	DD	imagerel $LN79
	DD	imagerel $LN79+25
	DD	imagerel $unwind$??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@1@PEAU01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@1@PEAU01@@Z DD 040a21H
	DD	08740aH
	DD	063405H
	DD	imagerel $LN79
	DD	imagerel $LN79+25
	DD	imagerel $unwind$??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@1@PEAU01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@1@PEAU01@@Z DD 020601H
	DD	060023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@YAXPEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@QEAV10@AEAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@@Z DD 040f01H
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@1@PEAU01@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@1@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@0@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GStringEntry@MSBTFile@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GLabelEntry@MSBTFile@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
;	COMDAT ??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@@std@@QEAA@XZ PROC ; std::unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MSBTFile::StringEntry,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > >::~unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MSBTFile::StringEntry,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > >, COMDAT
	jmp	??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@$0A@@std@@@std@@QEAA@XZ
??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@@std@@QEAA@XZ ENDP ; std::unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MSBTFile::StringEntry,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > >::~unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MSBTFile::StringEntry,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@$0A@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@$0A@@std@@@std@@QEAA@XZ PROC ; std::_Hash<std::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MSBTFile::StringEntry,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> >,0> >::~_Hash<std::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MSBTFile::StringEntry,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> >,0> >, COMDAT
$LN38:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash

; 312  :         if (_Mypair._Myval2._Myfirst != nullptr) {

	mov	rcx, QWORD PTR [rcx+24]
	test	rcx, rcx
	je	SHORT $LN6@Hash

; 284  :         return static_cast<size_type>(_Mypair._Myval2._Myend - _Mypair._Myval2._Myfirst);

	mov	rdx, QWORD PTR [rbx+40]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -8

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN26@Hash

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN23@Hash

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN26@Hash:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash

; 315  :             _Mypair._Myval2._Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx+24], rax

; 316  :             _Mypair._Myval2._Mylast  = nullptr;

	mov	QWORD PTR [rbx+32], rax

; 317  :             _Mypair._Myval2._Myend   = nullptr;

	mov	QWORD PTR [rbx+40], rax
$LN6@Hash:
	lea	rcx, QWORD PTR [rbx+8]
	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@@std@@QEAA@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > >::~list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > >
$LN23@Hash:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN35@Hash:
??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@V?$_Uhash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@$0A@@std@@@std@@QEAA@XZ ENDP ; std::_Hash<std::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MSBTFile::StringEntry,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> >,0> >::~_Hash<std::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MSBTFile::StringEntry,std::_Uhash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??_Grange_error@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Grange_error@std@@UEAAPEAXI@Z PROC			; std::range_error::`scalar deleting destructor', COMDAT
$LN16:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 89   :     {

	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	rdi, rcx
	mov	QWORD PTR [rcx], rax
	mov	ebx, edx

; 90   :         __std_exception_destroy(&_Data);

	add	rcx, 8
	call	QWORD PTR __imp___std_exception_destroy
	test	bl, 1
	je	SHORT $LN12@scalar
	mov	edx, 24
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
$LN12@scalar:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Grange_error@std@@UEAAPEAXI@Z ENDP			; std::range_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
;	COMDAT ??1range_error@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1range_error@std@@UEAA@XZ PROC			; std::range_error::~range_error, COMDAT

; 89   :     {

	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rcx], rax

; 90   :         __std_exception_destroy(&_Data);

	add	rcx, 8
	rex_jmp	QWORD PTR __imp___std_exception_destroy
??1range_error@std@@UEAA@XZ ENDP			; std::range_error::~range_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??1LabelEntry@MSBTFile@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1LabelEntry@MSBTFile@@QEAA@XZ PROC			; MSBTFile::LabelEntry::~LabelEntry, COMDAT
	add	rcx, 8

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??1LabelEntry@MSBTFile@@QEAA@XZ ENDP			; MSBTFile::LabelEntry::~LabelEntry
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??1StringEntry@MSBTFile@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1StringEntry@MSBTFile@@QEAA@XZ PROC			; MSBTFile::StringEntry::~StringEntry, COMDAT

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??1StringEntry@MSBTFile@@QEAA@XZ ENDP			; MSBTFile::StringEntry::~StringEntry
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@QEAA@XZ PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>, COMDAT
$LN14:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	add	rcx, 32					; 00000020H

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	mov	rcx, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@QEAA@XZ ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\codecvt
;	COMDAT ?do_encoding@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHXZ
_TEXT	SEGMENT
this$ = 8
?do_encoding@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHXZ PROC ; std::codecvt_utf8<wchar_t,1114111,0>::do_encoding, COMDAT

; 216  :         // return length of code sequence (from codecvt)
; 217  :         if constexpr ((_Mymode & (consume_header | generate_header)) != 0) {
; 218  :             return -1; // -1 => state dependent
; 219  :         } else {
; 220  :             return 0; // 0 => varying length

	xor	eax, eax

; 221  :         }
; 222  :     }

	ret	0
?do_encoding@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHXZ ENDP ; std::codecvt_utf8<wchar_t,1114111,0>::do_encoding
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\codecvt
;	COMDAT ?do_max_length@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHXZ
_TEXT	SEGMENT
this$ = 8
?do_max_length@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHXZ PROC ; std::codecvt_utf8<wchar_t,1114111,0>::do_max_length, COMDAT

; 207  :         // return maximum length required for a conversion
; 208  :         if constexpr ((_Mymode & (consume_header | generate_header)) != 0) {
; 209  :             return 9;
; 210  :         } else {
; 211  :             return 6;

	mov	eax, 6

; 212  :         }
; 213  :     }

	ret	0
?do_max_length@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHXZ ENDP ; std::codecvt_utf8<wchar_t,1114111,0>::do_max_length
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\codecvt
;	COMDAT ?do_always_noconv@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?do_always_noconv@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBA_NXZ PROC ; std::codecvt_utf8<wchar_t,1114111,0>::do_always_noconv, COMDAT

; 202  :         // return true if conversions never change input
; 203  :         return false;

	xor	al, al

; 204  :     }

	ret	0
?do_always_noconv@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBA_NXZ ENDP ; std::codecvt_utf8<wchar_t,1114111,0>::do_always_noconv
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\codecvt
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xlocale
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\codecvt
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xlocale
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xlocale
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\codecvt
;	COMDAT ?do_length@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHAEAU_Mbstatet@@PEBD1_K@Z
_TEXT	SEGMENT
_Ch$1 = 0
__$ArrayPad$ = 8
this$ = 48
_State$ = 56
_First1$ = 64
_Last1$ = 72
_Count$ = 80
?do_length@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHAEAU_Mbstatet@@PEBD1_K@Z PROC ; std::codecvt_utf8<wchar_t,1114111,0>::do_length, COMDAT

; 197  :         _Statype& _State, const _Byte* _First1, const _Byte* _Last1, size_t _Count) const noexcept override {

$LN77:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+24], rbp
	push	rsi
	push	rdi
	push	r14
	sub	rsp, 16
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 198  :         return _Codecvt_do_length(*this, _State, _First1, _Last1, _Count);

	mov	rbp, QWORD PTR _Count$[rsp]
	mov	rbx, r9
	mov	r14, r8
	mov	rdi, rdx
	mov	rsi, r8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xlocale

; 813  :     const auto _Old_first1 = _First1;

	test	rbp, rbp

; 814  : 
; 815  :     while (_Count > 0 && _First1 != _Last1) { // convert another wide character

	je	$LN58@do_length
	npad	5
$LL4@do_length:
	cmp	rsi, rbx
	je	$LN58@do_length
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\codecvt

; 54   :         _Mid1         = _First1;

	mov	r9, rsi

; 55   :         _Mid2         = _First2;

	lea	r11, QWORD PTR _Ch$1[rsp]
$LL11@do_length:

; 56   : 
; 57   :         while (_Mid1 != _Last1 && _Mid2 != _Last2) { // convert a multibyte sequence

	lea	rax, QWORD PTR _Ch$1[rsp+2]
	cmp	r11, rax
	je	$LN12@do_length

; 58   :             unsigned long _By = static_cast<unsigned char>(*_Mid1);

	movzx	ecx, BYTE PTR [r9]

; 59   :             unsigned long _Ch;
; 60   :             int _Nextra;
; 61   : 
; 62   :             if (_By < 0x80u) {

	cmp	ecx, 128				; 00000080H
	jae	SHORT $LN16@do_length

; 63   :                 _Ch     = _By;

	mov	eax, ecx

; 80   :             }
; 81   : 
; 82   :             if (_Nextra == 0) {
; 83   :                 ++_Mid1;

	inc	r9
	jmp	$LN14@do_length
$LN16@do_length:

; 64   :                 _Nextra = 0;
; 65   :             } else if (_By < 0xc0u) { // 0x80-0xbf not first byte

	cmp	ecx, 192				; 000000c0H
	jb	$LN58@do_length

; 66   :                 ++_Mid1;
; 67   :                 return _Mybase::error;
; 68   :             } else if (_By < 0xe0u) {

	mov	eax, ecx
	cmp	ecx, 224				; 000000e0H
	jae	SHORT $LN20@do_length

; 69   :                 _Ch     = _By & 0x1f;

	and	eax, 31

; 70   :                 _Nextra = 1;

	mov	r10d, 1
	jmp	SHORT $LN26@do_length
$LN20@do_length:

; 71   :             } else if (_By < 0xf0u) {

	cmp	ecx, 240				; 000000f0H
	jae	SHORT $LN22@do_length

; 72   :                 _Ch     = _By & 0x0f;

	and	eax, 15

; 73   :                 _Nextra = 2;

	mov	r10d, 2
	jmp	SHORT $LN26@do_length
$LN22@do_length:

; 74   :             } else if (_By < 0xf8u) {

	cmp	ecx, 248				; 000000f8H
	jae	SHORT $LN24@do_length

; 75   :                 _Ch     = _By & 0x07;

	and	eax, 7

; 76   :                 _Nextra = 3;

	mov	r10d, 3

; 77   :             } else {

	jmp	SHORT $LN26@do_length
$LN24@do_length:

; 78   :                 _Ch     = _By & 0x03;

	and	eax, 3

; 79   :                 _Nextra = _By < 0xfc ? 4 : 5;

	cmp	ecx, 252				; 000000fcH
	sbb	r10d, r10d
	add	r10d, 5
$LN26@do_length:

; 84   :             } else if (_Last1 - _Mid1 < _Nextra + 1) {

	mov	r8, rbx
	lea	edx, DWORD PTR [r10+1]
	sub	r8, r9
	cmp	r8, rdx
	jl	SHORT $LN12@do_length

; 85   :                 break; // not enough input
; 86   :             } else {
; 87   :                 for (++_Mid1; 0 < _Nextra; --_Nextra, ++_Mid1) {

	inc	r9
	npad	3
$LL15@do_length:

; 88   :                     if ((_By = static_cast<unsigned char>(*_Mid1)) < 0x80u || 0xc0u <= _By) {

	movzx	edx, BYTE PTR [r9]
	lea	ecx, DWORD PTR [rdx-128]
	cmp	ecx, 63					; 0000003fH
	ja	SHORT $LN58@do_length

; 89   :                         return _Mybase::error; // not continuation byte
; 90   :                     } else {
; 91   :                         _Ch = _Ch << 6 | (_By & 0x3f);

	mov	ecx, eax
	and	edx, 63					; 0000003fH
	shl	ecx, 6
	mov	eax, edx
	or	eax, ecx
	dec	r10d
	inc	r9
	test	r10d, r10d
	jg	SHORT $LL15@do_length
$LN14@do_length:

; 92   :                     }
; 93   :                 }
; 94   :             }
; 95   : 
; 96   :             if (*_Pstate == 0) { // first time, maybe look for and consume header

	cmp	BYTE PTR [rdi], 0
	jne	SHORT $LN33@do_length

; 97   :                 *_Pstate = 1;

	mov	BYTE PTR [rdi], 1
$LN33@do_length:

; 98   : 
; 99   :                 constexpr bool _Consuming = (_Mymode & consume_header) != 0;
; 100  :                 if constexpr (_Consuming) {
; 101  :                     if (_Ch == 0xfeff) { // drop header and retry
; 102  :                         const result _Ans = do_in(_State, _Mid1, _Last1, _Mid1, _First2, _Last2, _Mid2);
; 103  : 
; 104  :                         if (_Ans == _Mybase::partial) { // roll back header determination
; 105  :                             *_Pstate = 0;
; 106  :                             _Mid1    = _First1;
; 107  :                         }
; 108  : 
; 109  :                         return _Ans;
; 110  :                     }
; 111  :                 }
; 112  :             }
; 113  : 
; 114  :             if (_Mymax < _Ch) {

	cmp	eax, 1114111				; 0010ffffH
	ja	SHORT $LN58@do_length

; 115  :                 return _Mybase::error; // code too large
; 116  :             }
; 117  : 
; 118  :             *_Mid2++ = static_cast<_Elem>(_Ch);

	add	r11, 2
	cmp	r9, rbx
	jne	$LL11@do_length
$LN12@do_length:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xlocale

; 826  :         if (_Result != codecvt_base::ok) {

	cmp	rsi, r9
	je	SHORT $LN58@do_length

; 827  :             if (_Result == codecvt_base::noconv) {
; 828  :                 _First1 += (_STD min)(static_cast<size_t>(_Last1 - _First1), _Count);
; 829  :             }
; 830  : 
; 831  :             break; // error, noconv, or partial
; 832  :         }
; 833  : 
; 834  :         if (_Mid2 == &_Ch + 1) {

	lea	rax, QWORD PTR _Ch$1[rsp+2]
	cmp	r11, rax
	jne	SHORT $LN8@do_length

; 835  :             --_Count; // do_in converted an output character

	dec	rbp
$LN8@do_length:

; 836  :         }
; 837  : 
; 838  :         _First1 = _Mid1;

	mov	rsi, r9
	test	rbp, rbp
	jne	$LL4@do_length
$LN58@do_length:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 70   :     return _Right < _Left ? _Right : _Left;

	mov	eax, 2147483647				; 7fffffffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xlocale

; 841  :     return static_cast<int>((_STD min)(_First1 - _Old_first1, ptrdiff_t{INT_MAX}));

	sub	rsi, r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 70   :     return _Right < _Left ? _Right : _Left;

	cmp	rsi, rax
	cmovg	esi, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\codecvt

; 198  :         return _Codecvt_do_length(*this, _State, _First1, _Last1, _Count);

	mov	eax, esi

; 199  :     }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+64]
	add	rsp, 16
	pop	r14
	pop	rdi
	pop	rsi
	ret	0
?do_length@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHAEAU_Mbstatet@@PEBD1_K@Z ENDP ; std::codecvt_utf8<wchar_t,1114111,0>::do_length
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\codecvt
;	COMDAT ?do_unshift@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHAEAU_Mbstatet@@PEAD1AEAPEAD@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
_First2$ = 24
__formal$ = 32
_Mid2$ = 40
?do_unshift@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHAEAU_Mbstatet@@PEAD1AEAPEAD@Z PROC ; std::codecvt_utf8<wchar_t,1114111,0>::do_unshift, COMDAT

; 189  :         // generate bytes to return to default shift state
; 190  :         _Mid2 = _First2;

	mov	rax, QWORD PTR _Mid2$[rsp]
	mov	QWORD PTR [rax], r8

; 191  :         return _Mybase::noconv;

	mov	eax, 3

; 192  :     }

	ret	0
?do_unshift@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHAEAU_Mbstatet@@PEAD1AEAPEAD@Z ENDP ; std::codecvt_utf8<wchar_t,1114111,0>::do_unshift
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\codecvt
;	COMDAT ?do_out@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHAEAU_Mbstatet@@PEB_W1AEAPEB_WPEAD3AEAPEAD@Z
_TEXT	SEGMENT
this$ = 24
_State$ = 32
_First1$ = 40
_Last1$ = 48
_Mid1$ = 56
_First2$ = 64
_Last2$ = 72
_Mid2$ = 80
?do_out@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHAEAU_Mbstatet@@PEB_W1AEAPEB_WPEAD3AEAPEAD@Z PROC ; std::codecvt_utf8<wchar_t,1114111,0>::do_out, COMDAT

; 125  :         _Byte* _First2, _Byte* _Last2, _Byte*& _Mid2) const override {

$LN41:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	r14
	push	r15

; 126  :         // convert [_First1, _Last1) to bytes [_First2, _Last2)
; 127  :         char* _Pstate = reinterpret_cast<char*>(&_State);
; 128  :         _Mid1         = _First1;

	mov	rbx, QWORD PTR _Mid1$[rsp]

; 129  :         _Mid2         = _First2;
; 130  : 
; 131  :         while (_Mid1 != _Last1 && _Mid2 != _Last2) { // convert and put a wide char

	xor	ebp, ebp
	mov	r11, QWORD PTR _Mid2$[rsp]
	mov	r14, r9
	mov	r10, QWORD PTR _First2$[rsp]
	mov	r15, r8
	mov	rsi, QWORD PTR _Last2$[rsp]
	mov	rdi, rdx
	mov	QWORD PTR [rbx], r8
	mov	QWORD PTR [r11], r10
	mov	rax, QWORD PTR [rbx]
	cmp	rax, r9
	je	$LN31@do_out
	npad	7
$LL2@do_out:
	cmp	r10, rsi
	je	$LN31@do_out

; 132  :             _Byte _By;
; 133  :             int _Nextra;
; 134  :             unsigned long _Ch = static_cast<unsigned long>(*_Mid1);

	movzx	r9d, WORD PTR [rax]

; 135  : 
; 136  :             if (_Mymax < _Ch) {
; 137  :                 return _Mybase::error;
; 138  :             }
; 139  : 
; 140  :             if (_Ch < 0x0080u) {

	cmp	r9d, 128				; 00000080H
	jae	SHORT $LN8@do_out

; 141  :                 _By     = static_cast<_Byte>(_Ch);

	movzx	r10d, r9b

; 142  :                 _Nextra = 0;

	mov	eax, ebp
	jmp	SHORT $LN17@do_out
$LN8@do_out:

; 143  :             } else if (_Ch < 0x0800u) {

	mov	r10d, r9d
	cmp	r9d, 2048				; 00000800H
	jae	SHORT $LN10@do_out

; 144  :                 _By     = static_cast<_Byte>(0xc0 | _Ch >> 6);

	shr	r10d, 6

; 145  :                 _Nextra = 1;

	mov	eax, 1
	or	r10b, -64				; ffffffffffffffc0H
	jmp	SHORT $LN17@do_out
$LN10@do_out:

; 146  :             } else if (_Ch < 0x00010000u) {
; 147  :                 _By     = static_cast<_Byte>(0xe0 | _Ch >> 12);

	shr	r10d, 12

; 148  :                 _Nextra = 2;

	mov	eax, 2
	or	r10b, -32				; ffffffffffffffe0H
$LN17@do_out:

; 149  :             } else if (_Ch < 0x00200000u) {
; 150  :                 _By     = static_cast<_Byte>(0xf0 | _Ch >> 18);
; 151  :                 _Nextra = 3;
; 152  :             } else if (_Ch < 0x04000000u) {
; 153  :                 _By     = static_cast<_Byte>(0xf8 | _Ch >> 24);
; 154  :                 _Nextra = 4;
; 155  :             } else {
; 156  :                 _By     = static_cast<_Byte>(0xfc | (_Ch >> 30 & 0x03));
; 157  :                 _Nextra = 5;
; 158  :             }
; 159  : 
; 160  :             if (*_Pstate == 0) { // first time, maybe generate header

	cmp	BYTE PTR [rdi], bpl
	jne	SHORT $LN18@do_out

; 161  :                 *_Pstate                   = 1;

	mov	BYTE PTR [rdi], 1
$LN18@do_out:

; 162  :                 constexpr bool _Generating = (_Mymode & generate_header) != 0;
; 163  :                 if constexpr (_Generating) {
; 164  :                     if (_Last2 - _Mid2 < 3 + 1 + _Nextra) {
; 165  :                         return _Mybase::partial; // not enough room for both
; 166  :                     }
; 167  : 
; 168  :                     // prepend header
; 169  :                     *_Mid2++ = '\xef';
; 170  :                     *_Mid2++ = '\xbb';
; 171  :                     *_Mid2++ = '\xbf';
; 172  :                 }
; 173  :             }
; 174  : 
; 175  :             if (_Last2 - _Mid2 < 1 + _Nextra) {

	mov	r8, rsi
	lea	edx, DWORD PTR [rax+1]
	sub	r8, QWORD PTR [r11]
	cmp	r8, rdx
	jl	SHORT $LN31@do_out

; 176  :                 break; // not enough room for output
; 177  :             }
; 178  : 
; 179  :             ++_Mid1;

	add	QWORD PTR [rbx], 2

; 180  :             for (*_Mid2++ = _By; 0 < _Nextra;) {

	mov	rcx, QWORD PTR [r11]
	mov	BYTE PTR [rcx], r10b
	mov	r10, QWORD PTR [r11]
	inc	r10
	mov	QWORD PTR [r11], r10
	test	eax, eax
	je	SHORT $LN5@do_out
	lea	r8d, DWORD PTR [rax+rax*2]
	add	r8d, r8d
	npad	6
$LL26@do_out:

; 181  :                 *_Mid2++ = static_cast<_Byte>((_Ch >> 6 * --_Nextra & 0x3f) | 0x80);

	sub	r8d, 6
	mov	edx, r9d
	mov	ecx, r8d
	dec	eax
	shr	edx, cl
	and	dl, 63					; 0000003fH
	or	dl, -128				; ffffffffffffff80H
	mov	BYTE PTR [r10], dl
	mov	r10, QWORD PTR [r11]
	inc	r10
	mov	QWORD PTR [r11], r10
	test	eax, eax
	jg	SHORT $LL26@do_out
$LN5@do_out:

; 129  :         _Mid2         = _First2;
; 130  : 
; 131  :         while (_Mid1 != _Last1 && _Mid2 != _Last2) { // convert and put a wide char

	mov	rax, QWORD PTR [rbx]
	cmp	rax, r14
	jne	$LL2@do_out
$LN31@do_out:

; 182  :             }
; 183  :         }
; 184  : 
; 185  :         return _First1 == _Mid1 ? _Mybase::partial : _Mybase::ok;

	cmp	r15, QWORD PTR [rbx]

; 186  :     }

	mov	rbx, QWORD PTR [rsp+24]
	mov	rsi, QWORD PTR [rsp+40]
	sete	bpl
	mov	rdi, QWORD PTR [rsp+48]
	mov	eax, ebp
	mov	rbp, QWORD PTR [rsp+32]
	pop	r15
	pop	r14
	ret	0
?do_out@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHAEAU_Mbstatet@@PEB_W1AEAPEB_WPEAD3AEAPEAD@Z ENDP ; std::codecvt_utf8<wchar_t,1114111,0>::do_out
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\codecvt
;	COMDAT ?do_in@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHAEAU_Mbstatet@@PEBD1AEAPEBDPEA_W3AEAPEA_W@Z
_TEXT	SEGMENT
this$ = 16
_State$ = 24
_First1$ = 32
_Last1$ = 40
_Mid1$ = 48
_First2$ = 56
_Last2$ = 64
_Mid2$ = 72
?do_in@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHAEAU_Mbstatet@@PEBD1AEAPEBDPEA_W3AEAPEA_W@Z PROC ; std::codecvt_utf8<wchar_t,1114111,0>::do_in, COMDAT

; 51   :         _Elem* _First2, _Elem* _Last2, _Elem*& _Mid2) const override {

$LN53:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	r14

; 52   :         // convert bytes [_First1, _Last1) to [_First2, _Last2)
; 53   :         char* _Pstate = reinterpret_cast<char*>(&_State);
; 54   :         _Mid1         = _First1;

	mov	r11, QWORD PTR _Mid1$[rsp]
	mov	rsi, r9

; 55   :         _Mid2         = _First2;

	mov	rbx, QWORD PTR _Mid2$[rsp]
	mov	rbp, r8
	mov	rax, QWORD PTR _First2$[rsp]
	mov	rdi, rdx
	mov	QWORD PTR [r11], r8
	mov	QWORD PTR [rbx], rax

; 56   : 
; 57   :         while (_Mid1 != _Last1 && _Mid2 != _Last2) { // convert a multibyte sequence

	mov	r10, QWORD PTR [r11]
	cmp	r10, r9
	je	$LN3@do_in
	mov	r14, QWORD PTR _Last2$[rsp]
$LL2@do_in:
	cmp	rax, r14
	je	$LN3@do_in

; 58   :             unsigned long _By = static_cast<unsigned char>(*_Mid1);

	movzx	ecx, BYTE PTR [r10]

; 59   :             unsigned long _Ch;
; 60   :             int _Nextra;
; 61   : 
; 62   :             if (_By < 0x80u) {

	cmp	ecx, 128				; 00000080H
	jae	SHORT $LN7@do_in

; 63   :                 _Ch     = _By;

	mov	eax, ecx

; 80   :             }
; 81   : 
; 82   :             if (_Nextra == 0) {
; 83   :                 ++_Mid1;

	lea	rcx, QWORD PTR [r10+1]
	mov	QWORD PTR [r11], rcx
	jmp	$LN5@do_in
$LN7@do_in:

; 64   :                 _Nextra = 0;
; 65   :             } else if (_By < 0xc0u) { // 0x80-0xbf not first byte

	cmp	ecx, 192				; 000000c0H
	jb	$LN30@do_in

; 67   :                 return _Mybase::error;
; 68   :             } else if (_By < 0xe0u) {

	mov	eax, ecx
	cmp	ecx, 224				; 000000e0H
	jae	SHORT $LN11@do_in

; 69   :                 _Ch     = _By & 0x1f;

	and	eax, 31

; 70   :                 _Nextra = 1;

	mov	r9d, 1
	jmp	SHORT $LN17@do_in
$LN11@do_in:

; 71   :             } else if (_By < 0xf0u) {

	cmp	ecx, 240				; 000000f0H
	jae	SHORT $LN13@do_in

; 72   :                 _Ch     = _By & 0x0f;

	and	eax, 15

; 73   :                 _Nextra = 2;

	mov	r9d, 2
	jmp	SHORT $LN17@do_in
$LN13@do_in:

; 74   :             } else if (_By < 0xf8u) {

	cmp	ecx, 248				; 000000f8H
	jae	SHORT $LN15@do_in

; 75   :                 _Ch     = _By & 0x07;

	and	eax, 7

; 76   :                 _Nextra = 3;

	mov	r9d, 3

; 77   :             } else {

	jmp	SHORT $LN17@do_in
$LN15@do_in:

; 78   :                 _Ch     = _By & 0x03;

	and	eax, 3

; 79   :                 _Nextra = _By < 0xfc ? 4 : 5;

	cmp	ecx, 252				; 000000fcH
	sbb	r9d, r9d
	add	r9d, 5
$LN17@do_in:

; 84   :             } else if (_Last1 - _Mid1 < _Nextra + 1) {

	mov	r8, rsi
	lea	edx, DWORD PTR [r9+1]
	sub	r8, r10
	cmp	r8, rdx
	jl	SHORT $LN3@do_in

; 85   :                 break; // not enough input
; 86   :             } else {
; 87   :                 for (++_Mid1; 0 < _Nextra; --_Nextra, ++_Mid1) {

	lea	r8, QWORD PTR [r10+1]
	mov	QWORD PTR [r11], r8
	npad	11
$LL6@do_in:

; 88   :                     if ((_By = static_cast<unsigned char>(*_Mid1)) < 0x80u || 0xc0u <= _By) {

	movzx	edx, BYTE PTR [r8]
	lea	ecx, DWORD PTR [rdx-128]
	cmp	ecx, 63					; 0000003fH
	ja	SHORT $LN32@do_in

; 89   :                         return _Mybase::error; // not continuation byte
; 90   :                     } else {
; 91   :                         _Ch = _Ch << 6 | (_By & 0x3f);

	and	edx, 63					; 0000003fH
	mov	ecx, eax
	shl	ecx, 6
	dec	r9d
	mov	eax, edx
	or	eax, ecx
	inc	r8
	mov	QWORD PTR [r11], r8
	test	r9d, r9d
	jg	SHORT $LL6@do_in
$LN5@do_in:

; 92   :                     }
; 93   :                 }
; 94   :             }
; 95   : 
; 96   :             if (*_Pstate == 0) { // first time, maybe look for and consume header

	cmp	BYTE PTR [rdi], 0
	jne	SHORT $LN24@do_in

; 97   :                 *_Pstate = 1;

	mov	BYTE PTR [rdi], 1
$LN24@do_in:

; 98   : 
; 99   :                 constexpr bool _Consuming = (_Mymode & consume_header) != 0;
; 100  :                 if constexpr (_Consuming) {
; 101  :                     if (_Ch == 0xfeff) { // drop header and retry
; 102  :                         const result _Ans = do_in(_State, _Mid1, _Last1, _Mid1, _First2, _Last2, _Mid2);
; 103  : 
; 104  :                         if (_Ans == _Mybase::partial) { // roll back header determination
; 105  :                             *_Pstate = 0;
; 106  :                             _Mid1    = _First1;
; 107  :                         }
; 108  : 
; 109  :                         return _Ans;
; 110  :                     }
; 111  :                 }
; 112  :             }
; 113  : 
; 114  :             if (_Mymax < _Ch) {

	cmp	eax, 1114111				; 0010ffffH
	ja	SHORT $LN32@do_in

; 115  :                 return _Mybase::error; // code too large
; 116  :             }
; 117  : 
; 118  :             *_Mid2++ = static_cast<_Elem>(_Ch);

	mov	rcx, QWORD PTR [rbx]
	mov	WORD PTR [rcx], ax
	add	QWORD PTR [rbx], 2
	mov	r10, QWORD PTR [r11]
	mov	rax, QWORD PTR [rbx]
	cmp	r10, rsi
	jne	$LL2@do_in
$LN3@do_in:

; 119  :         }
; 120  : 
; 121  :         return _First1 == _Mid1 ? _Mybase::partial : _Mybase::ok;

	xor	eax, eax
	cmp	rbp, r10
	sete	al
$LN1@do_in:

; 122  :     }

	mov	rbx, QWORD PTR [rsp+16]
	mov	rbp, QWORD PTR [rsp+24]
	mov	rsi, QWORD PTR [rsp+32]
	mov	rdi, QWORD PTR [rsp+40]
	pop	r14
	ret	0
$LN30@do_in:

; 66   :                 ++_Mid1;

	lea	rax, QWORD PTR [r10+1]
	mov	QWORD PTR [r11], rax
$LN32@do_in:

; 122  :     }

	mov	eax, 2
	jmp	SHORT $LN1@do_in
?do_in@?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@MEBAHAEAU_Mbstatet@@PEBD1AEAPEBDPEA_W3AEAPEA_W@Z ENDP ; std::codecvt_utf8<wchar_t,1114111,0>::do_in
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\codecvt
;	COMDAT ??1?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@UEAA@XZ PROC	; std::codecvt_utf8<wchar_t,1114111,0>::~codecvt_utf8<wchar_t,1114111,0>, COMDAT

; 47   :     __CLR_OR_THIS_CALL ~codecvt_utf8() noexcept override {}

	lea	rax, OFFSET FLAT:??_7?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@6B@
	mov	QWORD PTR [rcx], rax
	rex_jmp	QWORD PTR __imp_??1?$codecvt@_WDU_Mbstatet@@@std@@MEAA@XZ
??1?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@UEAA@XZ ENDP	; std::codecvt_utf8<wchar_t,1114111,0>::~codecvt_utf8<wchar_t,1114111,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xlocbuf
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xlocbuf
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xlocale
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xlocbuf
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xlocale
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xlocbuf
;	COMDAT ??1?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@UEAA@XZ PROC ; std::wstring_convert<std::codecvt_utf8<wchar_t,1114111,0>,wchar_t,std::allocator<wchar_t>,std::allocator<char> >::~wstring_convert<std::codecvt_utf8<wchar_t,1114111,0>,wchar_t,std::allocator<wchar_t>,std::allocator<char> >, COMDAT

; 346  :     virtual ~wstring_convert() noexcept {}

$LN18:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@6B@
	mov	rbx, rcx
	mov	QWORD PTR [rcx], rax
	add	rcx, 64					; 00000040H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xlocbuf

; 346  :     virtual ~wstring_convert() noexcept {}

	lea	rcx, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xlocale

; 346  :         if (_Ptr) {

	mov	rcx, QWORD PTR [rbx+24]
	test	rcx, rcx
	je	SHORT $LN12@wstring_co

; 347  :             delete _Ptr->_Decref();

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	test	rax, rax
	je	SHORT $LN12@wstring_co
	mov	r8, QWORD PTR [rax]
	mov	edx, 1
	mov	rcx, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xlocbuf

; 346  :     virtual ~wstring_convert() noexcept {}

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xlocale

; 347  :             delete _Ptr->_Decref();

	rex_jmp	QWORD PTR [r8]
$LN12@wstring_co:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xlocbuf

; 346  :     virtual ~wstring_convert() noexcept {}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@UEAA@XZ ENDP ; std::wstring_convert<std::codecvt_utf8<wchar_t,1114111,0>,wchar_t,std::allocator<wchar_t>,std::allocator<char> >::~wstring_convert<std::codecvt_utf8<wchar_t,1114111,0>,wchar_t,std::allocator<wchar_t>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Unchecked_end@?$vector@GV?$allocator@G@std@@@std@@QEAAPEAGXZ
_TEXT	SEGMENT
this$ = 8
?_Unchecked_end@?$vector@GV?$allocator@G@std@@@std@@QEAAPEAGXZ PROC ; std::vector<unsigned short,std::allocator<unsigned short> >::_Unchecked_end, COMDAT

; 1855 :         return _Mypair._Myval2._Mylast;

	mov	rax, QWORD PTR [rcx+8]

; 1856 :     }

	ret	0
?_Unchecked_end@?$vector@GV?$allocator@G@std@@@std@@QEAAPEAGXZ ENDP ; std::vector<unsigned short,std::allocator<unsigned short> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Unchecked_begin@?$vector@GV?$allocator@G@std@@@std@@QEAAPEAGXZ
_TEXT	SEGMENT
this$ = 8
?_Unchecked_begin@?$vector@GV?$allocator@G@std@@@std@@QEAAPEAGXZ PROC ; std::vector<unsigned short,std::allocator<unsigned short> >::_Unchecked_begin, COMDAT

; 1847 :         return _Mypair._Myval2._Myfirst;

	mov	rax, QWORD PTR [rcx]

; 1848 :     }

	ret	0
?_Unchecked_begin@?$vector@GV?$allocator@G@std@@@std@@QEAAPEAGXZ ENDP ; std::vector<unsigned short,std::allocator<unsigned short> >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??1?$vector@UStringEntry@MSBTFile@@V?$allocator@UStringEntry@MSBTFile@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$vector@UStringEntry@MSBTFile@@V?$allocator@UStringEntry@MSBTFile@@@std@@@std@@QEAA@XZ PROC ; std::vector<MSBTFile::StringEntry,std::allocator<MSBTFile::StringEntry> >::~vector<MSBTFile::StringEntry,std::allocator<MSBTFile::StringEntry> >, COMDAT

; 767  :         _Tidy();

	jmp	?_Tidy@?$vector@UStringEntry@MSBTFile@@V?$allocator@UStringEntry@MSBTFile@@@std@@@std@@AEAAXXZ ; std::vector<MSBTFile::StringEntry,std::allocator<MSBTFile::StringEntry> >::_Tidy
??1?$vector@UStringEntry@MSBTFile@@V?$allocator@UStringEntry@MSBTFile@@@std@@@std@@QEAA@XZ ENDP ; std::vector<MSBTFile::StringEntry,std::allocator<MSBTFile::StringEntry> >::~vector<MSBTFile::StringEntry,std::allocator<MSBTFile::StringEntry> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??1?$vector@ULabelEntry@MSBTFile@@V?$allocator@ULabelEntry@MSBTFile@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$vector@ULabelEntry@MSBTFile@@V?$allocator@ULabelEntry@MSBTFile@@@std@@@std@@QEAA@XZ PROC ; std::vector<MSBTFile::LabelEntry,std::allocator<MSBTFile::LabelEntry> >::~vector<MSBTFile::LabelEntry,std::allocator<MSBTFile::LabelEntry> >, COMDAT

; 767  :         _Tidy();

	jmp	?_Tidy@?$vector@ULabelEntry@MSBTFile@@V?$allocator@ULabelEntry@MSBTFile@@@std@@@std@@AEAAXXZ ; std::vector<MSBTFile::LabelEntry,std::allocator<MSBTFile::LabelEntry> >::_Tidy
??1?$vector@ULabelEntry@MSBTFile@@V?$allocator@ULabelEntry@MSBTFile@@@std@@@std@@QEAA@XZ ENDP ; std::vector<MSBTFile::LabelEntry,std::allocator<MSBTFile::LabelEntry> >::~vector<MSBTFile::LabelEntry,std::allocator<MSBTFile::LabelEntry> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
;	COMDAT ??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > > > > >, COMDAT

; 321  :     ~_Hash_vec() {

$LN35:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 312  :         if (_Mypair._Myval2._Myfirst != nullptr) {

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN4@Hash_vec

; 284  :         return static_cast<size_type>(_Mypair._Myval2._Myend - _Mypair._Myval2._Myfirst);

	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -8

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN24@Hash_vec

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN21@Hash_vec

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN24@Hash_vec:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash

; 315  :             _Mypair._Myval2._Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 316  :             _Mypair._Myval2._Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 317  :             _Mypair._Myval2._Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN4@Hash_vec:

; 327  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN21@Hash_vec:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN32@Hash_vec:
??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
;	COMDAT ??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@@std@@QEAA@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > >::~list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > >, COMDAT

; 1045 :     ~list() noexcept {

$LN128:
	mov	QWORD PTR [rsp+32], rsi
	push	r14
	sub	rsp, 32					; 00000020H

; 1501 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

	mov	rdx, QWORD PTR [rcx]

; 1045 :     ~list() noexcept {

	mov	r14, rcx

; 325  :         _Head->_Prev->_Next = nullptr;

	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [rax], 0

; 326  : 
; 327  :         auto _Pnode = _Head->_Next;

	mov	rsi, QWORD PTR [rdx]

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

	test	rsi, rsi
	je	SHORT $LN7@list
	mov	QWORD PTR [rsp+56], rbx
	mov	QWORD PTR [rsp+64], rdi
	npad	2
$LL8@list:

; 329  :             _Pnext = _Pnode->_Next;

	mov	rdi, QWORD PTR [rsi]
	lea	rcx, QWORD PTR [rsi+48]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	lea	rcx, QWORD PTR [rsi+16]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 88					; 00000058H
	mov	rcx, rsi
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

	mov	rsi, rdi
	test	rdi, rdi
	jne	SHORT $LL8@list
	mov	rdi, QWORD PTR [rsp+64]
	mov	rbx, QWORD PTR [rsp+56]
$LN7@list:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [r14]
	mov	edx, 88					; 00000058H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1051 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@@std@@QEAA@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > >::~list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QEAA@XZ PROC ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >, COMDAT

; 767  :         _Tidy();

	jmp	?_Tidy@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Tidy
??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QEAA@XZ ENDP ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT

; 400  :             return __builtin_strlen(_First);

	mov	r8, -1
	npad	9
$LL7@operator:
	inc	r8
	cmp	BYTE PTR [rdx+r8], 0
	jne	SHORT $LL7@operator

; 3292 :         return append(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	jmp	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\codecvt
;	COMDAT ??_G?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@UEAAPEAXI@Z PROC ; std::codecvt_utf8<wchar_t,1114111,0>::`scalar deleting destructor', COMDAT
$LN11:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 47   :     __CLR_OR_THIS_CALL ~codecvt_utf8() noexcept override {}

	lea	rax, OFFSET FLAT:??_7?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@6B@
	mov	ebx, edx
	mov	QWORD PTR [rcx], rax
	mov	rdi, rcx
	call	QWORD PTR __imp_??1?$codecvt@_WDU_Mbstatet@@@std@@MEAA@XZ
	test	bl, 1
	je	SHORT $LN7@scalar
	mov	edx, 64					; 00000040H
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
$LN7@scalar:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_G?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@UEAAPEAXI@Z ENDP ; std::codecvt_utf8<wchar_t,1114111,0>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xlocbuf
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xlocbuf
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xlocale
;	COMDAT ??_G?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@UEAAPEAXI@Z PROC ; std::wstring_convert<std::codecvt_utf8<wchar_t,1114111,0>,wchar_t,std::allocator<wchar_t>,std::allocator<char> >::`scalar deleting destructor', COMDAT
$LN24:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xlocbuf

; 346  :     virtual ~wstring_convert() noexcept {}

	lea	rax, OFFSET FLAT:??_7?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@6B@
	mov	rbx, rcx
	mov	QWORD PTR [rcx], rax
	mov	edi, edx
	add	rcx, 64					; 00000040H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xlocbuf

; 346  :     virtual ~wstring_convert() noexcept {}

	lea	rcx, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xlocale

; 346  :         if (_Ptr) {

	mov	rcx, QWORD PTR [rbx+24]
	test	rcx, rcx
	je	SHORT $LN16@scalar

; 347  :             delete _Ptr->_Decref();

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	test	rax, rax
	je	SHORT $LN16@scalar
	mov	r8, QWORD PTR [rax]
	mov	edx, 1
	mov	rcx, rax
	call	QWORD PTR [r8]
$LN16@scalar:
	test	dil, 1
	je	SHORT $LN18@scalar
	mov	edx, 120				; 00000078H
	mov	rcx, rbx
	call	??3@YAXPEAX_K@Z				; operator delete
$LN18@scalar:
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_G?$wstring_convert@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@2@@std@@UEAAPEAXI@Z ENDP ; std::wstring_convert<std::codecvt_utf8<wchar_t,1114111,0>,wchar_t,std::allocator<wchar_t>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Tidy@?$vector@UStringEntry@MSBTFile@@V?$allocator@UStringEntry@MSBTFile@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@UStringEntry@MSBTFile@@V?$allocator@UStringEntry@MSBTFile@@@std@@@std@@AEAAXXZ PROC ; std::vector<MSBTFile::StringEntry,std::allocator<MSBTFile::StringEntry> >::_Tidy, COMDAT

; 2035 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN53:
	mov	QWORD PTR [rsp+24], rbx
	push	rsi
	sub	rsp, 32					; 00000020H

; 2036 :         auto& _Al         = _Getal();
; 2037 :         auto& _My_data    = _Mypair._Myval2;
; 2038 :         pointer& _Myfirst = _My_data._Myfirst;
; 2039 :         pointer& _Mylast  = _My_data._Mylast;
; 2040 :         pointer& _Myend   = _My_data._Myend;
; 2041 : 
; 2042 :         _My_data._Orphan_all();
; 2043 : 
; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rbx, QWORD PTR [rcx]
	mov	rsi, rcx
	test	rbx, rbx
	je	SHORT $LN2@Tidy
	mov	QWORD PTR [rsp+56], rdi

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	rdi, QWORD PTR [rcx+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1086 :         for (; _First != _Last; ++_First) {

	cmp	rbx, rdi
	je	SHORT $LN6@Tidy
$LL7@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rbx
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1086 :         for (; _First != _Last; ++_First) {

	add	rbx, 40					; 00000028H
	cmp	rbx, rdi
	jne	SHORT $LL7@Tidy
$LN6@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rcx, QWORD PTR [rsi]
	mov	rdx, -3689348814741910323		; cccccccccccccccdH
	mov	rax, QWORD PTR [rsi+16]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rdi, QWORD PTR [rsp+56]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	sub	rax, rcx
	sar	rax, 3
	imul	rax, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [rax+rax*4]
	shl	rdx, 3

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN38@Tidy

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN35@Tidy

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN38@Tidy:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rsi], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rsi+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rsi+16], rax
$LN2@Tidy:

; 2053 :     }

	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rsi
	ret	0
$LN35@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN50@Tidy:
?_Tidy@?$vector@UStringEntry@MSBTFile@@V?$allocator@UStringEntry@MSBTFile@@@std@@@std@@AEAAXXZ ENDP ; std::vector<MSBTFile::StringEntry,std::allocator<MSBTFile::StringEntry> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Tidy@?$vector@ULabelEntry@MSBTFile@@V?$allocator@ULabelEntry@MSBTFile@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@ULabelEntry@MSBTFile@@V?$allocator@ULabelEntry@MSBTFile@@@std@@@std@@AEAAXXZ PROC ; std::vector<MSBTFile::LabelEntry,std::allocator<MSBTFile::LabelEntry> >::_Tidy, COMDAT

; 2035 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN53:
	mov	QWORD PTR [rsp+24], rbx
	push	rsi
	sub	rsp, 32					; 00000020H

; 2036 :         auto& _Al         = _Getal();
; 2037 :         auto& _My_data    = _Mypair._Myval2;
; 2038 :         pointer& _Myfirst = _My_data._Myfirst;
; 2039 :         pointer& _Mylast  = _My_data._Mylast;
; 2040 :         pointer& _Myend   = _My_data._Myend;
; 2041 : 
; 2042 :         _My_data._Orphan_all();
; 2043 : 
; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rbx, QWORD PTR [rcx]
	mov	rsi, rcx
	test	rbx, rbx
	je	SHORT $LN2@Tidy
	mov	QWORD PTR [rsp+56], rdi

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	rdi, QWORD PTR [rcx+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1086 :         for (; _First != _Last; ++_First) {

	cmp	rbx, rdi
	je	SHORT $LN6@Tidy
$LL7@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR [rbx+8]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1086 :         for (; _First != _Last; ++_First) {

	add	rbx, 48					; 00000030H
	cmp	rbx, rdi
	jne	SHORT $LL7@Tidy
$LN6@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rcx, QWORD PTR [rsi]
	mov	rdx, -6148914691236517205		; aaaaaaaaaaaaaaabH
	mov	rax, QWORD PTR [rsi+16]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rdi, QWORD PTR [rsp+56]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	sub	rax, rcx
	sar	rax, 4
	imul	rax, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [rax+rax*2]
	shl	rdx, 4

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN38@Tidy

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN35@Tidy

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN38@Tidy:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rsi], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rsi+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rsi+16], rax
$LN2@Tidy:

; 2053 :     }

	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rsi
	ret	0
$LN35@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN50@Tidy:
?_Tidy@?$vector@ULabelEntry@MSBTFile@@V?$allocator@ULabelEntry@MSBTFile@@@std@@@std@@AEAAXXZ ENDP ; std::vector<MSBTFile::LabelEntry,std::allocator<MSBTFile::LabelEntry> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
;	COMDAT ?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ PROC ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > > > > >::_Tidy, COMDAT

; 311  :     void _Tidy() noexcept {

$LN32:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 312  :         if (_Mypair._Myval2._Myfirst != nullptr) {

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN2@Tidy

; 284  :         return static_cast<size_type>(_Mypair._Myval2._Myend - _Mypair._Myval2._Myfirst);

	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -8

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN22@Tidy

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN19@Tidy

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN22@Tidy:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash

; 315  :             _Mypair._Myval2._Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 316  :             _Mypair._Myval2._Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 317  :             _Mypair._Myval2._Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN2@Tidy:

; 319  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN19@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN29@Tidy:
?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ ENDP ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > > > > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
;	COMDAT ?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@@std@@AEAAXXZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > >::_Tidy, COMDAT

; 1497 :     void _Tidy() noexcept {

$LN125:
	mov	QWORD PTR [rsp+32], rsi
	push	r14
	sub	rsp, 32					; 00000020H

; 1498 :         auto& _Al      = _Getal();
; 1499 :         auto& _My_data = _Mypair._Myval2;
; 1500 :         _My_data._Orphan_all();
; 1501 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

	mov	rdx, QWORD PTR [rcx]
	mov	r14, rcx

; 325  :         _Head->_Prev->_Next = nullptr;

	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [rax], 0

; 326  : 
; 327  :         auto _Pnode = _Head->_Next;

	mov	rsi, QWORD PTR [rdx]

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

	test	rsi, rsi
	je	SHORT $LN5@Tidy
	mov	QWORD PTR [rsp+56], rbx
	mov	QWORD PTR [rsp+64], rdi
	npad	2
$LL6@Tidy:

; 329  :             _Pnext = _Pnode->_Next;

	mov	rdi, QWORD PTR [rsi]
	lea	rcx, QWORD PTR [rsi+48]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	lea	rcx, QWORD PTR [rsi+16]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 88					; 00000058H
	mov	rcx, rsi
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

	mov	rsi, rdi
	test	rdi, rdi
	jne	SHORT $LL6@Tidy
	mov	rdi, QWORD PTR [rsp+64]
	mov	rbx, QWORD PTR [rsp+56]
$LN5@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [r14]
	mov	edx, 88					; 00000058H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1503 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@@std@@AEAAXXZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Tidy@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@AEAAXXZ PROC ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Tidy, COMDAT

; 2035 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN49:
	mov	QWORD PTR [rsp+24], rbx
	push	rsi
	sub	rsp, 32					; 00000020H

; 2036 :         auto& _Al         = _Getal();
; 2037 :         auto& _My_data    = _Mypair._Myval2;
; 2038 :         pointer& _Myfirst = _My_data._Myfirst;
; 2039 :         pointer& _Mylast  = _My_data._Mylast;
; 2040 :         pointer& _Myend   = _My_data._Myend;
; 2041 : 
; 2042 :         _My_data._Orphan_all();
; 2043 : 
; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rbx, QWORD PTR [rcx]
	mov	rsi, rcx
	test	rbx, rbx
	je	SHORT $LN2@Tidy
	mov	QWORD PTR [rsp+56], rdi

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	rdi, QWORD PTR [rcx+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1086 :         for (; _First != _Last; ++_First) {

	cmp	rbx, rdi
	je	SHORT $LN6@Tidy
$LL7@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	mov	rcx, rbx
	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1086 :         for (; _First != _Last; ++_First) {

	add	rbx, 24
	cmp	rbx, rdi
	jne	SHORT $LL7@Tidy
$LN6@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rcx, QWORD PTR [rsi]
	mov	rdx, -6148914691236517205		; aaaaaaaaaaaaaaabH
	mov	rax, QWORD PTR [rsi+16]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rdi, QWORD PTR [rsp+56]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	sub	rax, rcx
	sar	rax, 3
	imul	rax, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [rax+rax*2]
	shl	rdx, 3

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN34@Tidy

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN31@Tidy

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN34@Tidy:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rsi], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rsi+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rsi+16], rax
$LN2@Tidy:

; 2053 :     }

	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rsi
	ret	0
$LN31@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN46@Tidy:
?_Tidy@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@AEAAXXZ ENDP ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Getal@?$vector@UStringEntry@MSBTFile@@V?$allocator@UStringEntry@MSBTFile@@@std@@@std@@AEAAAEAV?$allocator@UStringEntry@MSBTFile@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@UStringEntry@MSBTFile@@V?$allocator@UStringEntry@MSBTFile@@@std@@@std@@AEAAAEAV?$allocator@UStringEntry@MSBTFile@@@2@XZ PROC ; std::vector<MSBTFile::StringEntry,std::allocator<MSBTFile::StringEntry> >::_Getal, COMDAT

; 2181 :         return _Mypair._Get_first();

	mov	rax, rcx

; 2182 :     }

	ret	0
?_Getal@?$vector@UStringEntry@MSBTFile@@V?$allocator@UStringEntry@MSBTFile@@@std@@@std@@AEAAAEAV?$allocator@UStringEntry@MSBTFile@@@2@XZ ENDP ; std::vector<MSBTFile::StringEntry,std::allocator<MSBTFile::StringEntry> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$allocator@UStringEntry@MSBTFile@@@std@@QEAAXQEAUStringEntry@MSBTFile@@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@UStringEntry@MSBTFile@@@std@@QEAAXQEAUStringEntry@MSBTFile@@_K@Z PROC ; std::allocator<MSBTFile::StringEntry>::deallocate, COMDAT

; 966  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN23:
	sub	rsp, 40					; 00000028H
	mov	rax, rdx

; 967  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");
; 968  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [r8+r8*4]
	shl	rdx, 3

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN17@deallocate

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rax-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN14@deallocate

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rax, rcx
$LN17@deallocate:

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, rax

; 970  :     }

	add	rsp, 40					; 00000028H

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN14@deallocate:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN20@deallocate:
?deallocate@?$allocator@UStringEntry@MSBTFile@@@std@@QEAAXQEAUStringEntry@MSBTFile@@_K@Z ENDP ; std::allocator<MSBTFile::StringEntry>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Getal@?$vector@ULabelEntry@MSBTFile@@V?$allocator@ULabelEntry@MSBTFile@@@std@@@std@@AEAAAEAV?$allocator@ULabelEntry@MSBTFile@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@ULabelEntry@MSBTFile@@V?$allocator@ULabelEntry@MSBTFile@@@std@@@std@@AEAAAEAV?$allocator@ULabelEntry@MSBTFile@@@2@XZ PROC ; std::vector<MSBTFile::LabelEntry,std::allocator<MSBTFile::LabelEntry> >::_Getal, COMDAT

; 2181 :         return _Mypair._Get_first();

	mov	rax, rcx

; 2182 :     }

	ret	0
?_Getal@?$vector@ULabelEntry@MSBTFile@@V?$allocator@ULabelEntry@MSBTFile@@@std@@@std@@AEAAAEAV?$allocator@ULabelEntry@MSBTFile@@@2@XZ ENDP ; std::vector<MSBTFile::LabelEntry,std::allocator<MSBTFile::LabelEntry> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$allocator@ULabelEntry@MSBTFile@@@std@@QEAAXQEAULabelEntry@MSBTFile@@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@ULabelEntry@MSBTFile@@@std@@QEAAXQEAULabelEntry@MSBTFile@@_K@Z PROC ; std::allocator<MSBTFile::LabelEntry>::deallocate, COMDAT

; 966  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN23:
	sub	rsp, 40					; 00000028H
	mov	rax, rdx

; 967  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");
; 968  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [r8+r8*2]
	shl	rdx, 4

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN17@deallocate

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rax-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN14@deallocate

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rax, rcx
$LN17@deallocate:

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, rax

; 970  :     }

	add	rsp, 40					; 00000028H

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN14@deallocate:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN20@deallocate:
?deallocate@?$allocator@ULabelEntry@MSBTFile@@@std@@QEAAXQEAULabelEntry@MSBTFile@@_K@Z ENDP ; std::allocator<MSBTFile::LabelEntry>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > > > > >,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > > > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
;	COMDAT ?capacity@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?capacity@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ PROC ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > > > > >::capacity, COMDAT

; 282  :         // This implementation never has capacity() differ from size(), but the previous implementation could.
; 283  :         // We need to handle that situation gracefully since we may link to old code (See GH-2774).
; 284  :         return static_cast<size_type>(_Mypair._Myval2._Myend - _Mypair._Myval2._Myfirst);

	mov	rax, QWORD PTR [rcx+16]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 3

; 285  :     }

	ret	0
?capacity@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ ENDP ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > > > > >::capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@2@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@2@_K@Z PROC ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > > > >::deallocate, COMDAT

; 966  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN23:
	sub	rsp, 40					; 00000028H
	mov	rax, rdx

; 967  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");
; 968  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [r8*8]

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN17@deallocate

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rax-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN14@deallocate

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rax, rcx
$LN17@deallocate:

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, rax

; 970  :     }

	add	rsp, 40					; 00000028H

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN14@deallocate:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN20@deallocate:
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@2@_K@Z ENDP ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > > > >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
;	COMDAT ?_Getal@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@2@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > >::_Getal, COMDAT

; 1848 :         return _Mypair._Get_first();

	mov	rax, rcx

; 1849 :     }

	ret	0
?_Getal@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@2@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Getal@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ PROC ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Getal, COMDAT

; 2181 :         return _Mypair._Get_first();

	mov	rax, rcx

; 2182 :     }

	ret	0
?_Getal@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ENDP ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAAXQEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAAXQEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@_K@Z PROC ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::deallocate, COMDAT

; 966  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN23:
	sub	rsp, 40					; 00000028H
	mov	rax, rdx

; 967  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");
; 968  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [r8+r8*2]
	shl	rdx, 3

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN17@deallocate

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rax-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN14@deallocate

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rax, rcx
$LN17@deallocate:

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, rax

; 970  :     }

	add	rsp, 40					; 00000028H

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN14@deallocate:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN20@deallocate:
?deallocate@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAAXQEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@_K@Z ENDP ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UStringEntry@MSBTFile@@@std@@V?$_Vector_val@U?$_Simple_types@UStringEntry@MSBTFile@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UStringEntry@MSBTFile@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@UStringEntry@MSBTFile@@@std@@V?$_Vector_val@U?$_Simple_types@UStringEntry@MSBTFile@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UStringEntry@MSBTFile@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<MSBTFile::StringEntry>,std::_Vector_val<std::_Simple_types<MSBTFile::StringEntry> >,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@UStringEntry@MSBTFile@@@std@@V?$_Vector_val@U?$_Simple_types@UStringEntry@MSBTFile@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UStringEntry@MSBTFile@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<MSBTFile::StringEntry>,std::_Vector_val<std::_Simple_types<MSBTFile::StringEntry> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@ULabelEntry@MSBTFile@@@std@@V?$_Vector_val@U?$_Simple_types@ULabelEntry@MSBTFile@@@std@@@2@$00@std@@QEAAAEAV?$allocator@ULabelEntry@MSBTFile@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@ULabelEntry@MSBTFile@@@std@@V?$_Vector_val@U?$_Simple_types@ULabelEntry@MSBTFile@@@std@@@2@$00@std@@QEAAAEAV?$allocator@ULabelEntry@MSBTFile@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<MSBTFile::LabelEntry>,std::_Vector_val<std::_Simple_types<MSBTFile::LabelEntry> >,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@ULabelEntry@MSBTFile@@@std@@V?$_Vector_val@U?$_Simple_types@ULabelEntry@MSBTFile@@@std@@@2@$00@std@@QEAAAEAV?$allocator@ULabelEntry@MSBTFile@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<MSBTFile::LabelEntry>,std::_Vector_val<std::_Simple_types<MSBTFile::LabelEntry> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,void *> >,std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > >,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,void *> >,std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::_Vector_val<std::_Simple_types<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::_Vector_val<std::_Simple_types<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Adl_verify_range@PEBDPEBD@std@@YAXAEBQEBD0@Z
_TEXT	SEGMENT
_First$dead$ = 8
_Last$dead$ = 16
??$_Adl_verify_range@PEBDPEBD@std@@YAXAEBQEBD0@Z PROC	; std::_Adl_verify_range<char const *,char const *>, COMDAT

; 1133 :     // check that [_First, _Last) forms an iterator range
; 1134 :     if constexpr (_Range_verifiable_v<_Iter, _Sentinel>) {
; 1135 :         _Verify_range(_First, _Last);
; 1136 :     }
; 1137 : }

	ret	0
??$_Adl_verify_range@PEBDPEBD@std@@YAXAEBQEBD0@Z ENDP	; std::_Adl_verify_range<char const *,char const *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xlocale
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\codecvt
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xlocale
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xlocale
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xlocale
;	COMDAT ??$_Codecvt_do_length@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@DU_Mbstatet@@@std@@YAHAEBV?$codecvt_utf8@_W$0BAPPPP@$0A@@0@AEAU_Mbstatet@@PEBD2_K@Z
_TEXT	SEGMENT
_Ch$1 = 0
__$ArrayPad$ = 8
_Cvt$dead$ = 48
_State$ = 56
_First1$ = 64
_Last1$ = 72
_Count$ = 80
??$_Codecvt_do_length@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@DU_Mbstatet@@@std@@YAHAEBV?$codecvt_utf8@_W$0BAPPPP@$0A@@0@AEAU_Mbstatet@@PEBD2_K@Z PROC ; std::_Codecvt_do_length<std::codecvt_utf8<wchar_t,1114111,0>,char,_Mbstatet>, COMDAT

; 804  :     const _CvtTy& _Cvt, _Statype& _State, const _Byte* _First1, const _Byte* _Last1, size_t _Count) {

$LN75:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+24], rbp
	push	rsi
	push	rdi
	push	r14
	sub	rsp, 16
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 805  :     // return p - _First1, for the largest value p in [_First1, _Last1] such that _Cvt will successfully convert
; 806  :     // [_First1, p) to at most _Count wide characters
; 807  : 
; 808  :     _STL_DISABLE_DEPRECATED_WARNING
; 809  :     using _Elem = typename _CvtTy::intern_type;
; 810  :     _STL_RESTORE_DEPRECATED_WARNING
; 811  : 
; 812  :     _Adl_verify_range(_First1, _Last1);
; 813  :     const auto _Old_first1 = _First1;
; 814  : 
; 815  :     while (_Count > 0 && _First1 != _Last1) { // convert another wide character

	mov	rbp, QWORD PTR _Count$[rsp]
	mov	rbx, r9
	mov	rsi, r8
	mov	rdi, rdx
	mov	r14, r8
	test	rbp, rbp
	je	$LN56@Codecvt_do
	npad	5
$LL2@Codecvt_do:
	cmp	rsi, rbx
	je	$LN56@Codecvt_do
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\codecvt

; 54   :         _Mid1         = _First1;

	mov	r9, rsi

; 55   :         _Mid2         = _First2;

	lea	r11, QWORD PTR _Ch$1[rsp]
$LL9@Codecvt_do:

; 56   : 
; 57   :         while (_Mid1 != _Last1 && _Mid2 != _Last2) { // convert a multibyte sequence

	lea	rax, QWORD PTR _Ch$1[rsp+2]
	cmp	r11, rax
	je	$LN10@Codecvt_do

; 58   :             unsigned long _By = static_cast<unsigned char>(*_Mid1);

	movzx	ecx, BYTE PTR [r9]

; 59   :             unsigned long _Ch;
; 60   :             int _Nextra;
; 61   : 
; 62   :             if (_By < 0x80u) {

	cmp	ecx, 128				; 00000080H
	jae	SHORT $LN14@Codecvt_do

; 63   :                 _Ch     = _By;

	mov	eax, ecx

; 80   :             }
; 81   : 
; 82   :             if (_Nextra == 0) {
; 83   :                 ++_Mid1;

	inc	r9
	jmp	$LN12@Codecvt_do
$LN14@Codecvt_do:

; 64   :                 _Nextra = 0;
; 65   :             } else if (_By < 0xc0u) { // 0x80-0xbf not first byte

	cmp	ecx, 192				; 000000c0H
	jb	$LN56@Codecvt_do

; 66   :                 ++_Mid1;
; 67   :                 return _Mybase::error;
; 68   :             } else if (_By < 0xe0u) {

	mov	eax, ecx
	cmp	ecx, 224				; 000000e0H
	jae	SHORT $LN18@Codecvt_do

; 69   :                 _Ch     = _By & 0x1f;

	and	eax, 31

; 70   :                 _Nextra = 1;

	mov	r10d, 1
	jmp	SHORT $LN24@Codecvt_do
$LN18@Codecvt_do:

; 71   :             } else if (_By < 0xf0u) {

	cmp	ecx, 240				; 000000f0H
	jae	SHORT $LN20@Codecvt_do

; 72   :                 _Ch     = _By & 0x0f;

	and	eax, 15

; 73   :                 _Nextra = 2;

	mov	r10d, 2
	jmp	SHORT $LN24@Codecvt_do
$LN20@Codecvt_do:

; 74   :             } else if (_By < 0xf8u) {

	cmp	ecx, 248				; 000000f8H
	jae	SHORT $LN22@Codecvt_do

; 75   :                 _Ch     = _By & 0x07;

	and	eax, 7

; 76   :                 _Nextra = 3;

	mov	r10d, 3

; 77   :             } else {

	jmp	SHORT $LN24@Codecvt_do
$LN22@Codecvt_do:

; 78   :                 _Ch     = _By & 0x03;

	and	eax, 3

; 79   :                 _Nextra = _By < 0xfc ? 4 : 5;

	cmp	ecx, 252				; 000000fcH
	sbb	r10d, r10d
	add	r10d, 5
$LN24@Codecvt_do:

; 84   :             } else if (_Last1 - _Mid1 < _Nextra + 1) {

	mov	r8, rbx
	lea	edx, DWORD PTR [r10+1]
	sub	r8, r9
	cmp	r8, rdx
	jl	SHORT $LN10@Codecvt_do

; 85   :                 break; // not enough input
; 86   :             } else {
; 87   :                 for (++_Mid1; 0 < _Nextra; --_Nextra, ++_Mid1) {

	inc	r9
	npad	3
$LL13@Codecvt_do:

; 88   :                     if ((_By = static_cast<unsigned char>(*_Mid1)) < 0x80u || 0xc0u <= _By) {

	movzx	edx, BYTE PTR [r9]
	lea	ecx, DWORD PTR [rdx-128]
	cmp	ecx, 63					; 0000003fH
	ja	SHORT $LN56@Codecvt_do

; 89   :                         return _Mybase::error; // not continuation byte
; 90   :                     } else {
; 91   :                         _Ch = _Ch << 6 | (_By & 0x3f);

	mov	ecx, eax
	and	edx, 63					; 0000003fH
	shl	ecx, 6
	mov	eax, edx
	or	eax, ecx
	dec	r10d
	inc	r9
	test	r10d, r10d
	jg	SHORT $LL13@Codecvt_do
$LN12@Codecvt_do:

; 92   :                     }
; 93   :                 }
; 94   :             }
; 95   : 
; 96   :             if (*_Pstate == 0) { // first time, maybe look for and consume header

	cmp	BYTE PTR [rdi], 0
	jne	SHORT $LN31@Codecvt_do

; 97   :                 *_Pstate = 1;

	mov	BYTE PTR [rdi], 1
$LN31@Codecvt_do:

; 98   : 
; 99   :                 constexpr bool _Consuming = (_Mymode & consume_header) != 0;
; 100  :                 if constexpr (_Consuming) {
; 101  :                     if (_Ch == 0xfeff) { // drop header and retry
; 102  :                         const result _Ans = do_in(_State, _Mid1, _Last1, _Mid1, _First2, _Last2, _Mid2);
; 103  : 
; 104  :                         if (_Ans == _Mybase::partial) { // roll back header determination
; 105  :                             *_Pstate = 0;
; 106  :                             _Mid1    = _First1;
; 107  :                         }
; 108  : 
; 109  :                         return _Ans;
; 110  :                     }
; 111  :                 }
; 112  :             }
; 113  : 
; 114  :             if (_Mymax < _Ch) {

	cmp	eax, 1114111				; 0010ffffH
	ja	SHORT $LN56@Codecvt_do

; 115  :                 return _Mybase::error; // code too large
; 116  :             }
; 117  : 
; 118  :             *_Mid2++ = static_cast<_Elem>(_Ch);

	add	r11, 2
	cmp	r9, rbx
	jne	$LL9@Codecvt_do
$LN10@Codecvt_do:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xlocale

; 826  :         if (_Result != codecvt_base::ok) {

	cmp	rsi, r9
	je	SHORT $LN56@Codecvt_do

; 827  :             if (_Result == codecvt_base::noconv) {
; 828  :                 _First1 += (_STD min)(static_cast<size_t>(_Last1 - _First1), _Count);
; 829  :             }
; 830  : 
; 831  :             break; // error, noconv, or partial
; 832  :         }
; 833  : 
; 834  :         if (_Mid2 == &_Ch + 1) {

	lea	rax, QWORD PTR _Ch$1[rsp+2]
	cmp	r11, rax
	jne	SHORT $LN6@Codecvt_do

; 835  :             --_Count; // do_in converted an output character

	dec	rbp
$LN6@Codecvt_do:

; 836  :         }
; 837  : 
; 838  :         _First1 = _Mid1;

	mov	rsi, r9
	test	rbp, rbp
	jne	$LL2@Codecvt_do
$LN56@Codecvt_do:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 70   :     return _Right < _Left ? _Right : _Left;

	mov	eax, 2147483647				; 7fffffffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xlocale

; 841  :     return static_cast<int>((_STD min)(_First1 - _Old_first1, ptrdiff_t{INT_MAX}));

	sub	rsi, r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 70   :     return _Right < _Left ? _Right : _Left;

	cmp	rsi, rax
	cmovg	esi, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xlocale

; 841  :     return static_cast<int>((_STD min)(_First1 - _Old_first1, ptrdiff_t{INT_MAX}));

	mov	eax, esi

; 842  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+64]
	add	rsp, 16
	pop	r14
	pop	rdi
	pop	rsi
	ret	0
??$_Codecvt_do_length@V?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@DU_Mbstatet@@@std@@YAHAEBV?$codecvt_utf8@_W$0BAPPPP@$0A@@0@AEAU_Mbstatet@@PEBD2_K@Z ENDP ; std::_Codecvt_do_length<std::codecvt_utf8<wchar_t,1114111,0>,char,_Mbstatet>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UStringEntry@MSBTFile@@@std@@@std@@YAXPEAUStringEntry@MSBTFile@@QEAU12@AEAV?$allocator@UStringEntry@MSBTFile@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Al$dead$ = 64
??$_Destroy_range@V?$allocator@UStringEntry@MSBTFile@@@std@@@std@@YAXPEAUStringEntry@MSBTFile@@QEAU12@AEAV?$allocator@UStringEntry@MSBTFile@@@0@@Z PROC ; std::_Destroy_range<std::allocator<MSBTFile::StringEntry> >, COMDAT

; 1082 : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN27:

; 1086 :         for (; _First != _Last; ++_First) {

	cmp	rcx, rdx
	je	SHORT $LN24@Destroy_ra
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1082 : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

	mov	rdi, rdx
	mov	rbx, rcx
$LL4@Destroy_ra:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rbx
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1086 :         for (; _First != _Last; ++_First) {

	add	rbx, 40					; 00000028H
	cmp	rbx, rdi
	jne	SHORT $LL4@Destroy_ra

; 1087 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1088 :         }
; 1089 :     }
; 1090 : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
$LN24@Destroy_ra:
	ret	0
??$_Destroy_range@V?$allocator@UStringEntry@MSBTFile@@@std@@@std@@YAXPEAUStringEntry@MSBTFile@@QEAU12@AEAV?$allocator@UStringEntry@MSBTFile@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<MSBTFile::StringEntry> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@ULabelEntry@MSBTFile@@@std@@@std@@YAXPEAULabelEntry@MSBTFile@@QEAU12@AEAV?$allocator@ULabelEntry@MSBTFile@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Al$dead$ = 64
??$_Destroy_range@V?$allocator@ULabelEntry@MSBTFile@@@std@@@std@@YAXPEAULabelEntry@MSBTFile@@QEAU12@AEAV?$allocator@ULabelEntry@MSBTFile@@@0@@Z PROC ; std::_Destroy_range<std::allocator<MSBTFile::LabelEntry> >, COMDAT

; 1082 : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN27:

; 1086 :         for (; _First != _Last; ++_First) {

	cmp	rcx, rdx
	je	SHORT $LN24@Destroy_ra
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1082 : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

	mov	rdi, rdx
	mov	rbx, rcx
$LL4@Destroy_ra:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR [rbx+8]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1086 :         for (; _First != _Last; ++_First) {

	add	rbx, 48					; 00000030H
	cmp	rbx, rdi
	jne	SHORT $LL4@Destroy_ra

; 1087 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1088 :         }
; 1089 :     }
; 1090 : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
$LN24@Destroy_ra:
	ret	0
??$_Destroy_range@V?$allocator@ULabelEntry@MSBTFile@@@std@@@std@@YAXPEAULabelEntry@MSBTFile@@QEAU12@AEAV?$allocator@ULabelEntry@MSBTFile@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<MSBTFile::LabelEntry> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Destroy_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@std@@PEAV12@@std@@YAXPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@0@QEAV10@@Z
_TEXT	SEGMENT
_First$dead$ = 8
_Last$dead$ = 16
??$_Destroy_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@std@@PEAV12@@std@@YAXPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@0@QEAV10@@Z PROC ; std::_Destroy_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > > > *>, COMDAT

; 1094 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1095 :     if constexpr (!is_trivially_destructible_v<_Iter_value_t<_NoThrowFwdIt>>) {
; 1096 :         for (; _First != _Last; ++_First) {
; 1097 :             _Destroy_in_place(*_First);
; 1098 :         }
; 1099 :     }
; 1100 : }

	ret	0
??$_Destroy_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@std@@PEAV12@@std@@YAXPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@@std@@@0@QEAV10@@Z ENDP ; std::_Destroy_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> > > > *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
;	COMDAT ??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@1@PEAU01@@Z
_TEXT	SEGMENT
_Al$dead$ = 48
_Head$ = 56
??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@1@PEAU01@@Z PROC ; std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,void *> > >, COMDAT

; 324  :         _Alnode& _Al, _Nodeptr _Head) noexcept { // free a list starting at _First and terminated at nullptr

$LN79:
	push	rsi
	sub	rsp, 32					; 00000020H

; 325  :         _Head->_Prev->_Next = nullptr;

	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [rax], 0

; 326  : 
; 327  :         auto _Pnode = _Head->_Next;

	mov	rsi, QWORD PTR [rdx]

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

	test	rsi, rsi
	je	SHORT $LN3@Free_non_h
	mov	QWORD PTR [rsp+48], rbx
	mov	QWORD PTR [rsp+64], rdi
$LL4@Free_non_h:

; 329  :             _Pnext = _Pnode->_Next;

	mov	rdi, QWORD PTR [rsi]
	lea	rcx, QWORD PTR [rsi+48]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	lea	rcx, QWORD PTR [rsi+16]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 88					; 00000058H
	mov	rcx, rsi
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

	mov	rsi, rdi
	test	rdi, rdi
	jne	SHORT $LL4@Free_non_h
	mov	rdi, QWORD PTR [rsp+64]
	mov	rbx, QWORD PTR [rsp+48]
$LN3@Free_non_h:

; 330  :             _Freenode(_Al, _Pnode);
; 331  :         }
; 332  :     }

	add	rsp, 32					; 00000020H
	pop	rsi
	ret	0
??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@1@PEAU01@@Z ENDP ; std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
;	COMDAT ??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@1@PEAU01@@Z
_TEXT	SEGMENT
_Al$dead$ = 8
_Ptr$ = 16
??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@1@PEAU01@@Z PROC ; std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,void *>::_Freenode0<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,void *> > >, COMDAT

; 308  :     static void _Freenode0(_Alnode& _Al, _Nodeptr _Ptr) noexcept {

	mov	rcx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 88					; 00000058H
	jmp	??3@YAXPEAX_K@Z				; operator delete
??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@1@PEAU01@@Z ENDP ; std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,void *>::_Freenode0<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@YAXPEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@QEAV10@AEAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Al$dead$ = 64
??$_Destroy_range@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@YAXPEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@QEAV10@AEAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >, COMDAT

; 1082 : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN23:

; 1086 :         for (; _First != _Last; ++_First) {

	cmp	rcx, rdx
	je	SHORT $LN20@Destroy_ra
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1082 : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

	mov	rdi, rdx
	mov	rbx, rcx
$LL4@Destroy_ra:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	mov	rcx, rbx
	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1086 :         for (; _First != _Last; ++_First) {

	add	rbx, 24
	cmp	rbx, rdi
	jne	SHORT $LL4@Destroy_ra

; 1087 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1088 :         }
; 1089 :     }
; 1090 : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
$LN20@Destroy_ra:
	ret	0
??$_Destroy_range@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@YAXPEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@QEAV10@AEAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@2@QEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@2@_K@Z
_TEXT	SEGMENT
_Al$dead$ = 8
_Ptr$ = 16
_Count$dead$ = 24
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@2@QEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,void *> > >::deallocate, COMDAT

; 701  :     static _CONSTEXPR20 void deallocate(_Alloc& _Al, const pointer _Ptr, const size_type _Count) {

	mov	rcx, rdx

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 88					; 00000058H
	jmp	??3@YAXPEAX_K@Z				; operator delete
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@2@QEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@2@_K@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ptr$ = 16
_Count$dead$ = 24
?deallocate@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@2@_K@Z PROC ; std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,void *> >::deallocate, COMDAT

; 966  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

	mov	rcx, rdx

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 88					; 00000058H
	jmp	??3@YAXPEAX_K@Z				; operator delete
?deallocate@?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@2@_K@Z ENDP ; std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,void *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Unfancy@UStringEntry@MSBTFile@@@std@@YAPEAUStringEntry@MSBTFile@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@UStringEntry@MSBTFile@@@std@@YAPEAUStringEntry@MSBTFile@@PEAU12@@Z PROC ; std::_Unfancy<MSBTFile::StringEntry>, COMDAT

; 37   :     return _Ptr;

	mov	rax, rcx

; 38   : }

	ret	0
??$_Unfancy@UStringEntry@MSBTFile@@@std@@YAPEAUStringEntry@MSBTFile@@PEAU12@@Z ENDP ; std::_Unfancy<MSBTFile::StringEntry>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy@UStringEntry@MSBTFile@@@?$_Default_allocator_traits@V?$allocator@UStringEntry@MSBTFile@@@std@@@std@@SAXAEAV?$allocator@UStringEntry@MSBTFile@@@1@QEAUStringEntry@MSBTFile@@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$ = 16
??$destroy@UStringEntry@MSBTFile@@@?$_Default_allocator_traits@V?$allocator@UStringEntry@MSBTFile@@@std@@@std@@SAXAEAV?$allocator@UStringEntry@MSBTFile@@@1@QEAUStringEntry@MSBTFile@@@Z PROC ; std::_Default_allocator_traits<std::allocator<MSBTFile::StringEntry> >::destroy<MSBTFile::StringEntry>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rdx
	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??$destroy@UStringEntry@MSBTFile@@@?$_Default_allocator_traits@V?$allocator@UStringEntry@MSBTFile@@@std@@@std@@SAXAEAV?$allocator@UStringEntry@MSBTFile@@@1@QEAUStringEntry@MSBTFile@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<MSBTFile::StringEntry> >::destroy<MSBTFile::StringEntry>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Unfancy@ULabelEntry@MSBTFile@@@std@@YAPEAULabelEntry@MSBTFile@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@ULabelEntry@MSBTFile@@@std@@YAPEAULabelEntry@MSBTFile@@PEAU12@@Z PROC ; std::_Unfancy<MSBTFile::LabelEntry>, COMDAT

; 37   :     return _Ptr;

	mov	rax, rcx

; 38   : }

	ret	0
??$_Unfancy@ULabelEntry@MSBTFile@@@std@@YAPEAULabelEntry@MSBTFile@@PEAU12@@Z ENDP ; std::_Unfancy<MSBTFile::LabelEntry>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy@ULabelEntry@MSBTFile@@@?$_Default_allocator_traits@V?$allocator@ULabelEntry@MSBTFile@@@std@@@std@@SAXAEAV?$allocator@ULabelEntry@MSBTFile@@@1@QEAULabelEntry@MSBTFile@@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$ = 16
??$destroy@ULabelEntry@MSBTFile@@@?$_Default_allocator_traits@V?$allocator@ULabelEntry@MSBTFile@@@std@@@std@@SAXAEAV?$allocator@ULabelEntry@MSBTFile@@@1@QEAULabelEntry@MSBTFile@@@Z PROC ; std::_Default_allocator_traits<std::allocator<MSBTFile::LabelEntry> >::destroy<MSBTFile::LabelEntry>, COMDAT

; 724  :     static _CONSTEXPR20 void destroy(_Alloc&, _Uty* const _Ptr) {

	lea	rcx, QWORD PTR [rdx+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??$destroy@ULabelEntry@MSBTFile@@@?$_Default_allocator_traits@V?$allocator@ULabelEntry@MSBTFile@@@std@@@std@@SAXAEAV?$allocator@ULabelEntry@MSBTFile@@@1@QEAULabelEntry@MSBTFile@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<MSBTFile::LabelEntry> >::destroy<MSBTFile::LabelEntry>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
;	COMDAT ??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@1@PEAU01@@Z
_TEXT	SEGMENT
_Al$dead$ = 48
_Ptr$ = 56
??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@1@PEAU01@@Z PROC ; std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,void *>::_Freenode<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,void *> > >, COMDAT

; 317  :     static void _Freenode(_Alnode& _Al, _Nodeptr _Ptr) noexcept { // destroy all members in _Ptr and deallocate with _Al

$LN68:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	lea	rcx, QWORD PTR [rdx+48]
	mov	rdi, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	lea	rcx, QWORD PTR [rdi+16]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 88					; 00000058H
	mov	rcx, rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 320  :     }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@1@PEAU01@@Z ENDP ; std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,void *>::_Freenode<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Destroy_in_place@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@0@@Z
_TEXT	SEGMENT
_Obj$dead$ = 8
??$_Destroy_in_place@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@0@@Z PROC ; std::_Destroy_in_place<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,void *> *>, COMDAT

; 305  :     if constexpr (is_array_v<_Ty>) {
; 306  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 307  :     } else {
; 308  :         _Obj.~_Ty();
; 309  :     }
; 310  : }

	ret	0
??$_Destroy_in_place@PEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@0@@Z ENDP ; std::_Destroy_in_place<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Unfancy@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAPEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PEAV10@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAPEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PEAV10@@Z PROC ; std::_Unfancy<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT

; 37   :     return _Ptr;

	mov	rax, rcx

; 38   : }

	ret	0
??$_Unfancy@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAPEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PEAV10@@Z ENDP ; std::_Unfancy<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@QEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$ = 16
??$destroy@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@QEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::destroy<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	mov	rcx, rdx
	jmp	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
??$destroy@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@QEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::destroy<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@0@AEAU10@@Z PROC ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> >, COMDAT

; 1607 :     return __builtin_addressof(_Val);

	mov	rax, rcx

; 1608 : }

	ret	0
??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@0@AEAU10@@Z ENDP ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@1@@Z
_TEXT	SEGMENT
__formal$dead$ = 48
_Ptr$ = 56
??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> >, COMDAT

; 724  :     static _CONSTEXPR20 void destroy(_Alloc&, _Uty* const _Ptr) {

$LN22:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rcx, QWORD PTR [rdx+32]
	mov	rbx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	mov	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 730  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy_at@UStringEntry@MSBTFile@@@std@@YAXQEAUStringEntry@MSBTFile@@@Z
_TEXT	SEGMENT
_Location$ = 8
??$destroy_at@UStringEntry@MSBTFile@@@std@@YAXQEAUStringEntry@MSBTFile@@@Z PROC ; std::destroy_at<MSBTFile::StringEntry>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??$destroy_at@UStringEntry@MSBTFile@@@std@@YAXQEAUStringEntry@MSBTFile@@@Z ENDP ; std::destroy_at<MSBTFile::StringEntry>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy_at@ULabelEntry@MSBTFile@@@std@@YAXQEAULabelEntry@MSBTFile@@@Z
_TEXT	SEGMENT
_Location$ = 8
??$destroy_at@ULabelEntry@MSBTFile@@@std@@YAXQEAULabelEntry@MSBTFile@@@Z PROC ; std::destroy_at<MSBTFile::LabelEntry>, COMDAT

; 314  : _CONSTEXPR20 void destroy_at(_Ty* const _Location) noexcept /* strengthened */ {

	add	rcx, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??$destroy_at@ULabelEntry@MSBTFile@@@std@@YAXQEAULabelEntry@MSBTFile@@@Z ENDP ; std::destroy_at<MSBTFile::LabelEntry>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy_at@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAXQEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@@Z
_TEXT	SEGMENT
_Location$ = 8
??$destroy_at@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAXQEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@@Z PROC ; std::destroy_at<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	jmp	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
??$destroy_at@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAXQEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@@Z ENDP ; std::destroy_at<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@0@@Z
_TEXT	SEGMENT
_Location$ = 48
??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@0@@Z PROC ; std::destroy_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> >, COMDAT

; 314  : _CONSTEXPR20 void destroy_at(_Ty* const _Location) noexcept /* strengthened */ {

$LN20:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	add	rcx, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	mov	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 323  : }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@0@@Z ENDP ; std::destroy_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??_GStringEntry@MSBTFile@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$dead$ = 56
??_GStringEntry@MSBTFile@@QEAAPEAXI@Z PROC		; MSBTFile::StringEntry::`scalar deleting destructor', COMDAT
$LN12:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_GStringEntry@MSBTFile@@QEAAPEAXI@Z ENDP		; MSBTFile::StringEntry::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??_GLabelEntry@MSBTFile@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$dead$ = 56
??_GLabelEntry@MSBTFile@@QEAAPEAXI@Z PROC		; MSBTFile::LabelEntry::`scalar deleting destructor', COMDAT
$LN12:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	add	rcx, 8

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_GLabelEntry@MSBTFile@@QEAAPEAXI@Z ENDP		; MSBTFile::LabelEntry::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??_G?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$dead$ = 56
??_G?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAXI@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::`scalar deleting destructor', COMDAT
$LN8:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 767  :         _Tidy();

	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_G?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAXI@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$dead$ = 56
??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@QEAAPEAXI@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>::`scalar deleting destructor', COMDAT
$LN18:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	add	rcx, 32					; 00000020H

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	mov	rcx, rbx
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UStringEntry@MSBTFile@@@std@@QEAAPEAXI@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MSBTFile::StringEntry>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z
_TEXT	SEGMENT
_Location$ = 48
<_Args_0>$dead$ = 56
<_Args_1>$ = 64
<_Args_2>$dead$ = 72
??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z PROC ; std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned int>,std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<>,0>, COMDAT

; 240  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

$LN13:
	push	rbx
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 301  :         : first(_Tuple_get<_Indices1>(_STD move(_Val1))...), second(_Tuple_get<_Indices2>(_STD move(_Val2))...) {}

	mov	rdx, QWORD PTR [r8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 240  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 301  :         : first(_Tuple_get<_Indices1>(_STD move(_Val1))...), second(_Tuple_get<_Indices2>(_STD move(_Val2))...) {}

	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 301  :         : first(_Tuple_get<_Indices1>(_STD move(_Val1))...), second(_Tuple_get<_Indices2>(_STD move(_Val2))...) {}

	mov	DWORD PTR [rbx+32], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 242  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z ENDP ; std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned int>,std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<>,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$dead$ = 56
_Val1$ = 64
_Val2$dead$ = 72
??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned int>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned int><std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>, COMDAT

; 305  :         : pair(_Val1, _Val2, index_sequence_for<_Types1...>{}, index_sequence_for<_Types2...>{}) {}

$LN9:
	push	rbx
	sub	rsp, 32					; 00000020H

; 301  :         : first(_Tuple_get<_Indices1>(_STD move(_Val1))...), second(_Tuple_get<_Indices2>(_STD move(_Val2))...) {}

	mov	rdx, QWORD PTR [r8]

; 305  :         : pair(_Val1, _Val2, index_sequence_for<_Types1...>{}, index_sequence_for<_Types2...>{}) {}

	mov	rbx, rcx

; 301  :         : first(_Tuple_get<_Indices1>(_STD move(_Val1))...), second(_Tuple_get<_Indices2>(_STD move(_Val2))...) {}

	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

; 305  :         : pair(_Val1, _Val2, index_sequence_for<_Types1...>{}, index_sequence_for<_Types2...>{}) {}

	mov	rax, rbx

; 301  :         : first(_Tuple_get<_Indices1>(_STD move(_Val1))...), second(_Tuple_get<_Indices2>(_STD move(_Val2))...) {}

	mov	DWORD PTR [rbx+32], 0

; 305  :         : pair(_Val1, _Val2, index_sequence_for<_Types1...>{}, index_sequence_for<_Types2...>{}) {}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned int>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned int><std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z
_TEXT	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$dead$ = 64
__formal$dead$ = 72
__formal$dead$ = 80
??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned int>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned int><std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<>,0>, COMDAT

; 301  :         : first(_Tuple_get<_Indices1>(_STD move(_Val1))...), second(_Tuple_get<_Indices2>(_STD move(_Val2))...) {}

$LN6:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rdx, QWORD PTR [rdx]
	mov	rbx, rcx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, rbx
	mov	DWORD PTR [rbx+32], 0
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned int>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,unsigned int><std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<>,0>
_TEXT	ENDS
END
